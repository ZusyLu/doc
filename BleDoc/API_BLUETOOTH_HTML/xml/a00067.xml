<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="a00067" kind="group">
    <compoundname>sl_bt_gattdb</compoundname>
    <title>GATT Database</title>
    <innergroup refid="a00068">GATT Service Property Flags</innergroup>
    <innergroup refid="a00069">GATT Attribute Security Requirement Flags</innergroup>
    <innergroup refid="a00070">GATT Database Flags</innergroup>
    <innergroup refid="a00071">GATT Characteristic Property Flags</innergroup>
    <innergroup refid="a00072">GATT Descriptor Property Flags</innergroup>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="a00067_1ga91d3c36ce798fd1c1bdf8af403dcc179" prot="public" static="no">
        <name>sl_bt_gattdb_service_type_t</name>
        <enumvalue id="a00067_1gga91d3c36ce798fd1c1bdf8af403dcc179a24c18d61afe32af7c652256fbc999b7e" prot="public">
          <name>sl_bt_gattdb_primary_service</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>(0x0) Primary service </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="a00067_1gga91d3c36ce798fd1c1bdf8af403dcc179a757c68d1188e774c4ee499da0373b0d0" prot="public">
          <name>sl_bt_gattdb_secondary_service</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>(0x1) Secondary service </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This enum defines GATT service types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4551" column="1" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4550" bodyend="4554"/>
      </memberdef>
      <memberdef kind="enum" id="a00067_1gaff72bb90c32e77883d3a776d3aa78a51" prot="public" static="no">
        <name>sl_bt_gattdb_value_type_t</name>
        <enumvalue id="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51a3531dc4dd0cea01b297f60e3fd2b5f04" prot="public">
          <name>sl_bt_gattdb_fixed_length_value</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>(0x1) A fixed-length value managed by the local GATT server for responding the read and write requests of remote GATT clients </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ab791bcf445cf4169df2a946d711ed726" prot="public">
          <name>sl_bt_gattdb_variable_length_value</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>(0x2) A variable-length value managed by the local GATT server for responding the read and write requests of remote GATT clients </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" prot="public">
          <name>sl_bt_gattdb_user_managed_value</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>(0x3) A value managed by the user application for responding the read and write requests of remote GATT clients. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This enum defines characteristic and descriptor value types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4562" column="1" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4561" bodyend="4577"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00067_1ga33d351121d4c9ac2fef4a131c71de5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_new_session</definition>
        <argsstring>(uint16_t *session)</argsstring>
        <name>sl_bt_gattdb_new_session</name>
        <param>
          <type>uint16_t *</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a new GATT database update session. If the operation is successful, the Bluetooth stack returns a session ID, with which, the GATT database can be updated by calling other database management APIs of this class. Changes in the database are not immediately saved. Unsaved changes are invisible to a connected remote GATT client.</para><para>After all changes were performed successfully, commit the changes using the <ref refid="a00067_1ga7f3e4b0ac0c55a23499a993770d88d34" kindref="member">sl_bt_gattdb_commit</ref> command. The Bluetooth stack will save the changes and handle GATT caching as needed. Unsaved database changes can also be cancelled by calling the <ref refid="a00067_1ga0a1120ba72b56959371357be3ea6ce4b" kindref="member">sl_bt_gattdb_abort</ref> command. In either case, after a commit or abort command is called, the current session is closed and the session ID becomes invalid.</para><para>Only one session is allowed at a time. Error SL_STATUS_ALREADY_EXISTS is returned if another session has been started already.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1gaa5ed7d70b76a59ef38a050ce030883b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_add_service</definition>
        <argsstring>(uint16_t session, uint8_t type, uint8_t property, size_t uuid_len, const uint8_t *uuid, uint16_t *service)</argsstring>
        <name>sl_bt_gattdb_add_service</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>uuid_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a service into the local GATT database. On success, the service is appended to the service list and is in stopped state. Use <ref refid="a00067_1ga4281249ec84b03a8df91cab507f042bf" kindref="member">sl_bt_gattdb_start_service</ref> command to set it visible to remote GATT clients.</para><para>It is not allowed to add the Generic Attribute Profile service. If the application needs GATT caching, enable the feature in the configuration of this component and the GATT server will handle GATT caching according to the procedures specified by the Bluetooth core specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum <ref refid="a00067_1ga91d3c36ce798fd1c1bdf8af403dcc179" kindref="member">sl_bt_gattdb_service_type_t</ref>. The service type. Values:<itemizedlist>
<listitem><para><bold>sl_bt_gattdb_primary_service (0x0):</bold> Primary service</para></listitem><listitem><para><bold>sl_bt_gattdb_secondary_service (0x1):</bold> Secondary service </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">property</parametername>
</parameternamelist>
<parameterdescription>
<para>Service properties. Value: 0 or bit flag <ref refid="a00068_1ga0351aafe5e0e3faaae95a1e286acd99b" kindref="member">SL_BT_GATTDB_ADVERTISED_SERVICE</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in <computeroutput>uuid</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The service UUID in little endian format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle. This handle is ensured valid in current session. It may change after the session if attributes have been inserted or deleted in front of it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4748" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga9eb742007904140d76071699d16a19e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_remove_service</definition>
        <argsstring>(uint16_t session, uint16_t service)</argsstring>
        <name>sl_bt_gattdb_remove_service</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a service and its characteristics from the local GATT database.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4765" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga5f748877ee2ac92e5f3c3fe82e06b1ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_add_included_service</definition>
        <argsstring>(uint16_t session, uint16_t service, uint16_t included_service, uint16_t *attribute)</argsstring>
        <name>sl_bt_gattdb_add_included_service</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>service</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>included_service</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an included-service attribute to a service.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service which the included-service attribute is added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">included_service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service to be included </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>The included-service attribute handle. This handle is ensured valid in current session. It may change after the session if attributes have been inserted or deleted in front of it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1gabda1ed40f8d35486b6dcf2e340d02aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_remove_included_service</definition>
        <argsstring>(uint16_t session, uint16_t attribute)</argsstring>
        <name>sl_bt_gattdb_remove_included_service</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an included-service attribute from a service.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>The included-service attribute handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1gae8906f2354dfc81e0de9b37bc466ac46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_add_uuid16_characteristic</definition>
        <argsstring>(uint16_t session, uint16_t service, uint16_t property, uint16_t security, uint8_t flag, sl_bt_uuid_16_t uuid, uint8_t value_type, uint16_t maxlen, size_t value_len, const uint8_t *value, uint16_t *characteristic)</argsstring>
        <name>sl_bt_gattdb_add_uuid16_characteristic</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>service</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>security</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="a00127" kindref="compound">sl_bt_uuid_16_t</ref></type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>characteristic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a 16-bits UUID characteristic to a service. On success, the characteristic is appended to the characteristic list of the service and it inherits the started or stopped state of the service. In addition, it can be started and stopped separately with the <ref refid="a00067_1ga255845126ea162b7f11fe19dc3ffc98c" kindref="member">sl_bt_gattdb_start_characteristic</ref> and <ref refid="a00067_1ga1dd56bbbc5025f6c434ca3714a62c358" kindref="member">sl_bt_gattdb_stop_characteristic</ref> commands.</para><para>If the <computeroutput>flag</computeroutput> parameter does not set <ref refid="a00070_1ga3d4d9f581a2e772fd39ead2059fbf3dc" kindref="member">SL_BT_GATTDB_NO_AUTO_CCCD</ref>, the stack will automatically add a Client Characteristic Configuration descriptor to this characteristic when it has the notify or indicate property. If <ref refid="a00070_1ga3d4d9f581a2e772fd39ead2059fbf3dc" kindref="member">SL_BT_GATTDB_NO_AUTO_CCCD</ref> is set, the user application should add the descriptor separately as needed.</para><para>A Characteristic Extended Properties descriptor is automatically added if the reliable write property is set.</para><para>Use the <ref refid="a00067_1gaf7a6345dfa7305c3c30804eebcc561cd" kindref="member">sl_bt_gattdb_add_uuid128_characteristic</ref> command to add a 128-bits UUID characteristic.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service which the characteristic is added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">property</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic value properties. Value: bitmask of <ref refid="a00071" kindref="compound">GATT Characteristic Property Flags</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">security</parametername>
</parameternamelist>
<parameterdescription>
<para>Security requirement. Value: 0 or bitmask of <ref refid="a00069" kindref="compound">GATT Attribute Security Requirement Flags</ref>. A security requirement flag for a property is ignored if the property is not set for the characteristic value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flag</parametername>
</parameternamelist>
<parameterdescription>
<para>Option flags. Value: 0 or bitmask of <ref refid="a00070" kindref="compound">GATT Database Flags</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The 16-bits UUID in little endian format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum <ref refid="a00067_1gaff72bb90c32e77883d3a776d3aa78a51" kindref="member">sl_bt_gattdb_value_type_t</ref>. The value type. Values:<itemizedlist>
<listitem><para><bold>sl_bt_gattdb_fixed_length_value (0x1):</bold> A fixed-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_variable_length_value (0x2):</bold> A variable-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_user_managed_value (0x3):</bold> A value managed by the user application for responding the read and write requests of remote GATT clients. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum length of the characteristic value. Ignored if <computeroutput>value_type</computeroutput> is <ref refid="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" kindref="member">sl_bt_gattdb_user_managed_value</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in <computeroutput>value</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial characteristic value. Length of this value must be less than or equal to <computeroutput>maxlen</computeroutput>. Ignored if <computeroutput>value_type</computeroutput> is <ref refid="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" kindref="member">sl_bt_gattdb_user_managed_value</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle. This handle is ensured valid in current session. It may change after the session if attributes have been inserted or deleted in front of it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4857" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1gaf7a6345dfa7305c3c30804eebcc561cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_add_uuid128_characteristic</definition>
        <argsstring>(uint16_t session, uint16_t service, uint16_t property, uint16_t security, uint8_t flag, uuid_128 uuid, uint8_t value_type, uint16_t maxlen, size_t value_len, const uint8_t *value, uint16_t *characteristic)</argsstring>
        <name>sl_bt_gattdb_add_uuid128_characteristic</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>service</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>security</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="a00119" kindref="compound">uuid_128</ref></type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>characteristic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a 128-bits UUID characteristic to a service. On success, the characteristic is appended to the characteristic list of the service and it inherits the started or stopped state of the service. In addition, it can be started and stopped separately with the <ref refid="a00067_1ga255845126ea162b7f11fe19dc3ffc98c" kindref="member">sl_bt_gattdb_start_characteristic</ref> and <ref refid="a00067_1ga1dd56bbbc5025f6c434ca3714a62c358" kindref="member">sl_bt_gattdb_stop_characteristic</ref> commands.</para><para>If the <computeroutput>flag</computeroutput> parameter does not set <ref refid="a00070_1ga3d4d9f581a2e772fd39ead2059fbf3dc" kindref="member">SL_BT_GATTDB_NO_AUTO_CCCD</ref>, the stack will automatically add a Client Characteristic Configuration descriptor to this characteristic when it has the notify or indicate property. If <ref refid="a00070_1ga3d4d9f581a2e772fd39ead2059fbf3dc" kindref="member">SL_BT_GATTDB_NO_AUTO_CCCD</ref> is set, the user application should add the descriptor separately as needed.</para><para>A Characteristic Extended Properties descriptor is automatically added if the reliable write property is set.</para><para>Use the <ref refid="a00067_1gae8906f2354dfc81e0de9b37bc466ac46" kindref="member">sl_bt_gattdb_add_uuid16_characteristic</ref> command to add a 16-bits UUID characteristic.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service which the characteristic is added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">property</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic value properties. Value: bitmask of <ref refid="a00071" kindref="compound">GATT Characteristic Property Flags</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">security</parametername>
</parameternamelist>
<parameterdescription>
<para>Security requirement. Value: 0 or bitmask of <ref refid="a00069" kindref="compound">GATT Attribute Security Requirement Flags</ref>. A security requirement flag for a property is ignored if the property is not set for the characteristic value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flag</parametername>
</parameternamelist>
<parameterdescription>
<para>Option flags. Value: 0 or bitmask of <ref refid="a00070" kindref="compound">GATT Database Flags</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The 128-bits UUID in little endian format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum <ref refid="a00067_1gaff72bb90c32e77883d3a776d3aa78a51" kindref="member">sl_bt_gattdb_value_type_t</ref>. The value type. Values:<itemizedlist>
<listitem><para><bold>sl_bt_gattdb_fixed_length_value (0x1):</bold> A fixed-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_variable_length_value (0x2):</bold> A variable-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_user_managed_value (0x3):</bold> A value managed by the user application for responding the read and write requests of remote GATT clients. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum length of the characteristic value. Ignored if <computeroutput>value_type</computeroutput> is <ref refid="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" kindref="member">sl_bt_gattdb_user_managed_value</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in <computeroutput>value</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial characteristic value. Length of this value must be less than or equal to <computeroutput>maxlen</computeroutput>. Ignored if <computeroutput>value_type</computeroutput> is <ref refid="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" kindref="member">sl_bt_gattdb_user_managed_value</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle. This handle is ensured valid in current session. It may change after the session if attributes have been inserted or deleted in front of it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4925" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga1909f88315c8740e578ba2bc4f733ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_remove_characteristic</definition>
        <argsstring>(uint16_t session, uint16_t characteristic)</argsstring>
        <name>sl_bt_gattdb_remove_characteristic</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>characteristic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a characteristic and its descriptors from a service.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle of the characteristic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4948" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga0587a0d1003c0f1f18b78f8026111388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_add_uuid16_descriptor</definition>
        <argsstring>(uint16_t session, uint16_t characteristic, uint16_t property, uint16_t security, sl_bt_uuid_16_t uuid, uint8_t value_type, uint16_t maxlen, size_t value_len, const uint8_t *value, uint16_t *descriptor)</argsstring>
        <name>sl_bt_gattdb_add_uuid16_descriptor</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>characteristic</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>security</declname>
        </param>
        <param>
          <type><ref refid="a00127" kindref="compound">sl_bt_uuid_16_t</ref></type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a 16-bits UUID descriptor to a characteristic. On success, the descriptor is appended to the descriptor list of the characteristic and it inherits the started or stopped state of the characteristic.</para><para>This command does not support adding Characteristic Extended Properties descriptors. This descriptor is automatically added if the characteristic value has the reliable-write property, or when a Characteristic User Description descriptor is added and the user description has the write property.</para><para>Use the <ref refid="a00067_1ga56ffa16478c17e3a15bfd3df9192cf57" kindref="member">sl_bt_gattdb_add_uuid128_descriptor</ref> command to add a 128-bits UUID descriptor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle of the characteristic the descriptor is added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">property</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor properties. Value: bitmask of <ref refid="a00072" kindref="compound">GATT Descriptor Property Flags</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">security</parametername>
</parameternamelist>
<parameterdescription>
<para>Security requirement. Value: 0 or bitmask of <ref refid="a00069" kindref="compound">GATT Attribute Security Requirement Flags</ref>. A security requirement flag for a property is ignored if the property is not set for the descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The 16-bits UUID in little endian format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum <ref refid="a00067_1gaff72bb90c32e77883d3a776d3aa78a51" kindref="member">sl_bt_gattdb_value_type_t</ref>. The value type. Ignored if this is a Client Characteristic Configuration descriptor. Values:<itemizedlist>
<listitem><para><bold>sl_bt_gattdb_fixed_length_value (0x1):</bold> A fixed-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_variable_length_value (0x2):</bold> A variable-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_user_managed_value (0x3):</bold> A value managed by the user application for responding the read and write requests of remote GATT clients. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum length of the descriptor value. Ignored if <computeroutput>value_type</computeroutput> is sl_bt_gattdb_user_managed_value, or if this is a Client Characteristic Configuration descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in <computeroutput>value</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial descriptor value. Length of this value must be less than or equal to <computeroutput>maxlen</computeroutput>. Ingored if value type is <ref refid="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" kindref="member">sl_bt_gattdb_user_managed_value</ref>, or if this is a Client Characteristic Configuration descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor attribute handle. This handle is ensured valid in current session. It may change after the session if attributes have been inserted or deleted in front of it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5002" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga56ffa16478c17e3a15bfd3df9192cf57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_add_uuid128_descriptor</definition>
        <argsstring>(uint16_t session, uint16_t characteristic, uint16_t property, uint16_t security, uuid_128 uuid, uint8_t value_type, uint16_t maxlen, size_t value_len, const uint8_t *value, uint16_t *descriptor)</argsstring>
        <name>sl_bt_gattdb_add_uuid128_descriptor</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>characteristic</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>security</declname>
        </param>
        <param>
          <type><ref refid="a00119" kindref="compound">uuid_128</ref></type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value_type</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a 128-bits UUID descriptor to a characteristic. On success, the descriptor is appended to the descriptor list of the characteristic and it inherits the started or stopped state of the characteristic.</para><para>This command does not support adding Characteristic Extended Properties descriptors. This descriptor is automatically added if the characteristic value has the reliable-write property, or when a Characteristic User Description descriptor is added and the user description has the write property.</para><para>Use the <ref refid="a00067_1ga0587a0d1003c0f1f18b78f8026111388" kindref="member">sl_bt_gattdb_add_uuid16_descriptor</ref> command to add a 16-bits UUID descriptor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle of the characteristic the descriptor is added to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">property</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask of characteristic descriptor properties </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">security</parametername>
</parameternamelist>
<parameterdescription>
<para>Security requirement. Value: 0 or bitmask of <ref refid="a00069" kindref="compound">GATT Attribute Security Requirement Flags</ref>. A security requirement flag for a property is ignored if the property is not set for the descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The 128-bits UUID in little endian format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum <ref refid="a00067_1gaff72bb90c32e77883d3a776d3aa78a51" kindref="member">sl_bt_gattdb_value_type_t</ref>. The value type. Ignored if this is a Client Characteristic Configuration descriptor. Values:<itemizedlist>
<listitem><para><bold>sl_bt_gattdb_fixed_length_value (0x1):</bold> A fixed-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_variable_length_value (0x2):</bold> A variable-length value managed by the local GATT server for responding the read and write requests of remote GATT clients</para></listitem><listitem><para><bold>sl_bt_gattdb_user_managed_value (0x3):</bold> A value managed by the user application for responding the read and write requests of remote GATT clients. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum length of the descriptor value. Ignored if <computeroutput>value_type</computeroutput> is sl_bt_gattdb_user_managed_value, or if this is a Client Characteristic Configuration descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in <computeroutput>value</computeroutput> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial descriptor value. Length of this value must be less than or equal to <computeroutput>maxlen</computeroutput>. Ingored if value type is <ref refid="a00067_1ggaff72bb90c32e77883d3a776d3aa78a51ae4b8bc1c873f8d4bad0e92ab2ad62554" kindref="member">sl_bt_gattdb_user_managed_value</ref>, or if this is a Client Characteristic Configuration descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor attribute handle. This handle is ensured valid in current session. It may change after the session if attributes have been inserted or deleted in front of it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5063" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga17e454ff3e2a9288587a0654c1c25198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_remove_descriptor</definition>
        <argsstring>(uint16_t session, uint16_t descriptor)</argsstring>
        <name>sl_bt_gattdb_remove_descriptor</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a descriptor from a characteristic.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5084" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga4281249ec84b03a8df91cab507f042bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_start_service</definition>
        <argsstring>(uint16_t session, uint16_t service)</argsstring>
        <name>sl_bt_gattdb_start_service</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a service so that the service and its attributes including characteristics and descriptors become visible to remote GATT clients after this change has been committed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5099" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga301a2e2219d8f761707f8561938e6835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_stop_service</definition>
        <argsstring>(uint16_t session, uint16_t service)</argsstring>
        <name>sl_bt_gattdb_stop_service</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>service</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop a service so that the service and its attributes including characteristics and descriptors become invisible to remote GATT clients after this change has been committed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">service</parametername>
</parameternamelist>
<parameterdescription>
<para>The service declaration attribute handle of the service</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga255845126ea162b7f11fe19dc3ffc98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_start_characteristic</definition>
        <argsstring>(uint16_t session, uint16_t characteristic)</argsstring>
        <name>sl_bt_gattdb_start_characteristic</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>characteristic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a characteristic so that the characteristic and its attributes become visible to remote GATT clients after this change has been committed. Error SL_STATUS_INVALID_STATE is returned if the parent service is not started.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle of the characteristic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga1dd56bbbc5025f6c434ca3714a62c358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_stop_characteristic</definition>
        <argsstring>(uint16_t session, uint16_t characteristic)</argsstring>
        <name>sl_bt_gattdb_stop_characteristic</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>characteristic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop a characteristic so that the characteristic and its attributes become invisible to remote GATT clients after this change has been committed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">characteristic</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic value attribute handle of the characteristic</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga7f3e4b0ac0c55a23499a993770d88d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_commit</definition>
        <argsstring>(uint16_t session)</argsstring>
        <name>sl_bt_gattdb_commit</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save all changes performed in current session and close the session. The stack will assign final handles to new and affected attributes, and handle GATT caching as needed. The stack removes the client characteristic configurations of non-connected GATT clients except the service-changed configuration. For connected GATT clients during this database change, the stack removes the configurations to the removed characteristics. The session ID, temporary attribute handles returned during this session, and other existing attribute handles that are after newly added or removed attributes are invalidated.</para><para>Some attribute handles returned in this session may become invalid if attributes are not created in the order they present in the database. In this case, attribute handle cache of the database in the user application must be refreshed to avoid accidentally using an invalidated handle in subsequent operations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00067_1ga0a1120ba72b56959371357be3ea6ce4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_bt_gattdb_abort</definition>
        <argsstring>(uint16_t session)</argsstring>
        <name>sl_bt_gattdb_abort</name>
        <param>
          <type>uint16_t</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel all changes performed in current session and close the session. The database remains at the same state as just before the session was started. The session ID and all temporary attribute handles returned during this session are invalidated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The database update session ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="5183" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="a00067_1ga141e15417b765121dc7d5119438257da" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_new_session_id</name>
        <initializer>0x00460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4510" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga0ba1a4c7c4edbaba1e0619521711694f" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_add_service_id</name>
        <initializer>0x01460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4511" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga587b4460021582a761bb38acc82c5e6d" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_remove_service_id</name>
        <initializer>0x02460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4512" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga2851bf9ac0e89c4ebc589f838f400ab3" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_add_included_service_id</name>
        <initializer>0x03460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4513" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gaf4f285c6e591a72442d3851f348d30e4" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_remove_included_service_id</name>
        <initializer>0x04460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4514" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga1d7deb25e446229d20300d1ef12b1604" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_add_uuid16_characteristic_id</name>
        <initializer>0x05460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4515" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga183ecf93317f7446c672c5ee6707d89b" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_add_uuid128_characteristic_id</name>
        <initializer>0x06460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4516" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga82404aad2fae0f7b79034f6bd718e8db" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_remove_characteristic_id</name>
        <initializer>0x07460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4517" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga7f92be0bee53d0724a43bd4a5bc20d03" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_add_uuid16_descriptor_id</name>
        <initializer>0x08460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4518" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga65df5e9a73c191993fd41a907ec4fba5" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_add_uuid128_descriptor_id</name>
        <initializer>0x09460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4519" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga4957625dbb6cfeb671901bf3b0e59cc6" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_remove_descriptor_id</name>
        <initializer>0x0a460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4520" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga34624ed1043b55e2958268a81b75c391" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_start_service_id</name>
        <initializer>0x0b460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4521" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gacbed2540171dffcb2a70e164b0587efe" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_stop_service_id</name>
        <initializer>0x0c460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4522" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga22ff8516223b2fd111de6eaf4dc651cb" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_start_characteristic_id</name>
        <initializer>0x0d460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4523" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga019455cc154201886d0864fc5668cc6b" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_stop_characteristic_id</name>
        <initializer>0x0e460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4524" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gace5639ea9d505eb77fab46acd62764f1" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_commit_id</name>
        <initializer>0x0f460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4525" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga1764b36eb21f9e1a3c3cc9c17633cd86" prot="public" static="no">
        <name>sl_bt_cmd_gattdb_abort_id</name>
        <initializer>0x10460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4526" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gae1c1826686a0f62677bc630a41f82966" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_new_session_id</name>
        <initializer>0x00460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4527" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga47839da79e9198a555716f640aa822d7" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_add_service_id</name>
        <initializer>0x01460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4528" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gadce50525e060195a9a30b42a44641a15" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_remove_service_id</name>
        <initializer>0x02460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4529" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gabffe81f97c24448b13e6a4abd508d712" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_add_included_service_id</name>
        <initializer>0x03460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4530" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga27c338406d75dea31c465c3a455d8b15" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_remove_included_service_id</name>
        <initializer>0x04460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4531" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gae39b21b38f4c311672c981659844fe1a" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_add_uuid16_characteristic_id</name>
        <initializer>0x05460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4532" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga1e1238f1304cceac3858230baf07ec4b" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_add_uuid128_characteristic_id</name>
        <initializer>0x06460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4533" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga31633720aee2ee38755f80edcbc1b100" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_remove_characteristic_id</name>
        <initializer>0x07460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4534" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga174bce27e2bff923a78926309f66c96e" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_add_uuid16_descriptor_id</name>
        <initializer>0x08460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4535" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga6473232b854ee262822e3f9214f6949c" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_add_uuid128_descriptor_id</name>
        <initializer>0x09460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4536" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga417b9a95fc9daa925ec4bf4ccc929f48" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_remove_descriptor_id</name>
        <initializer>0x0a460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4537" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gace7a12f2f521a4a6feb10b71c3d62641" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_start_service_id</name>
        <initializer>0x0b460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4538" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gada9aa9588165d3fa2803b99d7993b9be" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_stop_service_id</name>
        <initializer>0x0c460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4539" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1gae1abf77adf36ba6bb07c54db19cac8b4" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_start_characteristic_id</name>
        <initializer>0x0d460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4540" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga6b58e2a2a3c3bde8699a2064b9f03827" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_stop_characteristic_id</name>
        <initializer>0x0e460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4541" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga4941390d11ba4317472f0a8633db6dfb" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_commit_id</name>
        <initializer>0x0f460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4542" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00067_1ga59122361a9c4363979a29a9680b72b17" prot="public" static="no">
        <name>sl_bt_rsp_gattdb_abort_id</name>
        <initializer>0x10460020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" line="4543" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/btapi/inc/sl_bt_api.h" bodystart="4543" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>GATT Database. </para>    </briefdescription>
    <detaileddescription>
<para>These commands and events are used for managing the local GATT database.</para><para>Many commands in this class return the handles of created attributes. These handles may change during commit if attributes are not created in the order they present in the database. For example, when creating a new service using the <ref refid="a00067_1gaa5ed7d70b76a59ef38a050ce030883b8" kindref="member">sl_bt_gattdb_add_service</ref> command, the service declaration handle returned from this command becomes invalid later when an attribute is added or removed in front of this service. If the user requires that the attribute handles returned from these commands must remain valid after the database update has been committed, attributes must be created in the order they present in the database. </para>    </detaileddescription>
  </compounddef>
</doxygen>
