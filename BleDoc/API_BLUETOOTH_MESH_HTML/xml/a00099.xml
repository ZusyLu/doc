<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="a00099" kind="group">
    <compoundname>sl_btmesh_config_client</compoundname>
    <title>Bluetooth Mesh Configuration Client</title>
    <innergroup refid="a00100">sl_btmesh_evt_config_client_request_modified</innergroup>
    <innergroup refid="a00101">sl_btmesh_evt_config_client_netkey_status</innergroup>
    <innergroup refid="a00102">sl_btmesh_evt_config_client_netkey_list</innergroup>
    <innergroup refid="a00103">sl_btmesh_evt_config_client_netkey_list_end</innergroup>
    <innergroup refid="a00104">sl_btmesh_evt_config_client_appkey_status</innergroup>
    <innergroup refid="a00105">sl_btmesh_evt_config_client_appkey_list</innergroup>
    <innergroup refid="a00106">sl_btmesh_evt_config_client_appkey_list_end</innergroup>
    <innergroup refid="a00107">sl_btmesh_evt_config_client_binding_status</innergroup>
    <innergroup refid="a00108">sl_btmesh_evt_config_client_bindings_list</innergroup>
    <innergroup refid="a00109">sl_btmesh_evt_config_client_bindings_list_end</innergroup>
    <innergroup refid="a00110">sl_btmesh_evt_config_client_model_pub_status</innergroup>
    <innergroup refid="a00111">sl_btmesh_evt_config_client_model_sub_status</innergroup>
    <innergroup refid="a00112">sl_btmesh_evt_config_client_subs_list</innergroup>
    <innergroup refid="a00113">sl_btmesh_evt_config_client_subs_list_end</innergroup>
    <innergroup refid="a00114">sl_btmesh_evt_config_client_heartbeat_pub_status</innergroup>
    <innergroup refid="a00115">sl_btmesh_evt_config_client_heartbeat_sub_status</innergroup>
    <innergroup refid="a00116">sl_btmesh_evt_config_client_beacon_status</innergroup>
    <innergroup refid="a00117">sl_btmesh_evt_config_client_default_ttl_status</innergroup>
    <innergroup refid="a00118">sl_btmesh_evt_config_client_gatt_proxy_status</innergroup>
    <innergroup refid="a00119">sl_btmesh_evt_config_client_relay_status</innergroup>
    <innergroup refid="a00120">sl_btmesh_evt_config_client_network_transmit_status</innergroup>
    <innergroup refid="a00121">sl_btmesh_evt_config_client_identity_status</innergroup>
    <innergroup refid="a00122">sl_btmesh_evt_config_client_friend_status</innergroup>
    <innergroup refid="a00123">sl_btmesh_evt_config_client_key_refresh_phase_status</innergroup>
    <innergroup refid="a00124">sl_btmesh_evt_config_client_lpn_polltimeout_status</innergroup>
    <innergroup refid="a00125">sl_btmesh_evt_config_client_dcd_data</innergroup>
    <innergroup refid="a00126">sl_btmesh_evt_config_client_dcd_data_end</innergroup>
    <innergroup refid="a00127">sl_btmesh_evt_config_client_reset_status</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00099_1ga79d5cb461cbf221e74385ffe381bca0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_cancel_request</definition>
        <argsstring>(uint32_t handle)</argsstring>
        <name>sl_btmesh_config_client_cancel_request</name>
        <param>
          <type>uint32_t</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel an ongoing request releasing resources allocated at the Configuration Client. Note that this call does no undo any setting a node may have made if it had received the request already.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gafe3d51666aaa3adadfb511fbd7172440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_request_status</definition>
        <argsstring>(uint32_t handle, uint16_t *server_address, uint16_t *opcode, uint32_t *age_ms, uint32_t *remaining_ms, uint8_t *friend_acked)</argsstring>
        <name>sl_btmesh_config_client_get_request_status</name>
        <param>
          <type>uint32_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>opcode</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>age_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>remaining_ms</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>friend_acked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the status of a pending request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the Configuration Server </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">opcode</parametername>
</parameternamelist>
<parameterdescription>
<para>Message opcode used in the request. Opcodes are defined in the Bluetooth mesh stack 1.0 specification. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">age_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Time in milliseconds that the request has been pending </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">remaining_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Time in milliseconds before the request times out. Note that timeout may be adjusted if it&apos;s determined that the request is destined to an LPN, which may respond very slowly. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">friend_acked</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, response has been acknowledged by a Friend node, so it is destined to an LPN and may take a long time to complete.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaee42b40675f7266f51baef613fe794a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_default_timeout</definition>
        <argsstring>(uint32_t *timeout_ms, uint32_t *lpn_timeout_ms)</argsstring>
        <name>sl_btmesh_config_client_get_default_timeout</name>
        <param>
          <type>uint32_t *</type>
          <declname>timeout_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>lpn_timeout_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default timeout for the configuration client requests. If there is no response when the timeout expires, a configuration request is considered to have failed and an event with an error result will be generated. Note that, if the Bluetooth mesh stack notices the request is destined to an LPN by receiving an on-behalf-of acknowledgment from a Friend node, the timeout in use will be changed to the LPN default timeout.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in milliseconds. Default timeout is 5 s (5000 ms). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">lpn_timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in milliseconds when communicating with an LPN node. Default LPN timeout is 120 s (120000 ms).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga87d9e7a3f12dd921dd794274738b82a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_default_timeout</definition>
        <argsstring>(uint32_t timeout_ms, uint32_t lpn_timeout_ms)</argsstring>
        <name>sl_btmesh_config_client_set_default_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lpn_timeout_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the default timeout for the configuration client requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in milliseconds. Default timeout is 5 s (5000 ms). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lpn_timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in milliseconds when communicating with an LPN node. Default LPN timeout is 120 s (120000 ms).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga114fb59ae466106565a96868d93880df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_add_netkey</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_add_netkey</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a network key to a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the network key to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00101" kindref="compound">sl_btmesh_evt_config_client_netkey_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga09d2709771b5e7a9dcf1e4522aed11fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_remove_netkey</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_remove_netkey</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a network key from a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the network key to remove </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00101" kindref="compound">sl_btmesh_evt_config_client_netkey_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga7d665912290bb65a964cd551de3e4986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_list_netkeys</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_list_netkeys</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List the network keys on a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00102" kindref="compound">sl_btmesh_evt_config_client_netkey_list</ref></para></listitem><listitem><para><ref refid="a00103" kindref="compound">sl_btmesh_evt_config_client_netkey_list_end</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga53fc4c71ac44d78b2e3dd92a9bd47278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_add_appkey</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t appkey_index, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_add_appkey</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>appkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an application key to a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the application key to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the network key to bind the application key to on the node. Note that this may be different from the binding on other nodes or on the Configuration Client if desired. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00104" kindref="compound">sl_btmesh_evt_config_client_appkey_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga3b6a630cb5a0e7129e06728cb5febafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_remove_appkey</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t appkey_index, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_remove_appkey</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>appkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an application key from a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the application key to remove </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the network key bound to the application key to on the node. Note that this may be different from the binding on other nodes or on the Configuration Client. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00104" kindref="compound">sl_btmesh_evt_config_client_appkey_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gae68315af648ff5f78dd3b928cf045695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_list_appkeys</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_list_appkeys</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List the application keys on a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key index for the key used as the query parameter. The result contains the indices of the application keys bound to this network key on the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00105" kindref="compound">sl_btmesh_evt_config_client_appkey_list</ref></para></listitem><listitem><para><ref refid="a00106" kindref="compound">sl_btmesh_evt_config_client_appkey_list_end</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga12c767b6b5014bba8e790cb47c1930f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_bind_model</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint16_t appkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_bind_model</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>appkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bind an application key to a model.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the application key to bind to the model </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00107" kindref="compound">sl_btmesh_evt_config_client_binding_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gabb0d1f130f4fff7268d390d74facde98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_unbind_model</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint16_t appkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_unbind_model</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>appkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unbind an application key from a model</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the application key to unbind from the model </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00107" kindref="compound">sl_btmesh_evt_config_client_binding_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga033df184a3316eb016c09c0f05fa2f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_list_bindings</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_list_bindings</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List application key bindings of a model.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be queried resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to query. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00108" kindref="compound">sl_btmesh_evt_config_client_bindings_list</ref></para></listitem><listitem><para><ref refid="a00109" kindref="compound">sl_btmesh_evt_config_client_bindings_list_end</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gad18fdd68df4d029e3d8bac7c6a7ce240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_model_pub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_model_pub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the model publication state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be queried resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to query. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00110" kindref="compound">sl_btmesh_evt_config_client_model_pub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga672868aeae0430ce06b1fc33e1e5cb59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_model_pub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint16_t address, uint16_t appkey_index, uint8_t credentials, uint8_t ttl, uint32_t period_ms, uint8_t retransmit_count, uint16_t retransmit_interval_ms, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_model_pub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>appkey_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>credentials</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ttl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period_ms</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>retransmit_count</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>retransmit_interval_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model publication state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>The address to publish to. It can be a unicast address, a virtual address, or a group address. It can also be the unassigned address to stop the model from publishing. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The application key index to use for the published messages. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>Friendship credential flag. If zero, publication is done using normal credentials. If one, it is done with friendship credentials, meaning only the friend can decrypt the published message and relay it forward using the normal credentials. The default value is 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ttl</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication time-to-live value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication period in milliseconds. Note that the resolution of the publication period is limited by the specification to 100 ms up to a period of 6.3 s, 1 s up to a period of 63 s, 10 s up to a period of 630 s, and 10 minutes above that. Maximum period allowed is 630 minutes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retransmit_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication retransmission count. Valid values range from 0 to 7. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retransmit_interval_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication retransmission interval in millisecond units. The range of value is 50 to 1600 ms, and the resolution of the value is 50 milliseconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00110" kindref="compound">sl_btmesh_evt_config_client_model_pub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaa3e8e649012e446fa2c72ff4685d9cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_model_pub_va</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uuid_128 address, uint16_t appkey_index, uint8_t credentials, uint8_t ttl, uint32_t period_ms, uint8_t retransmit_count, uint16_t retransmit_interval_ms, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_model_pub_va</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type><ref refid="a00211" kindref="compound">uuid_128</ref></type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>appkey_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>credentials</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ttl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period_ms</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>retransmit_count</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>retransmit_interval_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the model publication state with a full virtual publication address.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>The Label UUID (full virtual address) to publish to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The application key index to use for the published messages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>Friendship credential flag. If zero, publication is done using normal credentials. If one, it is done with friendship credentials, meaning only the friend can decrypt the published message and relay it forward using the normal credentials. The default value is 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ttl</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication time-to-live value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication period in milliseconds. Note that the resolution of the publication period is limited by the specification to 100 ms up to a period of 6.3 s, 1 s up to a period of 63 s, 10 s up to a period of 630 s, and 10 minutes above that. Maximum period allowed is 630 minutes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retransmit_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication retransmission count. Valid values range from 0 to 7. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retransmit_interval_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Publication retransmission interval in millisecond units. The range of value is 50 to 1600 ms. The resolution of the value is 50 milliseconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00110" kindref="compound">sl_btmesh_evt_config_client_model_pub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7658" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gab98d2d951117ae647a4b298e9e3dc685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_add_model_sub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint16_t sub_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_add_model_sub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an address to the model subscription list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sub_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The address to add to the subscription list. Note that the address has to be a group address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga7167ecedf3a8b740bcec4833970a23bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_add_model_sub_va</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uuid_128 sub_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_add_model_sub_va</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type><ref refid="a00211" kindref="compound">uuid_128</ref></type>
          <declname>sub_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a Label UUID (full virtual address) to the model subscription list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sub_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The full virtual address to add to the subscription list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga3885615b4b5be9f708e285551d4bc5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_remove_model_sub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint16_t sub_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_remove_model_sub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an address from the model subscription list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sub_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The address to remove from the subscription list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7753" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga15ba5bf27f5751466fb3d0e6f550823d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_remove_model_sub_va</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uuid_128 sub_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_remove_model_sub_va</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type><ref refid="a00211" kindref="compound">uuid_128</ref></type>
          <declname>sub_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a Label UUID (full virtual address) from the model subscription list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sub_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The full virtual address to remove from the subscription list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaf0c4060db9d05d5e1a70d65b583ec406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_model_sub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint16_t sub_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_model_sub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set (overwrite) model subscription address list to a single address.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sub_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The address to set as the subscription list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7812" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga4504d4b7f82f4c6462136ff3c8fff06b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_model_sub_va</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uuid_128 sub_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_model_sub_va</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type><ref refid="a00211" kindref="compound">uuid_128</ref></type>
          <declname>sub_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set (overwrite) model subscription address list to a single virtual address.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sub_address</parametername>
</parameternamelist>
<parameterdescription>
<para>The full virtual address to set as the subscription list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga6f4215eb6c1c8cdc349b87252e415c1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_clear_model_sub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_clear_model_sub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear (empty) the model subscription address list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be configured resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to configure. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to configure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00111" kindref="compound">sl_btmesh_evt_config_client_model_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7870" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga3faa008bf996fca47428b0039cc35522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_list_subs</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t elem_index, uint16_t vendor_id, uint16_t model_id, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_list_subs</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>elem_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vendor_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>model_id</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the subscription address list of a model.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elem_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the element where the model, which is about to be queried resides on the node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vendor_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor ID for the model to query. Use 0xFFFF for Bluetooth SIG models. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">model_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Model ID for the model to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00112" kindref="compound">sl_btmesh_evt_config_client_subs_list</ref></para></listitem><listitem><para><ref refid="a00113" kindref="compound">sl_btmesh_evt_config_client_subs_list_end</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga7cf9831c10a817ff37a2f5b96a47e86d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_heartbeat_pub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_heartbeat_pub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the heartbeat publication state of a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00114" kindref="compound">sl_btmesh_evt_config_client_heartbeat_pub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga26fbd0e5eee92fdaa477c3ece967d5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_heartbeat_pub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t destination_address, uint16_t netkey_index, uint8_t count_log, uint8_t period_log, uint8_t ttl, uint16_t features, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_heartbeat_pub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>destination_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>count_log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>period_log</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ttl</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>features</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the heartbeat publication state of a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">destination_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Heartbeat publication destination address. The address can&apos;t be a virtual address. Note that it can be the unassigned address, in which case the heartbeat publishing is disabled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the network key used to encrypt heartbeat messages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count_log</parametername>
</parameternamelist>
<parameterdescription>
<para>Heartbeat publication count logarithm-of-2 setting. Valid values are as follows:<itemizedlist>
<listitem><para><bold>0x00:</bold> Heartbeat messages are not sent</para></listitem><listitem><para><bold>0x01 .. 0x11:</bold> Node will send 2^(n-1) heartbeat messages</para></listitem><listitem><para><bold>0x12 .. 0xfe:</bold> Prohibited</para></listitem><listitem><para><bold>0xff:</bold> Hearbeat messages are sent indefinitely </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_log</parametername>
</parameternamelist>
<parameterdescription>
<para>Heartbeat publication period logarithm-of-2 setting. Valid values are as follows:<itemizedlist>
<listitem><para><bold>0x00:</bold> Heartbeat messages are not sent</para></listitem><listitem><para><bold>0x01 .. 0x11:</bold> Node will send a heartbeat message every 2^(n-1) seconds</para></listitem><listitem><para><bold>0x12 .. 0xff:</bold> Prohibited </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ttl</parametername>
</parameternamelist>
<parameterdescription>
<para>Time-to-live value for heartbeat messages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">features</parametername>
</parameternamelist>
<parameterdescription>
<para><parblock><para>Heartbeat trigger setting. For bits set in the bitmask, reconfiguration of the node feature associated with the bit will result in the node emitting a heartbeat message. Valid values are as follows:<itemizedlist>
<listitem><para><bold>Bit 0:</bold> Relay feature</para></listitem><listitem><para><bold>Bit 1:</bold> Proxy feature</para></listitem><listitem><para><bold>Bit 2:</bold> Friend feature</para></listitem><listitem><para><bold>Bit 3:</bold> Low power feature</para></listitem></itemizedlist>
</para><para>Remaining bits are reserved for future use. </para></parblock></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00114" kindref="compound">sl_btmesh_evt_config_client_heartbeat_pub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7968" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga4f1816e58cd46924ac8a152e27dcb973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_heartbeat_sub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_heartbeat_sub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the heartbeat subscription state of a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00115" kindref="compound">sl_btmesh_evt_config_client_heartbeat_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="7993" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga14bb9c2ca5965a308777d2d7689c26c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_heartbeat_sub</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t source_address, uint16_t destination_address, uint8_t period_log, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_heartbeat_sub</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>source_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>destination_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>period_log</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the heartbeat subscription state of a node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Source address for heartbeat messages, which must be either a unicast address or the unassigned address, in which case heartbeat messages are not processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">destination_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address for heartbeat messages. The address must be either the unicast address of the primary element of the node, a group address, or the unassigned address. If it is the unassigned address, heartbeat messages are not processed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">period_log</parametername>
</parameternamelist>
<parameterdescription>
<para>Heartbeat subscription period logarithm-of-2 setting. Valid values are as follows:<itemizedlist>
<listitem><para><bold>0x00:</bold> Heartbeat messages are not received</para></listitem><listitem><para><bold>0x01 .. 0x11:</bold> Node will receive heartbeat messages for 2^(n-1) seconds</para></listitem><listitem><para><bold>0x12 .. 0xff:</bold> Prohibited </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00115" kindref="compound">sl_btmesh_evt_config_client_heartbeat_sub_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8025" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga8a1183f616e2a2d59bc26401f3114900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_beacon</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_beacon</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node secure network beacon state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00116" kindref="compound">sl_btmesh_evt_config_client_beacon_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga7186b849bbaf6a6c7848ea164367a994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_beacon</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t value, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_beacon</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node secure network beacon state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Secure network beacon value to set. Valid values are:<itemizedlist>
<listitem><para>0: Node is not broadcasting secure network beacons</para></listitem><listitem><para>1: Node is broadcasting secure network beacons </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00116" kindref="compound">sl_btmesh_evt_config_client_beacon_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8069" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaa6c77addc0def03ded7582218de1c990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_default_ttl</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_default_ttl</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node default TTL state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00117" kindref="compound">sl_btmesh_evt_config_client_default_ttl_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gac8c20af67085dc27c13cd2b2644bbf89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_default_ttl</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t value, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_default_ttl</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node default TTL state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Default TTL value. Valid value range is from 2 to 127 for relayed PDUs, and 0 to indicate non-relayed PDUs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00117" kindref="compound">sl_btmesh_evt_config_client_default_ttl_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga40ee48a78a3c8ba4bc6199a8d1509dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_gatt_proxy</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_gatt_proxy</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node GATT proxy state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00118" kindref="compound">sl_btmesh_evt_config_client_gatt_proxy_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga96a76d897a1e13638ad723e0188a4162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_gatt_proxy</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t value, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_gatt_proxy</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node GATT proxy state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>GATT proxy value to set. Valid values are:<itemizedlist>
<listitem><para>0: Proxy feature is disabled</para></listitem><listitem><para>1: Proxy feature is enabled </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00118" kindref="compound">sl_btmesh_evt_config_client_gatt_proxy_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaa50d0cd5d00bc3356b6e4682ad81e2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_relay</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_relay</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node relay state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00119" kindref="compound">sl_btmesh_evt_config_client_relay_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga43da584a18c9a1927460372e83a1ef30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_relay</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t value, uint8_t retransmit_count, uint16_t retransmit_interval_ms, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_relay</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>retransmit_count</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>retransmit_interval_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node relay state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Relay value to set. Valid values are:<itemizedlist>
<listitem><para>0: Relay feature is disabled</para></listitem><listitem><para>1: Relay feature is enabled </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retransmit_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Relay retransmit count. Valid values range from 0 to 7; default value is 0 (no retransmissions). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retransmit_interval_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Relay retransmit interval in milliseconds. Valid values range from 10 ms to 320 ms, with a resolution of 10 ms. The value is ignored if the retransmission count is set to zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00119" kindref="compound">sl_btmesh_evt_config_client_relay_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga872df673dd5e7ea02cbf70b1cd41574e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_network_transmit</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_network_transmit</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node network transmit state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00120" kindref="compound">sl_btmesh_evt_config_client_network_transmit_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga16957a0bdd5bc35fd00606b56b0764a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_network_transmit</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t transmit_count, uint16_t transmit_interval_ms, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_network_transmit</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>transmit_count</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>transmit_interval_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node network transmit state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transmit_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Network transmit count. Valid values range from 1 to 8; default value is 1 (single transmission; no retransmissions). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transmit_interval_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Network transmit interval in milliseconds. Valid values range from 10 ms to 320 ms, with a resolution of 10 ms. The value is ignored if the transmission count is set to one. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00120" kindref="compound">sl_btmesh_evt_config_client_network_transmit_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaf5e59203fc7e7a956a8c0f6f97f7072d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_identity</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_identity</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node identity state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key index for which the state is queried </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00121" kindref="compound">sl_btmesh_evt_config_client_identity_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga64ff540800b1ba474b40fa4a8b53ff8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_identity</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t netkey_index, uint8_t value, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_identity</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node identity state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key index for which the state is configured </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Identity value to set. Valid values are:<itemizedlist>
<listitem><para>0: Node identity advertising is disabled</para></listitem><listitem><para>1: Node identity advertising is enabled </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00121" kindref="compound">sl_btmesh_evt_config_client_identity_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga17765c438191f3e289b11847dbb79fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_friend</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_friend</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node friend state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00122" kindref="compound">sl_btmesh_evt_config_client_friend_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gaae6cd4fadac63392469689472dc62e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_set_friend</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t value, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_set_friend</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node friend state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Friend value to set. Valid values are:<itemizedlist>
<listitem><para>0: Friend feature is not enabled</para></listitem><listitem><para>1: Friend feature is enabled </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00122" kindref="compound">sl_btmesh_evt_config_client_friend_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga1b95802e860bab282d2ad442f793b618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_key_refresh_phase</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t netkey_index, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_key_refresh_phase</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>netkey_index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node key refresh phase state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key index for which the state is queried </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00123" kindref="compound">sl_btmesh_evt_config_client_key_refresh_phase_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1gace4406c4040b221b699fbf8a24734a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_lpn_polltimeout</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint16_t lpn_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_lpn_polltimeout</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lpn_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the LPN poll timeout from a Friend node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lpn_address</parametername>
</parameternamelist>
<parameterdescription>
<para>LPN address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00124" kindref="compound">sl_btmesh_evt_config_client_lpn_polltimeout_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga045d778bdf48c4b9fb6f23ec8d6c989d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_get_dcd</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint8_t page, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_get_dcd</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>page</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get composition data of a device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">page</parametername>
</parameternamelist>
<parameterdescription>
<para>Composition data page to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00125" kindref="compound">sl_btmesh_evt_config_client_dcd_data</ref></para></listitem><listitem><para><ref refid="a00126" kindref="compound">sl_btmesh_evt_config_client_dcd_data_end</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="a00099_1ga21179ea9f9893325f92d2e4ee1253653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl_status_t</type>
        <definition>sl_status_t sl_btmesh_config_client_reset_node</definition>
        <argsstring>(uint16_t enc_netkey_index, uint16_t server_address, uint32_t *handle)</argsstring>
        <name>sl_btmesh_config_client_reset_node</name>
        <param>
          <type>uint16_t</type>
          <declname>enc_netkey_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a node to unprovision itself. Use this function when a node is removed from the network.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enc_netkey_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Network key used to encrypt the request on the network layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">server_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination node primary element address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Request handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SL_STATUS_OK if successful. Error code otherwise.</para></simplesect>
<bold>Events</bold> <itemizedlist>
<listitem><para><ref refid="a00127" kindref="compound">sl_btmesh_evt_config_client_reset_status</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="8419" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="a00099_1gac02a5527fe37877b37587b60ea3e19fb" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_cancel_request_id</name>
        <initializer>0x00270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6340" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga9c9339c34cfa444573b91384453034ac" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_request_status_id</name>
        <initializer>0x01270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6341" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga071fdaeee2c051ae41905a5f4e4720bf" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_default_timeout_id</name>
        <initializer>0x2e270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6342" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gab67207b40782666144ca8b4e474711e0" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_default_timeout_id</name>
        <initializer>0x2f270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6343" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaa50e6155982e64b4b0b5b67583efeb5b" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_add_netkey_id</name>
        <initializer>0x02270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6344" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga44958e836585e128af7b53804ae432db" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_remove_netkey_id</name>
        <initializer>0x03270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6345" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gae2cb9c84ec046eab121d20b7ca6c95a1" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_list_netkeys_id</name>
        <initializer>0x04270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6346" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga1c1177ffbca8fba6bd425f23c5d47f11" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_add_appkey_id</name>
        <initializer>0x05270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6347" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gadab43d65c1053a6487f039d87af4ccad" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_remove_appkey_id</name>
        <initializer>0x06270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6348" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga08f067e0d813d203c336b26576db4704" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_list_appkeys_id</name>
        <initializer>0x07270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6349" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga4bd5d9ac7a3c8d4315d11e486c131797" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_bind_model_id</name>
        <initializer>0x08270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6350" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gafec89d6cea5d489fea942a12ec2d2e32" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_unbind_model_id</name>
        <initializer>0x09270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6351" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gae99173fc6656f63a59304362800bb62c" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_list_bindings_id</name>
        <initializer>0x0a270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6352" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga601264cc22d05ce8053eaf761c651efb" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_model_pub_id</name>
        <initializer>0x0b270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6353" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga4bf7a1b177240eafd45af2be9d19957c" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_model_pub_id</name>
        <initializer>0x0c270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6354" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga2916bebc29b125f15a6f5a2c771f8597" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_model_pub_va_id</name>
        <initializer>0x0d270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6355" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gada3d853da408370014ef92e86dfa8329" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_add_model_sub_id</name>
        <initializer>0x0e270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6356" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga6184666a80062148d80c6190cca31560" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_add_model_sub_va_id</name>
        <initializer>0x0f270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6357" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga783ed5158db1295bf9192e9890517544" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_remove_model_sub_id</name>
        <initializer>0x10270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6358" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaaa7fa886c61d87601472d6786d1e87b5" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_remove_model_sub_va_id</name>
        <initializer>0x11270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6359" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaffe7802f2f88be09c8fd376d6eb4bc83" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_model_sub_id</name>
        <initializer>0x12270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6360" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga93defcc8a0764901e9b4018686fafb5e" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_model_sub_va_id</name>
        <initializer>0x13270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6361" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga3b260cdd1fd868e30e0d268292931b04" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_clear_model_sub_id</name>
        <initializer>0x14270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6362" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga4a026b8f3194f899fe0dc890d5a8317d" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_list_subs_id</name>
        <initializer>0x15270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6363" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga933e6ff36233a87fb43774dea4240d89" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_heartbeat_pub_id</name>
        <initializer>0x16270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6364" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga10c1aa01e4f076808a89c9e8781c4607" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_heartbeat_pub_id</name>
        <initializer>0x17270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6365" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga937c2e3367d114762161282a3209fbfe" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_heartbeat_sub_id</name>
        <initializer>0x19270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6366" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga693cad5002dfa8c335eef30609c019c3" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_heartbeat_sub_id</name>
        <initializer>0x1a270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6367" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaaab724993e934c7687b6e4397f95944f" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_beacon_id</name>
        <initializer>0x1b270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6368" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga1eb7411d4a8d565b624c9a86428841cd" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_beacon_id</name>
        <initializer>0x1c270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6369" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga8d691d9b5060f6ae32af17efc099cfcf" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_default_ttl_id</name>
        <initializer>0x1d270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6370" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gafde66fba81fe3b22ff0fe169d16bb112" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_default_ttl_id</name>
        <initializer>0x1e270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6371" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga4f17e5f4ee23d1296474451878959e8f" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_gatt_proxy_id</name>
        <initializer>0x1f270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6372" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga54c82d44f79b91f907d229a747cdf5dc" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_gatt_proxy_id</name>
        <initializer>0x20270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6373" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gabaab0a175d3d5ff04b45febac158d43b" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_relay_id</name>
        <initializer>0x21270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6374" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gad783798ef86754a5e2848508157d3346" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_relay_id</name>
        <initializer>0x22270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6375" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gab547313299f9a9633dcd96159e6fde93" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_network_transmit_id</name>
        <initializer>0x23270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6376" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga99a12771808932cc1ba7b31b24486fb9" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_network_transmit_id</name>
        <initializer>0x24270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6377" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga147c2b926184eb6d4edf9cfca30d3a64" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_identity_id</name>
        <initializer>0x25270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6378" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga40ebf62783020bb3d3df8ff2746eaa74" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_identity_id</name>
        <initializer>0x26270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6379" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga3db75555e525d94791a7dda329e9e537" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_friend_id</name>
        <initializer>0x27270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6380" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gacf0a7070b10acc2a2fb015bdce630922" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_set_friend_id</name>
        <initializer>0x28270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6381" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gae78d7491286b6057da6e601ac7800b6e" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_key_refresh_phase_id</name>
        <initializer>0x29270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6382" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gafcf118c249260489d09591988ce99872" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_lpn_polltimeout_id</name>
        <initializer>0x2b270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6383" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga35616019ccba1c8371d953bfbe03954b" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_get_dcd_id</name>
        <initializer>0x2c270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6384" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gadb09625db5ed57a88f2bd2f7a0d4c737" prot="public" static="no">
        <name>sl_btmesh_cmd_config_client_reset_node_id</name>
        <initializer>0x2d270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6385" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaa5f6788082a1d54da34c96b054aa5879" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_cancel_request_id</name>
        <initializer>0x00270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6386" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gab7f85d25427a63f7c1961549d13603aa" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_request_status_id</name>
        <initializer>0x01270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6387" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gad114d99ef7bf321e0cb683991d9a5cbd" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_default_timeout_id</name>
        <initializer>0x2e270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6388" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga29f0422d97faa138867a84d5d57eb2a0" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_default_timeout_id</name>
        <initializer>0x2f270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6389" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga885f49d92b73aea04dae483b44f9cf76" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_add_netkey_id</name>
        <initializer>0x02270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6390" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga658acfac8c15b206c5f9c97aa0271d18" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_remove_netkey_id</name>
        <initializer>0x03270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6391" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga667471538927ae534ae1c2cd662accb0" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_list_netkeys_id</name>
        <initializer>0x04270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6392" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gac32502a97738065d78ecf57468b32e78" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_add_appkey_id</name>
        <initializer>0x05270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6393" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gab51d9cac41d9c5e4e5e3ea4f9258d286" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_remove_appkey_id</name>
        <initializer>0x06270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6394" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga1bb8c79662e0c74a6ef5ce98fa4bffd0" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_list_appkeys_id</name>
        <initializer>0x07270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6395" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga197d9d15a2da110ed9535f07b1982d23" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_bind_model_id</name>
        <initializer>0x08270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6396" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gad2543b4ad4fe2f107d58817f8e5fdca8" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_unbind_model_id</name>
        <initializer>0x09270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6397" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga909502ac96d368644b2c5175c2bdb05c" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_list_bindings_id</name>
        <initializer>0x0a270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6398" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga9e5042a08b881078bad6e7dca592b478" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_model_pub_id</name>
        <initializer>0x0b270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6399" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga7506ece0c52b470594d7581ac571915d" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_model_pub_id</name>
        <initializer>0x0c270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6400" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gae0ac605e2c04b916e64ace8cd4fceb06" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_model_pub_va_id</name>
        <initializer>0x0d270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6401" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga961e9849891acd9c4753f166365adac2" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_add_model_sub_id</name>
        <initializer>0x0e270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6402" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaa2257f069566e13c901cca119023d4f0" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_add_model_sub_va_id</name>
        <initializer>0x0f270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6403" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gabe0cf29eada68576f59534723bf18f89" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_remove_model_sub_id</name>
        <initializer>0x10270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6404" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga9f9302f3f9620bfc3eedcd43927eca90" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_remove_model_sub_va_id</name>
        <initializer>0x11270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6405" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gafb18c0c61badd4e48af85648304f195f" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_model_sub_id</name>
        <initializer>0x12270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6406" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga0e50eea88a489d71dfc53b37295b8f42" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_model_sub_va_id</name>
        <initializer>0x13270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6407" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga96d4937e8f24586d45795ed0caf77afa" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_clear_model_sub_id</name>
        <initializer>0x14270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6408" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga3d3ed622e5f1f3bb6639a31c840dc6b1" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_list_subs_id</name>
        <initializer>0x15270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6409" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga79caa001f20bf6e21636a155fe6f473e" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_heartbeat_pub_id</name>
        <initializer>0x16270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6410" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga3500a3bd561da337464add648766f3cf" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_heartbeat_pub_id</name>
        <initializer>0x17270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6411" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gac200fd30188d7fca12c36f7b4117abca" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_heartbeat_sub_id</name>
        <initializer>0x19270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6412" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga140ad65d1889d097af2aa4c4e6e6ce13" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_heartbeat_sub_id</name>
        <initializer>0x1a270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6413" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga455b2c6a51dba73a37acd291bc1b1433" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_beacon_id</name>
        <initializer>0x1b270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6414" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga731bc42d99d5f2d6c461668840210a5e" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_beacon_id</name>
        <initializer>0x1c270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6415" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga0ae8c848a0fe48e0dc0b8dfd96e26d4e" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_default_ttl_id</name>
        <initializer>0x1d270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6416" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga86e802c51222d35360ec001085e4999a" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_default_ttl_id</name>
        <initializer>0x1e270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6417" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaec8c036f14d88870dee252b0de0cdb75" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_gatt_proxy_id</name>
        <initializer>0x1f270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6418" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga03c6e199c5d9185d00f07bb62754d86b" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_gatt_proxy_id</name>
        <initializer>0x20270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6419" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga16bcebead19c211ca7fc3f21a0d2a4d7" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_relay_id</name>
        <initializer>0x21270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6420" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gab39b7c5a26a17570630a0a1250b416fa" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_relay_id</name>
        <initializer>0x22270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6421" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga2ceff80bf87e40af89871ddf7be3bd23" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_network_transmit_id</name>
        <initializer>0x23270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6422" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gab5b40e36f4c7b717fb05725cd4a4a009" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_network_transmit_id</name>
        <initializer>0x24270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6423" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga083c7257a178882d910ccf82e1066a97" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_identity_id</name>
        <initializer>0x25270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6424" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga78c9a6ea0c824f0abbd58662f1bc774e" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_identity_id</name>
        <initializer>0x26270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6425" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gac7aa6be028c930326f40ffd88d253ec3" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_friend_id</name>
        <initializer>0x27270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6426" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga979c02a8da62c9a2b02ac889a9c72101" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_set_friend_id</name>
        <initializer>0x28270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6427" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga4d43f1f3e1e493b38b794d51929317df" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_key_refresh_phase_id</name>
        <initializer>0x29270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6428" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga6db290d6809fdb1e112ba2cfe55445ac" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_lpn_polltimeout_id</name>
        <initializer>0x2b270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6429" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1ga23a60840ce80ddecfe570c5b6916ce8c" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_get_dcd_id</name>
        <initializer>0x2c270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6430" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="a00099_1gaee1261b6e94246cba87c50eddd4a2e83" prot="public" static="no">
        <name>sl_btmesh_rsp_config_client_reset_node_id</name>
        <initializer>0x2d270028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" line="6431" column="9" bodyfile="/mnt/raid/workspaces/ws.zxHljLWxg/overlay/super/protocol/bluetooth/build_release/btmesh_api/mesh_hal_gecko/inc/sl_btmesh_api.h" bodystart="6431" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bluetooth Mesh Configuration Client. </para>    </briefdescription>
    <detaileddescription>
<para>Bluetooth mesh stack API for the Mesh Configuration Client</para><para>Commands in this class configure nodes in the Mesh network, which includes key management, publish and subscribe settings manipulation, and node feature configuration.</para><para>Requests to nodes are asynchronous. A handle is assigned to each request that is pending a reply from a node in the network. The handle can be used to query the request status, and to identify the response event from the node. Multiple requests can be made in parallel (as long as they are destined to different nodes; only one pending request per node is allowed).</para><para><bold>Request Management</bold><itemizedlist>
<listitem><para><ref refid="a00099_1ga79d5cb461cbf221e74385ffe381bca0c" kindref="member">sl_btmesh_config_client_cancel_request</ref> : Cancel a request</para></listitem><listitem><para><ref refid="a00099_1gafe3d51666aaa3adadfb511fbd7172440" kindref="member">sl_btmesh_config_client_get_request_status</ref> : Query current status of a request</para></listitem><listitem><para><ref refid="a00099_1gaee42b40675f7266f51baef613fe794a5" kindref="member">sl_btmesh_config_client_get_default_timeout</ref> : Get default request timeout</para></listitem><listitem><para><ref refid="a00099_1ga87d9e7a3f12dd921dd794274738b82a2" kindref="member">sl_btmesh_config_client_set_default_timeout</ref> : Set default request timeout</para></listitem></itemizedlist>
</para><para><bold>Key and Mesh Network Management</bold><itemizedlist>
<listitem><para><ref refid="a00099_1ga114fb59ae466106565a96868d93880df" kindref="member">sl_btmesh_config_client_add_netkey</ref> : Deploy a network key to a node</para></listitem><listitem><para><ref refid="a00099_1ga09d2709771b5e7a9dcf1e4522aed11fa" kindref="member">sl_btmesh_config_client_remove_netkey</ref> : Remove a network key from a node</para></listitem><listitem><para><ref refid="a00099_1ga7d665912290bb65a964cd551de3e4986" kindref="member">sl_btmesh_config_client_list_netkeys</ref> : List network keys on a node</para></listitem><listitem><para><ref refid="a00099_1ga53fc4c71ac44d78b2e3dd92a9bd47278" kindref="member">sl_btmesh_config_client_add_appkey</ref> : Deploy an application key to a node</para></listitem><listitem><para><ref refid="a00099_1ga3b6a630cb5a0e7129e06728cb5febafa" kindref="member">sl_btmesh_config_client_remove_appkey</ref> : Remove an application key from a node</para></listitem><listitem><para><ref refid="a00099_1gae68315af648ff5f78dd3b928cf045695" kindref="member">sl_btmesh_config_client_list_appkeys</ref> : List application keys bound to a network key on a node</para></listitem></itemizedlist>
</para><para><bold>Node Configuration</bold><itemizedlist>
<listitem><para><ref refid="a00099_1ga045d778bdf48c4b9fb6f23ec8d6c989d" kindref="member">sl_btmesh_config_client_get_dcd</ref> : Get device composition data of a node</para></listitem><listitem><para><ref refid="a00099_1ga21179ea9f9893325f92d2e4ee1253653" kindref="member">sl_btmesh_config_client_reset_node</ref> : Reset a node</para></listitem><listitem><para><ref refid="a00099_1gaa6c77addc0def03ded7582218de1c990" kindref="member">sl_btmesh_config_client_get_default_ttl</ref> : Get node default TTL state value</para></listitem><listitem><para><ref refid="a00099_1gac8c20af67085dc27c13cd2b2644bbf89" kindref="member">sl_btmesh_config_client_set_default_ttl</ref> : Set node default TTL state value</para></listitem><listitem><para><ref refid="a00099_1ga8a1183f616e2a2d59bc26401f3114900" kindref="member">sl_btmesh_config_client_get_beacon</ref> : Get node secure network beacon state value</para></listitem><listitem><para><ref refid="a00099_1ga7186b849bbaf6a6c7848ea164367a994" kindref="member">sl_btmesh_config_client_set_beacon</ref> : Set node secure network beacon state value</para></listitem><listitem><para><ref refid="a00099_1gaf5e59203fc7e7a956a8c0f6f97f7072d" kindref="member">sl_btmesh_config_client_get_identity</ref> : Get node identity advertising state value</para></listitem><listitem><para><ref refid="a00099_1ga64ff540800b1ba474b40fa4a8b53ff8f" kindref="member">sl_btmesh_config_client_set_identity</ref> : Set node identity advertising state value</para></listitem><listitem><para><ref refid="a00099_1ga17765c438191f3e289b11847dbb79fa2" kindref="member">sl_btmesh_config_client_get_friend</ref> : Get node friend state value</para></listitem><listitem><para><ref refid="a00099_1gaae6cd4fadac63392469689472dc62e64" kindref="member">sl_btmesh_config_client_set_friend</ref> : Set node friend state value</para></listitem><listitem><para><ref refid="a00099_1gace4406c4040b221b699fbf8a24734a73" kindref="member">sl_btmesh_config_client_get_lpn_polltimeout</ref> : Get node LPN poll timeout state value</para></listitem><listitem><para><ref refid="a00099_1ga40ee48a78a3c8ba4bc6199a8d1509dc2" kindref="member">sl_btmesh_config_client_get_gatt_proxy</ref> : Get node GATT proxy state value</para></listitem><listitem><para><ref refid="a00099_1ga96a76d897a1e13638ad723e0188a4162" kindref="member">sl_btmesh_config_client_set_gatt_proxy</ref> : Set node GATT proxy state value</para></listitem><listitem><para><ref refid="a00099_1gaa50d0cd5d00bc3356b6e4682ad81e2af" kindref="member">sl_btmesh_config_client_get_relay</ref> : Get node relay state value</para></listitem><listitem><para><ref refid="a00099_1ga43da584a18c9a1927460372e83a1ef30" kindref="member">sl_btmesh_config_client_set_relay</ref> : Set node relay state value</para></listitem><listitem><para><ref refid="a00099_1ga872df673dd5e7ea02cbf70b1cd41574e" kindref="member">sl_btmesh_config_client_get_network_transmit</ref> : Get node network transmit state value</para></listitem><listitem><para><ref refid="a00099_1ga16957a0bdd5bc35fd00606b56b0764a1" kindref="member">sl_btmesh_config_client_set_network_transmit</ref> : Set node network transmit state value</para></listitem></itemizedlist>
</para><para><bold>Model Configuration</bold><itemizedlist>
<listitem><para><ref refid="a00099_1ga12c767b6b5014bba8e790cb47c1930f4" kindref="member">sl_btmesh_config_client_bind_model</ref> : Bind a model to an application key</para></listitem><listitem><para><ref refid="a00099_1gabb0d1f130f4fff7268d390d74facde98" kindref="member">sl_btmesh_config_client_unbind_model</ref> : Remove a model to application key binding</para></listitem><listitem><para><ref refid="a00099_1ga033df184a3316eb016c09c0f05fa2f6f" kindref="member">sl_btmesh_config_client_list_bindings</ref> : List model to application key bindings on a node</para></listitem><listitem><para><ref refid="a00099_1gab98d2d951117ae647a4b298e9e3dc685" kindref="member">sl_btmesh_config_client_add_model_sub</ref> : Add a subscription address to a model</para></listitem><listitem><para><ref refid="a00099_1ga7167ecedf3a8b740bcec4833970a23bf" kindref="member">sl_btmesh_config_client_add_model_sub_va</ref> : Add a virtual subscription address to a model</para></listitem><listitem><para><ref refid="a00099_1ga3885615b4b5be9f708e285551d4bc5c7" kindref="member">sl_btmesh_config_client_remove_model_sub</ref> : Remove a subscription address from a model</para></listitem><listitem><para><ref refid="a00099_1ga15ba5bf27f5751466fb3d0e6f550823d" kindref="member">sl_btmesh_config_client_remove_model_sub_va</ref> : Remove a virtual subscription address from a model</para></listitem><listitem><para><ref refid="a00099_1gaf0c4060db9d05d5e1a70d65b583ec406" kindref="member">sl_btmesh_config_client_set_model_sub</ref> : Overwrite the subscription list of a model with an address</para></listitem><listitem><para><ref refid="a00099_1ga4504d4b7f82f4c6462136ff3c8fff06b" kindref="member">sl_btmesh_config_client_set_model_sub_va</ref> : Overwrite the subscription list of a model with a virtual address</para></listitem><listitem><para><ref refid="a00099_1ga6f4215eb6c1c8cdc349b87252e415c1e" kindref="member">sl_btmesh_config_client_clear_model_sub</ref> : Clear the subscription list of a model</para></listitem><listitem><para><ref refid="a00099_1ga3faa008bf996fca47428b0039cc35522" kindref="member">sl_btmesh_config_client_list_subs</ref> : Get the subscription list of a model</para></listitem><listitem><para><ref refid="a00099_1gad18fdd68df4d029e3d8bac7c6a7ce240" kindref="member">sl_btmesh_config_client_get_model_pub</ref> : Get a model&apos;s publication parameters</para></listitem><listitem><para><ref refid="a00099_1ga672868aeae0430ce06b1fc33e1e5cb59" kindref="member">sl_btmesh_config_client_set_model_pub</ref> : Set a model&apos;s publication parameters</para></listitem></itemizedlist>
</para><para><bold>Heartbeat</bold><itemizedlist>
<listitem><para><ref refid="a00099_1ga7cf9831c10a817ff37a2f5b96a47e86d" kindref="member">sl_btmesh_config_client_get_heartbeat_pub</ref> : Get node heartbeat publication settings</para></listitem><listitem><para><ref refid="a00099_1ga26fbd0e5eee92fdaa477c3ece967d5a1" kindref="member">sl_btmesh_config_client_set_heartbeat_pub</ref> : Set node heartbeat publication settings</para></listitem><listitem><para><ref refid="a00099_1ga4f1816e58cd46924ac8a152e27dcb973" kindref="member">sl_btmesh_config_client_get_heartbeat_sub</ref> : Get node heartbeat subscription settings</para></listitem><listitem><para><ref refid="a00099_1ga14bb9c2ca5965a308777d2d7689c26c0" kindref="member">sl_btmesh_config_client_set_heartbeat_sub</ref> : Set node heartbeat subscription settings </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
