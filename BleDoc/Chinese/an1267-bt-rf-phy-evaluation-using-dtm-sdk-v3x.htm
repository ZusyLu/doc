<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>AN1267: Radio Frequency Physical Layer Evaluation in Bluetooth® SDK v3.x</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .h3 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: bold; text-decoration: none; font-size: 19pt; vertical-align: 8pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s4 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s5 { color: #007694; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .a { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s8 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s10 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s11 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s12 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 h2 { color: #FFF; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s13 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s14 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s15 { color: #424242; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s16 { color: #424242; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s17 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s18 { color: #4C4D4F; font-family:"Arial Black", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s20 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s21 { color: #0086DD; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s22 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 4pt; vertical-align: 2pt; }
 h4 { color: #FB1725; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt; }
 #l2> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l3 {padding-left: 0pt;counter-reset: e1 1; }
 #l3> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 #l4 {padding-left: 0pt;counter-reset: e1 3; }
 #l4> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 li {display: block; }
 #l5 {padding-left: 0pt;counter-reset: e1 1; }
 #l5> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 #l6 {padding-left: 0pt;counter-reset: e2 1; }
 #l6> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l7 {padding-left: 0pt;counter-reset: e3 1; }
 #l7> li>*:first-child:before {counter-increment: e3; content: counter(e3, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l7> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l8 {padding-left: 0pt;counter-reset: e3 1; }
 #l8> li>*:first-child:before {counter-increment: e3; content: counter(e3, decimal)". "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l8> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l9 {padding-left: 0pt; }
 #l9> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l10 {padding-left: 0pt;counter-reset: e4 1; }
 #l10> li>*:first-child:before {counter-increment: e4; content: counter(e3, decimal)"."counter(e4, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: e4 0;  }
 #l11 {padding-left: 0pt;counter-reset: e4 1; }
 #l11> li>*:first-child:before {counter-increment: e4; content: counter(e3, decimal)"."counter(e4, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: e4 0;  }
</style></head><body><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="37" height="37" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_002.png"/></span></p><h1 style="padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 106%;text-align: left;">AN1267: Radio Frequency Physical Layer Evaluation in <i>Bluetooth</i><span class="h3">® </span>SDK v3.x</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="172" height="1" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="173" height="1" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_005.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s3" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Basics of Direct Test Mode (DTM)</p></li><li><p class="s3" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Testing with NCP Commander</p></li><li><p class="s3" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Testing with DTM 2-wire firmware</p></li><li><p class="s3" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Test examples</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s4" style="padding-top: 4pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">This application note provides an overview of how to perform Bluetooth-based radio frequency (RF) physical layer (PHY) eval- uation with Bluetooth-enabled EFR32xG system-on-chips (SoCs) and BGM/MGM modules using Silicon Labs’ software tools and dedicated firmware. A Bluetooth device’s RF parameters are vali- dated using a protocol called Direct Test Mode (DTM). DTM is described in the Bluetooth Core Specification versions 5.x, Vol- ume 6, Part F.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Testing can be performed in three ways:</p><ul id="l2"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Through DTM test commands issued by a host system over the SoC’s or module’s host interface.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Through DTM test commands issued by a custom application running in the SoC or module itself. Such commands could be autonomously launched by the custom ap- plication, for example at boot or after a remote companion device writes a dedicated GATT characteristic over a Bluetooth LE connection.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">In a special test environment supported by dedicated firmware that allows a testing device to control the test target.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">With these options, customers can fully evaluate transmit and receive performance, and test the RF functionality of their development kit hardware or custom hardware. Laboratory tests require RF test equipment, such as a spectrum analyzer and an RF signal generator, and/or a Bluetooth tester.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Basics of the Direct Test Mode (DTM)</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_006.png"/></span></p><ol id="l3"><li><p class="s6" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Basics of the Direct Test Mode (DTM)</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="https://www.bluetooth.com/specifications/bluetooth-core-specification" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">The Bluetooth specification defines a mechanism, called Direct Test Mode (DTM), for testing the radio performance of Bluetooth low energy devices. This mechanism is described in the Bluetooth Core Specification, for example versions 4.2 or 5.2, Volume 6, Part F, which are available at </a>https://www.bluetooth.com/specifications/bluetooth-core-specification<span style=" color: #000;">. DTM is provided for the validation of a Bluetooth low energy device’s radio-frequency (RF) physical layer (PHY), so as to ultimately guarantee an end product’s interoperability and performance quality. RF testing is essential for a Bluetooth device, as with any device implementing a wireless standardized tech- nology, since factors such as full compliance with the specification for interoperability, and conformance to communication regulations must be carefully assessed and validated before the product is launched. In addition, it may be desirable to evaluate the product’s per- formance during production. The ability to easily accomplish RF testing in a standardized manner throughout the production cycle is useful.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">DTM offers two approaches for RF PHY testing. In the first, an <i>Upper Tester </i>can enter special HCI (host control interface) commands over the standardized HCI interface of the Device Under Test (DUT) to start and stop the radio tests on the DUT. In the second, the Upper Tester has direct access to the DUT through a dedicated 2-wire connection and can autonomously start and stop the radio tests on the DUT in accordance with automated test routines.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The DTM protocol enabling the communication between the DUT and the Upper Tester also has provisions for feedback from the DUT, in the form of acknowledgements to the commands given, or in the form of Packet Count information being reported at the time a test is stopped.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A <i>Lower Tester</i>, or RF PHY Tester, is also part of the test setup, and is the actual lab equipment measuring the RF activity and per- formance. The RF PHY Tester can either be a separate device, like a spectrum analyzer, which is normally used with the first method where the HCI commands are issued by a generic host system, or it can be part of the same device. In the latter case the RF PHY Tester functions also as the Upper Tester, as for example commercial Bluetooth testers such as the one referenced later in this docu- ment.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Bluetooth-enabled Silicon Labs EFR32xG SoCs and the BGM/MGM modules support both the approaches mentioned above. Spe- cial firmware can be loaded to enable the 2-wire DTM and allow the Upper Tester to take full control of the SoC or module (the device). The 2-wire link is a UART-like connection with no flow control operating at baud rates between 1200-115200, 8N1 (8 data bits, no pari- ty, 1 stop bit). As one alternative, firmware that configures the device to operate in Network Co-Processor (NCP) mode can be used, since the host system can then issue the test commands included with the BGAPI Bluetooth API over the same host interface that is normally used to implement the BGAPI protocol for the control and configuration of the device’s normal Bluetooth LE functionality. Note that in this case BGAPI-formatted test commands are sent and not the HCI commands defined in the standard. However, these BGAPI commands are then internally processed as HCI commands. The SDK does not contain any special firmware or configuration to disable the BGAPI DTM commands/responses and use the raw HCI command/responses instead.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Tests Enabled in the DTM Framework</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_007.png"/></span></p></li><li><p class="s6" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Tests Enabled in the DTM Framework</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="https://www.bluetooth.com/specifications/qualification-test-requirements" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">DTM enables a set of RF PHY test cases, which are defined by the Bluetooth Special Interest Group (SIG) in the documents from the sections called “TCRL Release Table” and “Core - Test Requirements” found at the beginning of the </a><a href="https://www.bluetooth.com/specifications/qualification-test-requirements" class="a" target="_blank">https://www.bluetooth.com/specifi- </a>cations/qualification-test-requirements <span style=" color: #000;">web page.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Capability tests (as defined in the standard ISO subgroups) are organized in levels and groups representing protocol services, functional modules, and purposes, the latter being divided in operating conditions for the transmitter and the receiver. All the relevant RF PHY tests are in accordance to the test specifications RF-PHY.TS.5.1.1 or the updated RF-PHY.TS.p15 and are shown in the RF-P sheet of the Excel file called <i>Core.TCRL.2019-2.xlsx </i>found inside the <i>2019-2 TCRLs_2020-01-15_HFP1.8.zip</i>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Below are examples of test cases for the Physical Layer Conformance. They are referred to by their identifiers, where RF-PHY stands for <i>RF-PHY Test Purpose </i>and TRM and RCV stand for Transmitter and Receiver test respectively.</p></li></ol></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-01-C [Output power]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-03-C [In-band emissions, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-05-C [Modulation Characteristics, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-06-C [Carrier frequency offset and drift, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-08-C [In-band emissions at 2 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-10-C [Modulation Characteristics at 2 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/TRM/BV-13-C [Modulation Characteristics, LE Coded (S=8)]</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-01-C [Receiver sensitivity, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-03-C [C/I and Receiver Selectivity Performance, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-04-C [Blocking Performance, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-05-C [Intermodulation Performance, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-06-C [Maximum input signal level, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-07-C [PER Report Integrity, uncoded data at 1 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-08-C [Receiver sensitivity at 2 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-10-C [Blocking performance at 2 Ms/s]</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RF-PHY/RCV/BV-27-C [Receiver sensitivity, LE Coded (S=8)]</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">All the above tests can be performed with the EFR32xG SoCs and the BGM/MGM modules, because they are supported by the DTM implementation built into the Silicon Labs Bluetooth stack.</p><p class="s9" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">To accomplish the full set of tests in the specification, up to two external signal generators are needed to provide complete inter- ference signals, in addition to a spectrum analyzer.</span></p><ol id="l4"><li><p class="s6" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark2">Testing with Bluetooth NCP Commander</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">An easy way to perform the RF PHY tests with the EFR32xG SoCs and the BGM/MGM modules is to use a PC running a Silicon Labs tool as the Upper Tester. The SoC or module must be configured to operate in NCP mode, and must have the <b>Bluetooth &gt; Stack &gt; DTM &gt; Test </b>component installed to add the DTM commands.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Two tools are available:</p></li></ol></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Bluetooth NCP Commander</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Bluetooth NCP Commander Standalone</p></li></ul><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">AN1259: Using the v3.x Silicon Labs Bluetooth® Stack in Network Co-Processor Mode <span class="p">discusses the basics of the NCP firmware, how to load it to a device, and provides an example to help familiarize you with the NCP mode. It also includes instructions on how to get started controlling and configuring the Bluetooth functionality through Bluetooth NCP Commander and Bluetooth NCP Commander Standalone demo programs.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">This chapter describes using Bluetooth NCP Commander or Bluetooth NCP Commander Standalone for RF PHY testing, where an SoC or module in a radio board attached to the Wireless Starter Kit (WSTK) is the example DUT, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;"><span><img width="403" height="231" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_008.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 3.1.  WSTK with the Blue Gecko EFR32BG SoC</p><ol id="l5"><ol id="l6"><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark3">Using Bluetooth NCP Commander</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Bluetooth NCP Commander is an easy-to-use tool that can be used for testing different stack features, by sending BGAPI commands to the target device. The tool has two versions: a version integrated in Simplicity Studio, which makes it easy to connect to your develop- ment kit and start testing, and a standalone version to test a board in an environment where Simplicity Studio cannot be installed, or if you want to test a custom board that can be accessed on UART interface, but not through a Simplicity Studio supported debug adapter using VCOM.</p><ol id="l7"><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">To open the integrated Bluetooth NCP Commander, select the target board in the <b>Debug Adapters </b>view, and check that the pre- ferred SDK is set to <b>Gecko SDK Suite: Bluetooth</b>. Select the <b>Compatible Tools </b>tab, and click <b>[Launch] </b>next to Bluetooth NCP Commander.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 103pt;text-indent: 0pt;text-align: left;"><span><img width="555" height="301" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_009.jpg"/></span></p></li><li><p style="padding-top: 8pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">To open the standalone tool, either navigate to C:\SiliconLabs\SimplicityStudio\v5\developer\adapter_packs\ncp_commander, and start NcpCommander.exe, or find the tool on the <b>Compatible Tools </b>tab or in the <b>Tools </b>menu.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">If you use the integrated version, select the target device, and click <b>[Connect]</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 78pt;text-indent: 0pt;text-align: left;"><span><img width="611" height="296" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_010.jpg"/></span></p></li><li><p style="padding-top: 8pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">If you use the standalone tool, provide the UART interface settings, and then select the COM port on which the device can be accessed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;"><span><img width="562" height="255" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_011.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Next, change to the <b>RF regulatory Test </b>view. The control dialog shown in the following figure opens. Depending on the SDK in use, the NCP Commander might present different views and contents.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 66pt;text-indent: 0pt;text-align: left;"><span><img width="602" height="299" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_012.jpg"/></span></p><p class="s9" style="padding-top: 7pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 3.5.  RF Regulatory Test Control Dialog</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">In this dialog you can interact with the device and set the RF test parameters using the sliders and the radio buttons. All the necessary configuration options are provided, namely transmission power level, operational frequency, packet type and length, and whether to perform a transmit or receive test.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If you intend to perform transmit tests using anything other than the default transmit power, change the power and click <b>Set </b>next to the Transmit power slider before launching the next test. Normally the default value is the maximum allowed by the firmware for a particular SoC or module. Clicking <b>Set </b>executes the BGAPI’s <span class="s10">system_set_tx_power </span>command, which changes the power value.</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the configuration parameters for the test are complete, click <b>Start test</b>. The test runs until you click <b>Stop test</b>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Depending on the SDK in use, Bluetooth NCP Commander might present different views and contents, such as in the following where no firmware uploading section exists.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The following figure shows the PHY selection option in NCP Commander, together with the option to select the PN9 continuously modulated carrier, and the possibility to extend the payload to up to 255 bytes:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 65pt;text-indent: 0pt;text-align: left;"><span><img width="604" height="299" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_013.jpg"/></span></p><p class="s9" style="padding-top: 6pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 3.6.  Selecting the PHY and Other Parameters with Bluetooth NCP Commander</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The following figure shows an example of the commands and responses and events in an actual test:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 66pt;text-indent: 0pt;text-align: left;"><span><img width="604" height="300" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_014.jpg"/></span></p><p class="s9" style="padding-top: 6pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 3.7.  Starting and Stopping a Transmission Test</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">In this example, the test is started by clicking <b>Start test</b>. After a DTM test is started, the device will only accept the <span class="s10">test_dtm_end </span>command, which is entered by clicking <b>Stop test</b>. The only other way to stop a test are by resetting the device or through a power- cycle.</p><p class="s9" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Once a test is started the normal Bluetooth LE functionality is not available, in other words, advertising and scanning are not possible while a test is running, and similarly no connection can exist.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Another way to start and stop tests with NCP Commander is by entering the commands with the desired parameters in the command field of the Smart Console window, labeled <b>Command</b>. Such commands can be copy-pasted from the API reference, for example:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 20pt;text-indent: 0pt;text-align: left;"><span class="s11" style=" background-color: #D8D8D8;"> sl_bt_test_dtm_tx_v4(0,37,19,1,0)                                                                                </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><a href="#bookmark6" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">See section </a>3.2 DTM Commands <span style=" color: #000;">for more information.</span></p></li></ol></li><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark4">DTM Commands</a><a name="bookmark6">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When you click <b>Start test </b>in either Bluetooth NCP Commander or BGTool, the tool sends one of the BGAPI’s DTM commands over the host interface of the device. The command parameters correspond to the slider and radio button selections. The following summarizes the API’s DTM commands. The commands with their related responses and the event mentioned below are found in the <i>Bluetooth Soft- ware API v3 Reference</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;line-height: 206%;text-align: left;">test_dtm_tx(packet_type, length, channel, phy) test_dtm_tx_v4(packet_type, length, channel, phy, power_level)</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 9pt;text-align: justify;">Starts a transmitter test. The DUT returns a response indicating that the command was received successfully. Shortly after this, a</p><p class="s10" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">test_dtm_completed <span class="p">event is triggered, indicating that the command was processed by the radio and the actual test mode is started. At this point, the device is sending Bluetooth LE packets continuously at a fixed interval defined in the specification. The test is stopped using the </span>test_dtm_end <span class="p">command, which is also followed by a </span>test_dtm_completed <span class="p">event.</span></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Only when a <span class="s10">test_dtm_completed </span>event follows the <span class="s10">test_dtm_end </span>command, the event&#39;s <span class="s10">number_of_packets </span>field carries the ac- tual number of packets sent during the test.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The type and length of each packet is set by the <span class="s10">packet_type </span>and <span class="s10">length </span>parameters. The newest firmware versions add a parameter called <span class="s10">phy </span>that allows the selection of the PHY among 1M, 2M, 125k Coded, and 500k Coded, when supported by the DUT. The pow- er_level parameter is the TX power level in dBm, with a range of -127 to +20. This parameter also includes options to use the minimum TX power level that the device supports, or the smallest of the maximum TX power level that the device supports and the global maxi- mum TX power setting in the stack.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note that a special packet type named <span class="s10">test_pkt_carrier </span>exists that can be used to transmit a continuous unmodulated carrier. The length field is ignored in this mode.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Another special packet type named <span class="s10">test_pkt_pn9 </span>can be used to transmit a continuous modulated carrier instead, by means of a PN9 stream offering a 100% duty cycle.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In general, for the regulatory testing PRBS9 and/or the continuous modulated carrier are used, whereas the other two packet payloads are used when testing for the Bluetooth qualification.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">test_dtm_rx(channel, phy)</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Starts a receiver test. The procedure is similar to the transmitter test described above. When ending the test with the <span class="s10">test_dtm_end </span>command, the expected <span class="s10">test_dtm_completed </span>event from the device carries in its <span class="s10">number_of_packets </span>field the actual number of packets received during the test.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">test_dtm_end()</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Can be issued at any time to end a transmitter or a receiver test. When the command is processed by the radio and the test has ended, a <span class="s10">test_dtm_completed </span>event is triggered.</p></li><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark5">Using Other Methods</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Using either Bluetooth NCP Commander or Bluetooth NCP Commander Standalone is just one of the ways to perform the RF PHY tests in the lab. In fact, the DTM commands from the BGAPI protocol are also available to any host MCU capable of issuing the BGAPI commands over the device’s host interface, for example when implementing a host program based on the BGLib library.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The commands can also be launched by a DUT operating in standalone mode, by means of a custom C program loaded onto the SoC/ module. Users could start with the <b>SOC-Empty </b>example project, and customize it to simply have a test command autonomously launched at boot and terminated by a hard reset or after a timer has expired. Alternatively, the program could be designed to allow an incoming Bluetooth LE connection over which a remote device could write a dedicated GATT characteristic. The characteristic&#39;s content would define the test command the application should launch and how long this should run until a terminating event such as allowing the next connection or a reset.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Using this programming strategy, customers often prepare multiple firmware images for their test house, each containing the stand- alone functionality to launch a specific test at bootup, and then simply provide instructions to the test house on how to change firmware images.</p><p class="s9" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Notes and Limitations:</p><ol id="l8"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">The DTM tests discussed in this section are meant for regulatory testing as well as for Bluetooth qualification. All tests are de- signed to satisfy the guidelines normally set by the test houses that will conduct the regulatory evaluation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 40pt;text-indent: -8pt;text-align: justify;">During a 1M PHY transmit test where the typical 37 bytes of payload are used, subsequent packet transmissions are started at an interval of 625 µs. In this case, the packet transmission itself lasts 376 µs, resulting in a duty cycle of 60.2%. This comes from the fact that the packet used in the test is made of a preamble (8 bit) plus a sync word (32 bit) plus a packet type field (16 bit) plus the payload (296 bit) plus the CRC (24 bit), while the time to transmit one bit is 1 µs given the air-interface baud rate of 1 Mbit/s.</p><p style="padding-top: 8pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">The max payload size that can be configured with the <span class="s10">test_dtm_tx_v4 </span>command can be up to 255 bytes, according to the LE Data Packet Length Extension introduced in the Core Specification version 4.2. Given all the new possible combinations of PHYs and packet lengths in the newest firmware versions, the duty cycle will actually depend now also on the interval between packets which is not fixed but calculated based on the information found in the Core Specification version 4.2 and 5.x, in chapter “<i>4.1.6 LE Test Packet Interval</i>” of Volume 6, Part F.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">As of this document version, no configuration option exists to define a fixed number of packets that the device would transmit after issuing the <span class="s10">test_dtm_tx_v4 </span>command. One useful use case would be to estimate packets lost: the test setup would have a trans- mitter sending a number of packets known in advance and a receiver reporting the number of packets received (via the <span class="s10">test_dtm_completed </span>event).</p><p style="padding-top: 7pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">This could evaluate performance changes due to distance or other conditions, or be used during production to validate the quality of a product just manufactured. The workaround for the lack of such a configuration option is to let the unit transmit only for a fixed amount of time, calculated by taking into account the interval at which the packets are transmitted: in the example case of a 1M PHY and 37 bytes payload, having the interval between packets set to 625 µs, the packet rate is 1600 [packets/s].</p><p style="padding-top: 6pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;"><b>Note: </b>Currently the <span class="s10">test_dtm_completed </span>event reports the actual packets sent during the test when the test mode launched with the <span class="s10">test_dtm_tx_v4 </span>command is stopped. This is useful for a precise estimation of the PER when comparing the exact number of packets sent by the stack with the actual packets received by the receiver. The DTM communication response in 2-wire firmware does not report the sent packet count.</p></li><li><p class="s6" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark7">Testing with the DTM 2-Wire Firmware</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">If a Bluetooth tester device is available, it should be used to evaluate the RF performance of the DUT, since such dedicated equipment is faster and offers automated and accurate testing. These benefits among others are achieved because the tester can control and configure the DUT in all the tests required for complete RF PHY evaluation. Such control is possible thanks to the DTM 2-wire capability and its related protocol, which are part of the Bluetooth specification.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In order to enable the DTM 2-wire communication between a commercial Bluetooth tester device (that is, the Upper Tester with the included RF PHY measurement capability) and the DUT, the latter needs to run a special firmware where the protocol is included. This special DTM 2-wire-capable firmware is available as an example application project in Bluetooth SDK v3x through Simplicity Studio® 5 (SSv5). This section provides a summary of the project creation and use process. It assumes you are familiar with building and flashing applications using the Bluetooth SDK v3.x with SSv5. For more information about these processes, see the online SSv5 User&#39;s Guide, available through the SSv5 help menu, or <i>QSG169: Bluetooth® SDK v3.x Quick Start Guide</i>, installed with the SDK</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To create the project in SSv5, in the Launcher-perspective, select the correct DUT in the Debug Adapter view. This correctly prepopu- lates the Target Board and Target Device (SoC or module) settings. In the File menu, select <b>New &gt; Simplicity Studio Project Wizard</b>. The Target, SDK and Toolchain Selection dialog opens. Verify the target hardware, SDK version, and toolchain are correct. Click [<b>NEXT</b>].</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 125pt;text-indent: 0pt;text-align: left;"><span><img width="449" height="453" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_015.jpg"/></span></p><p class="s9" style="padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: center;"><a name="bookmark11">Figure 4.1.  Simplicity Studio 5 Target, SDK and Toolchain Selection Dialog</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Example Project Selection dialog opens. Use the Technology Type and Keyword filters to search for a specific example, in this case <b>Bluetooth - SoC DTM</b>. Select it and click [<b>NEXT</b>].</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 162pt;text-indent: 0pt;text-align: left;"><span><img width="345" height="347" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_016.jpg"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.2.  Simplicity Studio 5 Example Project Selection Dialog</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Project Configuration dialog opens. You do not need to change any of the default values. Click [<b>FINISH</b>] to create the DTM exam- ple project.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The example application configuration is as follows:</p><ul id="l9"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The hardware link to the Bluetooth tester is enabled over the device’s pins that, in its evaluation radio board, are mapped to the WSTK expansion header’s UART TX (pin 12) and UART RX (pin14).</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The link uses UART parameters of 115200, 8N1 with no hardware flow control.</p></li></ul><p class="s8" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark12" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">You can use the example application as is if these settings are correct for your DUT. Refer to the documentation of a particular SoC or module and of its evaluation radio board to determine which pins are in use in order to have the DTM signaling routed to the intended expansion header pins. See </a>4.3 Customizing the SoC DTM Application <span style=" color: #000;">for more information on application customization.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">After changing the configuration (if necessary), build the application image and flash it to the DUT. If the application is not working and cannot even be debugged, the bootloader might be missing from the DUT. The easiest way to program the bootloader is to flash a pre- compiled demo application (with bootloader) such as Empty SoC from the Launcher-perspective DEMOS-tab, then re-flash the Soc Dtm image.</p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">.</p><ol id="l10"><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark8">Connecting and Testing with the Bluetooth tester</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">With the DTM firmware installed, the DUT is ready to be wired to the Bluetooth tester, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 65pt;text-indent: 0pt;text-align: left;"><span><img width="612" height="242" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_017.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.3.  Connecting the Bluetooth Tester to the WSTK</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Testing can be performed at the Upper Tester interface, normally through PC software, as shown in the example using Anritsu MT8852B as the Bluetooth tester.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">First, establish the connection to the DUT with the correct parameters, as highlighted in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 120pt;text-indent: 0pt;text-align: left;"><span><img width="461" height="453" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_018.jpg"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.4.  Connecting the Upper Tester to the DUT</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Next, pre-existing or custom scripts can be used to start a suite of tests, as shown in the following figure. In the same figure the test report is displayed by the tester PC program, after the automated tests have completed, with an overall result of “Passed”. Notice also</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">the <b>Fixed Offset </b>field in the <b>Script Setup </b>box, which can be used to compensate for power loss, for example over the coaxial antenna cable in the case of conducted RF tests.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;"><span><img width="688" height="776" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_019.jpg"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.5.  Launching a Suite of Tests / Test Results</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Any commercial Bluetooth tester should be capable of testing among others the Packet Error Rate (PER). In this test configuration, the Upper Tester first configures the DUT into receiving mode using the appropriate DTM 2-wire command (step 2 in the figure below after the test configuration by the user in step 1), and then the Upper Tester starts sending a defined number of packets at the RF TX power level configured by the user (step 3). When the test is ended by the user (step 4), the corresponding DTM 2-wire command is also sent to the DUT and, much as in the BGAPI <span class="s10">test_dtm_completed </span>event discussed earlier, the DUT reports over the 2-wire link the number of received packets so that the Upper Tester can calculate the PER, all according to the specification.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;"><span><img width="688" height="686" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_020.jpg"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.6.  Receiver Measurements (PER)</p></li><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark9">Testing Equipment Considerations</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Certain Bluetooth testers, like the Anritsu MT8852B mentioned in this application note, use RS232 interfaces to connect to a DUT for the DTM 2-wire, meaning that, when testing with the DTM firmware and a WSTK, for example, a level shifter is needed in order to interface to the device’s TTL logic.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Certain Bluetooth testers have no capability to generate RF signals with a power lower than a certain value, for example -90 dBm in the case of the Anritsu MT8852B mentioned in this application note. Given that modern SoCs/modules have a receiver sensitivity going well below that, an attenuator might be required for appropriate testing, to further decrease the power of a signal directed to the device in receiving test mode.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s9" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark10">Customizing the SoC DTM Application</a><a name="bookmark12">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Configuring the device to use other pins and UART settings for the 2-wire UART than the defaults is done by configuring the Software Component.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When you create a new project, the GATT Configurator is opened by default. To go to the Project Configurator, click the &lt;project&gt;.slcp tab, or double-click the &lt;project&gt;.slcp file in the Simplicity IDE Project Explorer view. Click the Software Components tab. Check the Configurable Components and Installed Components filters. Type “stream” in the search box. You should see only one IO Stream im- plementation named <b>exp</b>. Select <b>exp</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 46pt;text-indent: 0pt;text-align: left;"><span><img width="653" height="348" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_021.jpg"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.7.  IO Stream Component Using UART</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Click [<b>Configure</b>] to open the Component Editor. Here you can configure the baud rate, pins, and other parameters. Make your change and close the Component Editor. Changes are autosaved.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 50pt;text-indent: 0pt;text-align: left;"><span><img width="650" height="452" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_022.jpg"/></span></p><p class="s9" style="padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.8.  IO Stream UART and Pin Settings</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Instead of configuring the component, you can change configurations in the Pin Tool. Double click the file &lt;project name&gt;.pintool to open it.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 77pt;text-indent: 0pt;text-align: left;"><span><img width="576" height="402" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_023.jpg"/></span></p><p class="s9" style="padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 4.9.  Pin Tool</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">You can change the pin position from the Configure editor Pins tab. Select a pin, click the fuction to display the Function dropdown list, and select a function. Click the Software Component symbol to open the Component Editor. Changes made in the Pin Tool are not autosaved.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Once your changes are complete, compile and flash to test them.</p><p class="s8" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark11" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">In the Simplicity Studio screenshot shown in </a>Figure 4.1 Simplicity Studio 5 Target, SDK and Toolchain Selection Dialog on page 10<span style=" color: #000;">, a WSTK with a radio board carrying an EFR32BG21 was attached to the PC. More often a custom design is used instead, and this cus- tom board is obviously not recognized by the Silicon Labs’ software. In this case, start the DTM firmware creation as described in the beginning of the chapter but select the correct Target Device in the Target, SDK and Toolchain Selection dialog. The Target Board is left empty with a custom design. Check the SDK as it might not be correct by default and also check the Toolchain.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 125pt;text-indent: 0pt;text-align: left;"><span><img width="449" height="453" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_024.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">From there the process continues as previously described. Most likely the UART pins will need some configuration, as described above.</p></li></ol></li><li><p class="s6" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark13">Test Examples with the BGAPI Commands test_dtm_tx_v4 and test_dtm_rx</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l11"><li><p class="s9" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark14">Output Power—RF-PHY/TRM/BV-01-C</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;line-height: 182%;text-align: left;">The power basic measurement is used to make all of the output power measurements. In this example, the <span class="s10">test_dtm_tx_v4 </span>command is used.</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 10pt;text-align: left;">In this test mode, only the frequency and the output power are configurable parameters.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A spectrum analyzer is used to measure the power of the radio and must be connected through a compatible RF cable to the RF con- nector of the radio board.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">It is also possible to test the output power with a separate Bluetooth tester device when the DTM firmware is installed in the DUT.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 57pt;text-indent: 0pt;text-align: left;"><span><img width="640" height="480" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_025.gif"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 5.1.  Output Power Measurement with the Rohde &amp; Schwarz CBT Bluetooth Tester</p></li><li><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;line-height: 182%;text-align: left;"><a name="bookmark15"><b>Modulation—RF-PHY/TRM/BV-05-C and RF-PHY/TRM/BV-06-C </b></a>Used to make the modulation, and frequency offset and drift measurements. In this example, the <span class="s10">test_dtm_tx_v4 </span>command is used.</p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 10pt;text-align: left;">To follow the test specification, you need to be able to change your payload data pattern (either 1010 pattern or 11110000 pattern).</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A spectrum analyzer is used to measure the modulation, frequency offset, and drift measurements of the radio and must be connected through a compatible RF cable to the RF connector of the radio board.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">It is also possible to test by using a separate Bluetooth tester device provided that the DTM firmware is installed in the DUT.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 57pt;text-indent: 0pt;text-align: left;"><span><img width="640" height="480" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_026.gif"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 5.2.  Modulation Characteristics</p></li><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark16">Spectrum—RF-PHY/TRM/BV-03-C</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Used for in-band emissions measurements.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In this example, the <span class="s10">test_dtm_tx_v4 </span>command is used.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A spectrum analyzer is used to measure the spectrum of the radio and must be connected through a compatible RF cable to the RF connector of the radio board.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">It is also possible to use a separate Bluetooth tester device provided that the DTM firmware is installed in the DUT.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 57pt;text-indent: 0pt;text-align: left;"><span><img width="640" height="480" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_027.gif"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 5.3.  Spectrum Test</p></li><li><p class="s9" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark17">Receiver Tests</a></p></li></ol></li></ol></li></ol></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Used to make all of the sensitivity-based measurements, as well as blocker measurements.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">In this example, the <span class="s10">test_dtm_rx </span>command is used. In Bluetooth NCP Commander Standalone, the test is started by selecting <b>Low energy receive </b>and then pressing the <b>Start test </b>button.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">A spectrum analyzer and two RF generators are used to validate the receiver tests and must be connected through a compatible RF cable to the RF connector of the radio board.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A separate Bluetooth tester device can be used, but you might have to consider adding to it an external signal generator to provide the second interferer or blocker signal.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 57pt;text-indent: 0pt;text-align: left;"><span><img width="640" height="480" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_028.gif"/></span></p><p class="s9" style="padding-top: 8pt;padding-left: 102pt;text-indent: 0pt;text-align: center;">Figure 5.4.  Receiver Test</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 36pt;text-indent: 0pt;text-align: left;">Simplicity Studio</h2><p class="s13" style="padding-top: 14pt;padding-left: 36pt;text-indent: 0pt;line-height: 122%;text-align: left;">One-click access to MCU and wireless tools, documentation, software, source code libraries &amp; more. Available for Windows, Mac and Linux!</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="768" height="432" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_029.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_030.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s14" style="padding-left: 1pt;text-indent: 0pt;text-align: center;">IoT Portfolio</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;"><a href="http://www.silabs.com/IoT" class="s15">www.silabs.com/IoT</a></p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_031.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s14" style="padding-left: 1pt;text-indent: 0pt;text-align: center;">SW/HW</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/simplicity" class="s15">www.silabs.com/simplicity</a></p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_032.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_033.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s14" style="text-indent: 0pt;text-align: left;">Support &amp; Community</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/community" class="s15">www.silabs.com/community</a></p><p style="text-indent: 0pt;text-align: left;"/><p class="s14" style="padding-top: 5pt;padding-left: 228pt;text-indent: 0pt;text-align: center;">Quality</p><p style="padding-top: 1pt;padding-left: 228pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s15">www.silabs.com/quality</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s17" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software imple- menters using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each <span class="s18">specific device, and “Typical” parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the infor</span>- mation supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or <span class="s18">authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required or Life Support Systems without the specific written consent of Silicon Labs. A “Life Support System” is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used </span>in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims <span class="s18">all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications. </span><b>Note: This content may contain offensive terminology that is now obsolete. Silicon Labs is replacing these terms with inclusive language wherever possible. For more </b><a href="http://www.silabs.com/about-us/inclusive-lexicon-project" style=" color: #4C4D4F; font-family:&quot;Lucida Sans&quot;, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt;" target="_blank">information, visit </a><a href="http://www.silabs.com/about-us/inclusive-lexicon-project" class="s21" target="_blank">www.silabs.com/about-us/inclusive-lexicon-project</a></p><p class="s20" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Trademark Information</p><p class="s22" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 117%;text-align: justify;"><span class="s17">Silicon Laboratories Inc.</span>®<span class="s17">, Silicon Laboratories</span>®<span class="s17">, Silicon Labs</span>®<span class="s17">, SiLabs</span>® <span class="s17">and the Silicon Labs logo</span>®<span class="s17">, Bluegiga</span>®<span class="s17">, Bluegiga Logo</span>®<span class="s17">, Clockbuilder</span>®<span class="s17">, CMEMS</span>®<span class="s17">, DSPLL</span>®<span class="s17">, EFM</span>®<span class="s17">, EFM32</span>®<span class="s17">, EFR, Ember</span>®<span class="s18">, Energy Micro, Energy Micro logo and combinations thereof, “the world’s most energy friendly microcontrollers”, Ember</span>®<span class="s17">, EZLink</span>®<span class="s17">, EZRadio</span>®<span class="s17">, EZRadioPRO</span>®<span class="s17">, Gecko</span>®<span class="s17">, Gecko OS, Gecko OS Studio, ISOmodem</span>®<span class="s17">, Precision32</span>®<span class="s17">, ProSLIC</span>®<span class="s17">, Simplicity Studio</span>®<span class="s17">, SiPHY</span>®<span class="s17">, Telegesis, the Telegesis Logo</span>®<span class="s17">, USBXpress</span>® <span class="s17">, Zentri, the Zentri logo and Zentri DMS, Z-Wave</span>®<span class="s17">, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Hold- ings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="148" height="73" alt="image" src="an1267-bt-rf-phy-evaluation-using-dtm-sdk-v3x/Image_034.png"/></span></p><p class="s20" style="padding-top: 5pt;padding-left: 149pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s20" style="padding-left: 149pt;text-indent: 0pt;line-height: 8pt;text-align: left;">USA</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><h4 href="http://www.silabs.com/">www.silabs.com</h4></p></body></html>
