<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>UG103.18: Bluetooth Direction Finding Fundamentals</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s4 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s5 { color: #007693; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:"Cambria Math", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s10 { color: black; font-family:"Cambria Math", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; vertical-align: -8pt; }
 .s11 { color: black; font-family:"Cambria Math", serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s12 { color: black; font-family:"Cambria Math", serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9.5pt; }
 a { color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt; }
 h2 { color: #FFF; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s14 { color: #FFF; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 h4 { color: #D91E2A; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s15 { color: #4D4D4F; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s16 { color: #4D4D4F; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s17 { color: #4D4D4F; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s18 { color: #4D4D4F; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s19 { color: #D91E2A; font-family:Calibri, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: d2 1; }
 #l3> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l4 {padding-left: 0pt; }
 #l4> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt;counter-reset: d2 1; }
 #l6> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l7 {padding-left: 0pt;counter-reset: d3 1; }
 #l7> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l8 {padding-left: 0pt;counter-reset: d2 1; }
 #l8> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l9 {padding-left: 0pt;counter-reset: d3 1; }
 #l9> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: d3 0;  }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="127" height="62" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="37" height="37" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_002.png"/></span></p><h1 style="padding-top: 11pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">UG103.18: <i>Bluetooth® </i>Direction Finding Fundamentals</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="728" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="206" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s2" style="padding-top: 4pt;padding-bottom: 1pt;padding-left: 13pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 11pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="206" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_005.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s3" style="padding-left: 20pt;text-indent: -7pt;text-align: left;">Angle of Arrival</p></li><li><p class="s3" style="padding-top: 3pt;padding-left: 20pt;text-indent: -7pt;text-align: left;">Angle of Departure</p></li><li><p class="s3" style="padding-top: 3pt;padding-left: 20pt;text-indent: -7pt;text-align: left;">Direction Finding Algorithms</p></li><li><p class="s3" style="padding-top: 3pt;padding-left: 20pt;text-indent: -7pt;text-align: left;">Bluetooth support</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s4" style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Bluetooth Angle of Arrival (AoA) and Angle of Departure (AoD) are new technologies that establish a standardized framework for indoor positioning. With these technologies, the fundamental problem of positioning comes down to solving the arrival and departure angles of radio frequency signals. This document explains the basics of these technologies and provides the theory behind estimating angle of arrival.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 162pt;text-indent: 0pt;text-align: left;"><span><img width="341" height="351" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_006.jpg"/></span></p><p class="s5" style="padding-bottom: 2pt;text-indent: 0pt;text-align: right;">Introduction</p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="724" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_007.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l2"><li><h3 style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><a name="bookmark0">Introduction</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Positioning technologies have many useful applications, one example being GPS, which is widely used all over the world. Unfortunate- ly, GPS does not work very well indoors, so there is a real need for better indoor positioning technologies. The goal is to track the loca- tions (or direction) of individual objects with an external tracking system, or for a device to track its own location in an indoor environ- ment. This kind of locating system can be used to track assets in a warehouse or people in a shopping mall, or people can use it to find their own directions. There are two conventional methods to calculate the position of an asset: trilateration and triangulation.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Trilateration means determining the distance of the asset from multiple fixed-position locators, and determining the position by finding the point that satisfies all distance measurements. The distance can be determined by Received Signal Strength Indicator (RSSI) measurement or by Time of Flight measurement, for example. Unfortunately, RSSI measurement can be very inaccurate and Time of Flight measurement needs highly accurate time measurement.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Triangulation means determining the angles under which the fixed-position locators see the asset (or under which the asset sees the fixed-position locators). The position of the asset is then determined by the intersection point of the lines of sight. This method can give a more accurate position than trilateration with RSSI measurement, and requires less expensive hardware than Time of Flight meas- urement. However, it needs an antenna array and a method with which the direction (angle) of the incoming signal can be determined.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">This document describes the theory behind direction finding, that is, the general problem of estimating arrival and departure angles. It also discusses how Bluetooth 5.1 supports direction finding implementations.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><h3 style="padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;"><a name="bookmark1">Direction Finding Methods</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Two methods for Direction Finding exist. In one method an Asset (to be located) transmits a signal and the Locators receive this signal. The Locators then are able to determine the relative direction of the asset. This is called the Angle of Arrival (AoA) calculation. In the other method, the Asset (to be located) receives the signal transmitted by some Beacons. In this case the Asset is able to determine its relative direction to the Beacons. This is called the Angle of Departure (AoD) calculation.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The first method can be used when an asset is to be found in a big warehouse, for example. The second method is useful if the Asset wants to locate itself without anyone else knowing its location. For example, a shopper wants to determine their position in a big shopping mall using their smartphone and the signal of some beacons. That individual definitely does not want to transmit signals to let others know where they are.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l3"><li><p class="s6" style="padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark2">Angle of Arrival (AoA)</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The complicated theory of Direction Finding can be simplified to the following fact: if multiple receiver antennas are placed next to each other, the radio waves emitted by a single transmitter will reach the different antennas in different phases. From this phase difference the direction the radio waves came from can be calculated. Since the angle is determined relative to the receiver, this use case is called Angle of Arrival estimation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 101pt;text-indent: 0pt;text-align: left;"><span><img width="515" height="237" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_008.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 2-1. Determining Angle of Arrival</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Assuming that the incoming signal does not change frequency during measurement (that is, it is unmodulated), and that the distance between the receiver antennas is shorter than half of the wavelength, the phase difference unequivocally determines the angle of inci- dence.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In this method:</p><ul id="l4"><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The Asset transmits an unmodulated narrowband signal for a specific time.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The Locator samples the received signal on multiple antennas.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In practice, the receiver must have multiple ADC channels or use an RF switch to take samples from each individual channel. The samples are called “IQ-samples” since a sample pair of “In-phase” and “Quadrature-phase” readings are taken from the same input signal. These samples have a 90-degree phase difference in the sampling. When this pair is considered to be a complex value, each complex value contains both phase and amplitude information and can be an input for the arrival angle estimation algorithm.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Radio waves travel at the speed of light, which is 300,000 km/s. At frequencies around 2.4GHz, the corresponding wavelengths are about 0.125 m. The maximum distance between two adjacent antennas for most estimation algorithms is a half wavelength. Many algo- rithms require this, otherwise effects similar to aliasing occur. There is no theoretical minimum distance limitation, but in practice the minimum size is limited by the mechanical dimensions of the array plus, for example, mutual coupling between the antenna elements.</p><p class="s5" style="padding-bottom: 2pt;text-indent: 0pt;text-align: right;">Direction Finding Methods</p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="724" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_009.png"/></span></p></li></ul></li><li><p class="s6" style="padding-top: 7pt;padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark3">Angle of Departure (AoD)</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The setup can also be reversed. If multiple antennas transmit waves with the same initial phase, then a single antenna can measure the phase differences of the different incoming waves and it can calculate its own direction relative to the transmitting antenna array. Since the angle is now determined relative to the transmitter, this use case is called Angle of Departure estimation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 101pt;text-indent: 0pt;text-align: left;"><span><img width="515" height="229" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_010.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 2-2. Determining Angle of Departure</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note that transmitters (Beacons) have to transmit with the same frequency on each antenna, because that is a prerequisite for the angle calculation. This also means that the antennas cannot transmit at the same time, since their signals would interfere. To solve this issue, the transmitter device must sequentially switch between the transmitting antennas, and the receiving side must know the antenna array configuration and switching sequence.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In this method:</p><ul id="l5"><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The Beacon transmits an unmodulated signal on multiple antennas using time division, that is, only one antenna transmits at a time.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The Asset (for example a smartphone) samples the signal of the multiple antennas using the same time division.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">From the application’s perspective, the two methods are clearly different. In AoD, the receiving device is able to calculate its own posi- tion in space using angles from multiple beacons and their positions (by triangulation). In AoA, the receiving device tracks arrival angles for individual objects. However, because the two methods can be combined in different ways, the methods do not limit what can be done at the application level. In both Bluetooth AoA and AoD, the related control data is sent over a traditional data channel. Typically, these techniques can achieve a couple of degrees angular accuracy and around 0.5 m positioning accuracy, but these figures are high- ly dependent on the implementation of the positioning system.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><h3 style="padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;"><a name="bookmark4">Direction Finding Theory</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Angle estimation (direction-finding) methods and antenna arrays are essential for the positioning system to work properly. The history of direction finding theory goes back more than 100 years, when the first attempts to solve this problem were made using directional an- tennas and, obviously, purely analog systems. In the years following, test methods moved to the digital world, but the basic principles are still similar. These direction-finding methods are already used in many applications, such as medical equipment, security, and mili- tary devices. This section discusses the basics of some typical antenna arrays and estimation algorithms. In this document direction finding refers to the general problem of estimating arrival and departure angles.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l6"><li><p class="s6" style="padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark5">Antenna Arrays</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Antenna arrays for direction finding are usually divided into categories. The most common ones discussed here are Uniform Linear Array (ULA), Uniform Rectangular Array (URA), and Uniform Circular Array (UCA). The linear array is a one-dimensional array, mean- ing that all the antennas in the array lie on a single line, whereas the rectangular and circular arrays are two-dimensional (2D) arrays, meaning that the antennas are spread in two dimensions (on a plane).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 94pt;text-indent: 0pt;text-align: left;"><span><img width="528" height="125" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_011.gif"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 3-1. Different Types of Antenna Arrays</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">By using a one-dimensional antenna array, one can reliably measure only the azimuth angle, assuming the tracked device moves con- sistently on the same plane. Also, the azimuth measurement is limited to a 180 degree-wide angle range due to symmetry reasons. With two-dimensional arrays, one can reliably measure both azimuth (theta) and elevation (phi) angles in the 3D half-space, as shown in the following figure. If the array is extended to a full 3D array (antennas spread on all three Cartesian coordinates), then it is possible to measure the full 3D space.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 206pt;text-indent: 0pt;text-align: left;"><span><img width="237" height="175" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_012.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 5pt;padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 3-2. Determining Azimuth and Elevation Angles with a 2D Antenna Array</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Designing an antenna array for direction finding is not a straightforward task. When antennas are placed in an array, they start affecting each other’s responses; called mutual coupling. Another consideration is that, in most cases, the polarization of the transmitting end cannot be controlled. This creates an additional challenge for the designer. In IoT applications, the devices are often expected to be small and even to work in very high frequency bands. Estimation algorithms often require certain properties from the array. For exam- ple, the estimation algorithm called ESPRIT works on the mathematical assumption that the array is divided into two identical subarrays (see Z. Chen, G. Gokeda, Y. Yu, <u>Introduction to Direction-of-Arrival Estimation</u>, Artech House, 2010).</p></li><li><p class="s6" style="padding-top: 7pt;padding-left: 52pt;text-indent: -28pt;text-align: justify;"><a name="bookmark6">Angle Estimation Algorithms</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Consider the mathematical/algorithmic problem of estimating the angle of arrival based on the input IQ-data. The problem definition itself is simple: estimate the arrival angle of an emitted (narrowband) signal arriving at the receiving array. While the problem statement sounds trivial and a trivial solution is possible, a robust solution for this problem that works in real life is not easy and can require much processing power from the hardware. This section describes the trivial solution, and then provides a high-level overview of two different, more robust, approaches for solving this problem. The first one is basic and called a classical beamformer. The second is a more ad- vanced technique called Multiple Signal Classification (MUSIC). Deeper studies of these estimation algorithms can be found in H. Krim,</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">M. Viberg, “Two Decades of Array Signal Processing”, IEEE Signal Processing Magazine, July 1996, pp. 67-94, and Y.-M. Chen, “On Spatial Smoothing for Two-Dimensional Direction-of-Arrival Estimation of Coherent Signals”, IEEE Transactions on Signal Processing, Vol. 45, No. 7, July 1997.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l7"><li><p class="s6" style="padding-left: 52pt;text-indent: -28pt;text-align: justify;"><a name="bookmark7">The Trivial Solution</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Assume the use of two receiver antennas. If the incoming signal hits these antennas with an oblique incident angle, it results in a phase difference (<i>ψ</i>), because the wavefront propagates with the speed of light (<i>c</i>), and it needs more time to reach the further antenna. Since the wavelength at 2.4GHz is around <i>λ</i>=0.125m, this phase shift can be translated into a distance between the wavefront and the further antenna:</p><p class="s9" style="padding-top: 7pt;padding-left: 115pt;text-indent: 0pt;line-height: 12pt;text-align: center;">𝜆𝜆</p><p style="text-indent: 0pt;text-align: left;"><span><img width="19" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_013.png"/></span></p><p class="s9" style="padding-left: 115pt;text-indent: 0pt;line-height: 78%;text-align: center;">∆=  𝜓𝜓 <span class="s10">2𝜋𝜋</span></p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">If the receiver is far enough from the transmitter (at least 3-4 wavelengths), the wavefront is assumed to be planar. In this case the angle of incidence can be readily determined from this distance (<i>Δ</i>) using trigonometric functions:</p><p class="s9" style="padding-top: 6pt;padding-left: 56pt;text-indent: 0pt;line-height: 12pt;text-align: center;">Δ</p><p style="text-indent: 0pt;text-align: left;"><span><img width="10" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_014.png"/></span></p><p class="s9" style="padding-left: 113pt;text-indent: 0pt;line-height: 78%;text-align: center;">Θ = arccos �<span class="s10">𝑑𝑑</span>�</p><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">where <i>d </i>is the distance between the antennas.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 211pt;text-indent: 0pt;text-align: left;"><span><img width="243" height="226" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_015.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 6pt;padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 3-3. Calculating the Incident Angle</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">This is the trivial solution for the direction-finding problem. However, it only works within ideal conditions, that is if there is no noise and no multipath propagation. Adding more antennas soon reveals that, in a real environment, the phase increase along the antennas is not perfectly linear, and even the amplitudes can differ due to constructive and destructive interferences. To eliminate the effect of multipath propagation and to find the optimal estimation in a noisy environment, more sophisticated solutions must be found.</p></li><li><p class="s6" style="padding-top: 7pt;padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark8">Classical Beamformer</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Start with a mathematical model of a uniform linear array. A data vector, called <span class="s11">𝑥𝑥</span>, of IQ-samples for each antenna is given. A phase shift is seen by each antenna (which can be 0) plus some noise, <span class="s11">𝑛𝑛</span>, in the measurements, so <span class="s11">𝑥𝑥 </span>can be written as a function of time <span class="s11">𝑡𝑡</span>:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 203pt;text-indent: 0pt;text-align: left;"><span><img width="231" height="22" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_016.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">where <span class="s11">𝑠𝑠 </span>is the signal sent over the air, and <span class="s11">𝑎𝑎 </span>is the steering vector of the antenna array:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 176pt;text-indent: 0pt;text-align: left;"><span><img width="298" height="27" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_017.jpg"/></span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">where <span class="s11">𝑑𝑑 </span>is the distance between adjacent antennas; <span class="s11">𝜆𝜆 </span>is the wavelength of the signal; <span class="s11">𝑚𝑚 </span>is the number of elements in the antenna ar- ray, and <span class="s11">𝜃𝜃 </span>stands for the angle of arrival. Steering vector (2) describes how signals on each antenna are phase shifted because of the varying distances to the transmitter. Using (1), an approximation of the so-called sample covariance matrix, <span class="s11">𝑅𝑅</span>xx, can be calculated by:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 209pt;text-indent: 0pt;text-align: left;"><span><img width="239" height="49" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_018.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">where <i>H </i>stands for the Hermitian transpose of a matrix.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The sample covariance matrix (3) will be used as an input for the estimator algorithm.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The idea of the classical beamformer is to maximize the output power as a function of the angle, similar to how a mechanical radar works. If the power is maximized, the result is the next formula:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 206pt;text-indent: 0pt;text-align: left;"><span><img width="233" height="40" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_019.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">To find the arrival angle, loop through the arrival angle <span class="s11">𝜃𝜃 </span>and find the peak maximum power, <span class="s11">𝑃𝑃</span>. The angle producing the maximum power corresponds to the angle of arrival.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">While this approach is quite simple, in general its accuracy is not good. Therefore, it is worth investigating other methods that are better in terms of accuracy. See, for example, the algorithm accuracy comparison in N. A. Baig, M. B. Malik, “Comparison of Direction of Arri- val (DOA) Esimation Techniques for Closely SpacedTargets”, International Journal of Future Computer and Communication, Vol. 2, No. 6, December 2013.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s6" style="padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark9">MUSIC (Multiple Signal Classification)</a></p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;line-height: 106%;text-align: justify;">One type of estimation algorithm is the so-called subspace estimator, and one popular algorithm of that category is called MUSIC (Mul- tiple Signal Classification). The idea of this algorithm is to perform eigen decomposition on the covariance matrix <span class="s11">𝑅𝑅</span>xx :</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 216pt;text-indent: 0pt;text-align: left;"><span><img width="211" height="27" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_020.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">where <span class="s11">𝐴𝐴 </span>is a diagonal matrix containing eigenvalues and <span class="s11">𝑉𝑉 </span>containing the corresponding eigenvectors of <span class="s11">𝑅𝑅</span>xx .</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When estimating the angle of arrival for one transmitter with an <span class="s11">𝑛𝑛 </span>antenna linear array, the eigenvectors of <span class="s11">𝑅𝑅</span>xx can be shown to either belong to so-called noise subspace or signal subspace. If the eigenvalues are sorted in ascending order, the corresponding <span class="s11">𝑛𝑛 </span>− 1 ei- genvectors span the noise subspace, which is orthogonal to the signal subspace. Based on the orthogonality information, the pseudo spectrum <span class="s11">𝑃𝑃 </span>can be calculated:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 206pt;text-indent: 0pt;text-align: left;"><span><img width="234" height="44" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_021.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">As in a classical beamformer, the angle of arrival (argument <span class="s11">𝜃𝜃</span>) can be found by looping through the desired values of <span class="s11">𝜃𝜃 </span>and finding the location of the maximum peak value of <span class="s11">𝑃𝑃.</span></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In an ideal case, MUSIC has excellent resolution in a good SNR environment and is very accurate. On the other hand, its performance is not very strong when the input signals are highly correlated, especially in an indoor environment. Multipath effects distort the pseudo- spectrum, causing it to have maximums at the wrong locations. The following figure compares the pseudospectrum under ideal circum- stances (above) and in a real environment with a lot of reflections (below).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 194pt;text-indent: 0pt;text-align: left;"><span><img width="264" height="190" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_022.jpg"/></span></p><p class="s6" style="padding-top: 4pt;padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 3-4. Pseudospectrum under Ideal Circumstances and in a Real Environment</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">More information about the conventional beamformer and MUSIC estimators can be found in Z. Chen, G. Gokeda, Y. Yu, <u>Introduction</u> <u>to Direction-of-Arrival Estimation</u>, Artech House, 2010.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s6" style="padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark10">Spatial Smoothing</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Spatial smoothing is a method for solving problems caused by multipathing propagation when coherent signals are present. It can be proved that the signal covariance matrix can be &quot;decorrelated&quot; by calculating an averaged covariance matrix using subarrays of the original covariance matrix. For a two-dimensional array, this can be written as the following:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 200pt;text-indent: 0pt;text-align: left;"><span><img width="252" height="53" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_023.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">where <span class="s11">𝑀𝑀</span><i>s </i>and <span class="s11">𝑁𝑁</span><i>s </i>are the number of subarrays in x and y directions respectively and <span class="s11">𝑅𝑅𝑚𝑚</span><span class="s12">n </span>stands for the (<span class="s11">𝑚𝑚</span>, <span class="s11">𝑛𝑛</span>)th sub array covariance matrix. An example proof of this formula and more information can be found in Y.-M. Chen, “On Spatial Smoothing for Two-Dimensional Direction-of-Arrival Estimation of Coherent Signals”, IEEE Transactions on Signal Processing, Vol. 45, No. 7, July 1997.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The resulting covariance matrix can now be used as a &quot;decorrelated&quot; version of the covariance matrix and fed to the MUSIC algorithm to produce correct results. The downside of spatial smoothing is that it reduces the size of the covariance matrix, which further reduces the accuracy of the estimate.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s6" style="padding-left: 55pt;text-indent: -31pt;text-align: left;"><a name="bookmark11">Challenges</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">As shown earlier, calculating angle estimates in an ideal environment is insufficient. They must also be calculated in environments with heavy multipath effects, where signals are highly correlated or coherent. A coherent signal means a signal that is delayed and is a scaled version of some other signal. This can be the case when radio waves are reflected from walls, for example. Other challenges include signal polarization. In most cases, the polarization of the mobile device cannot be controlled, so the system has to take this into account. Also signal noise, clock jitter, and signal propagation delays add their own variables to the problem. Depending on the system scale, the RAM and especially CPU requirements can be demanding for an embedded system. Many of the effective angle estimation algorithms require a significant amount of processing power from the CPU.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A proper angle estimator algorithm must consider all these issues, and apply advanced techniques to reduce their adverse effects to the minimum.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><h3 style="padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;"><a name="bookmark12">Location Finding</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Without knowing the accurate distance of the asset or if the asset is constrained to move in a 2D plane, one antenna array can provide the direction of the asset, but not its position. To determine the precise position of the asset, multiple antenna arrays must be used. By using more than one antenna array, the position of the asset can be determined using triangulation. The asset can be found at the intersection of the lines drawn in the directions determined by the direction-finding algorithm. Triangulation can also be supplemented with trilateration. Adding RSSI measurements to the direction estimations can further enhance the position estimation.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 170pt;text-indent: 0pt;text-align: left;"><span><img width="331" height="277" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_024.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 4-1. Asset Positioning with Multiple Antenna Arrays</p><ol id="l8"><li><p class="s6" style="padding-top: 7pt;padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark13">Location Finding with AoA</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In the case of Angle-of-Arrival estimation, the direction of the transmitting asset is determined on each locator. If the positions of the locators are known and the direction of the asset is known relative to each locator, then the position of the asset can be determined. However, to do so the direction information must first be gathered from each locator to a central device that does the position estima- tion, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 38pt;text-indent: 0pt;text-align: left;"><span><img width="675" height="333" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_025.jpg"/></span></p><p class="s6" style="padding-top: 7pt;padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 4-2. Angle of Arrival with a Central Gateway</p><ol id="l9"><li><p class="s6" style="padding-top: 7pt;padding-left: 52pt;text-indent: -28pt;text-align: left;"><a name="bookmark14">Location Finding with AoD</a></p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">In the case of Angle-of-Departure estimation, the directions of the transmitting beacons are determined on the asset. If the asset knows the position of the beacons, it can instantly calculate its position from all the estimated angles, and there is no need for a central posi- tion estimator device, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 38pt;text-indent: 0pt;text-align: left;"><span><img width="675" height="333" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_026.jpg"/></span></p><p class="s6" style="padding-top: 7pt;padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 4-3. Angle of Departure with Bluetooth Beacons</p><p class="s5" style="padding-bottom: 2pt;padding-left: 338pt;text-indent: 0pt;text-align: left;">Bluetooth Supplement to Support Direction Finding</p><p style="padding-left: 22pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="724" height="1" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_027.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li></ol></li><li><h3 style="padding-left: 41pt;text-indent: -18pt;text-align: left;"><a name="bookmark15">Bluetooth Supplement to Support Direction Finding</a></h3></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">To be able to find the direction of the incoming signal from phase differences, an unmodulated signal must be transmitted by the trans- mitter. Transmitting a CW (continuous wave) signal for a long time is not recommended outside of testing environments, because it has a very sharp spectrum and can cause serious interference with other devices working in the 2.4 GHz frequency range. Therefore, a short CW must be used, and the transmitter and the receiver must be synchronized so that both of them know when the CW signal is sent. Additionally, in the AoD method the receiver must know the exact time instance when antenna switching occurs on the transmitter side.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Many solutions can be found to overcome this simple problem, and indeed there are many indoor positioning solutions on the market already using direction-finding algorithms. None of them is based on a well-known standard, however. The Bluetooth standard, in con- trast, is widespread, and it solves the synchronization problem by its nature: Bluetooth packets are sent with very strict timing, and the peer devices resynchronize their clocks on each reception.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Bluetooth 5.1 introduced a new method to request and send short CW signals as an extension of a normal package. This extension is called Constant Tone Extension (CTE), and it is sent after the CRC of the package when requested.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;"><span><img width="513" height="43" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_028.gif"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 115pt;text-indent: 0pt;text-align: center;">Figure 5-1. Bluetooth Package with CTE</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">CTEs can be sent both through a connection or in periodic advertisements which helps to scale the system. The CTE also has parame- ters communicated through the Bluetooth package, such as CTE type (AoA/AoD), duration, and switching slot duration.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="https://www.bluetooth.com/wp-content/uploads/Files/developer/1903_RDF_Technical_Overview_FINAL.pdf" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">For a more detailed description of Bluetooth-based direction finding, see Bluetooth SIG documentation </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://www.bluetooth.com/wp-</span><a href="https://www.bluetooth.com/wp-content/uploads/Files/developer/1903_RDF_Technical_Overview_FINAL.pdf" style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank"> </a><a href="https://www.bluetooth.com/wp-content/uploads/Files/developer/1903_RDF_Technical_Overview_FINAL.pdf" target="_blank">content/uploads/Files/developer/1903_RDF_Technical_Overview_FINAL.pdf</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-top: 21pt;padding-left: 36pt;text-indent: 0pt;text-align: left;">Simplicity Studio</h2><p class="s14" style="padding-top: 15pt;padding-left: 36pt;text-indent: 0pt;text-align: left;">One-click access to MCU and wireless tools, documentation, software, source code libraries &amp; more. Available for Windows, Mac and Linux!</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="768" height="435" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_029.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="79" height="79" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_030.png"/></span></p><h4 style="padding-left: 115pt;text-indent: 0pt;text-align: center;">IoT Portfolio</h4><p style="padding-top: 1pt;padding-left: 115pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/IoT" class="s15">www.silabs.com/IoT</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="79" height="79" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_031.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;">SW/HW</h4><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 37pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/simplicity" class="s16">www.silabs.com/simplicity</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="79" height="79" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_032.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;">Quality</h4><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/quality" class="s15">www.silabs.com/quality</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 31pt;text-indent: 0pt;text-align: left;">Support &amp; Community</h4><p style="text-indent: 0pt;text-align: left;"><span><img width="79" height="79" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_033.png"/></span></p><p style="padding-top: 1pt;padding-left: 33pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/community" class="s15">www.silabs.com/community</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s17" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s18" style="padding-top: 1pt;padding-bottom: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to</p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span><img width="771" height="49" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_034.png"/></span></p><p class="s18" style="padding-top: 1pt;padding-bottom: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;">of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems</p><p style="padding-left: 6pt;text-indent: 0pt;text-align: left;"><span><img width="745" height="23" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_035.png"/></span></p><p class="s18" style="padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;">products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s17" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Trademark Information</p><p class="s18" style="padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, “the world’s most energy friendly microcontrollers”, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress®, Zentri, the Zentri logo and Zentri DMS, Z-Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="134" height="66" alt="image" src="ug103-18-bluetooth-direction-finding-fundamentals/Image_036.png"/></span></p><p class="s18" style="padding-top: 6pt;padding-left: 134pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s18" style="padding-left: 134pt;text-indent: 0pt;line-height: 9pt;text-align: left;">USA</p><p style="padding-top: 4pt;padding-left: 134pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/" class="s19">http://www.silabs.com</a></p></body></html>
