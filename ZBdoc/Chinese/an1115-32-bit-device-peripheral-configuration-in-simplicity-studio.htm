<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>AN1115: Configuring Peripherals for 32-Bit Devices using Hardware Configurator</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s5 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s8 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s9 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s10 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .a { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s11 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s12 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s13 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 .s14 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s15 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s16 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s17 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-style: normal; font-weight: bold; text-decoration: none; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: d2 1; }
 #l3> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l4 {padding-left: 0pt; }
 #l4> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt;counter-reset: d2 1; }
 #l6> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l7 {padding-left: 0pt;counter-reset: d3 1; }
 #l7> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l8 {padding-left: 0pt; }
 #l8> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l9 {padding-left: 0pt;counter-reset: g1 2; }
 #l9> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l9> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l10 {padding-left: 0pt;counter-reset: g2 2; }
 #l10> li>*:first-child:before {counter-increment: g2; content: counter(g1, decimal)"."counter(g2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l11 {padding-left: 0pt;counter-reset: g3 1; }
 #l11> li>*:first-child:before {counter-increment: g3; content: counter(g1, decimal)"."counter(g2, decimal)"."counter(g3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: g3 0;  }
 li {display: block; }
 #l12 {padding-left: 0pt; }
 #l12> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l13 {padding-left: 0pt;counter-reset: i1 3; }
 #l13> li>*:first-child:before {counter-increment: i1; content: counter(i1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l13> li:first-child>*:first-child:before {counter-increment: i1 0;  }
 li {display: block; }
 #l14 {padding-left: 0pt;counter-reset: i1 3; }
 #l14> li>*:first-child:before {counter-increment: i1; content: counter(i1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l14> li:first-child>*:first-child:before {counter-increment: i1 0;  }
 #l15 {padding-left: 0pt;counter-reset: i2 1; }
 #l15> li>*:first-child:before {counter-increment: i2; content: counter(i1, decimal)"."counter(i2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l15> li:first-child>*:first-child:before {counter-increment: i2 0;  }
 #l16 {padding-left: 0pt; }
 #l16> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">AN1115: Configuring Peripherals for 32- Bit Devices using Hardware Configurator</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="204" height="1" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="205" height="1" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes the two essential Hardware Configurator files.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Discusses modifying peripheral configurations by changing plugins in the Simplicity IDE.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Provides details on using the Hardware Configurator tool.</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Peripherals are configured using the Hardware Configurator in Simplicity Studio. The Hardware Configurator simplifies peripher- al configuration by presenting peripherals and peripheral proper- ties in a graphical user interface. For some SDKs, many periph- erals can also be configured from within the Simplicity IDE as plugin options.</p><p class="s3" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you are developing with the Bluetooth SDK v2.x, see <i>UG136: Silicon  Labs  Bluetooth®  C  Application  Developer&#39;s  Guide  for SDK v2.x </i><a href="https://docs.silabs.com/simplicity-studio-5-users-guide/1.0/" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt;" target="_blank">installed with the SDK in Simplicity Studio 4. Beginning with Gecko SDK Suite v3.x and Simplicity Studio 5, a new Pin Tool provides similar functionality for SDKs that have migrated to the new underlying framework. See the </a><a href="https://docs.silabs.com/simplicity-studio-5-users-guide/1.0/" class="s5" target="_blank">Simplicity Studio® 5 Us- </a><span style=" color: #049;">er&#39;s Guide </span>for more information.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l2"><li><h3 style="padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Introduction</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Version 2.0.0.0 of the Gecko SDK Suite implemented a number of changes to the way developers can configure peripherals on their 32-bit devices. The Hardware Configurator tool has been enhanced to produce configuration output that is standardized across the Em- berZNet and Flex SDKs. Developers in these SDKs, who had previously configured peripherals by editing header files, now can use the Hardware Configurator either through an interface in Simplicity IDE or through the Hardware Configurator tool.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The Hardware Configurator provides an easy-to-use method of peripheral configuration by presenting peripherals and peripheral prop- erties in a graphical user interface.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l3"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark1">File Inputs and Outputs</a><a name="bookmark3">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The inputs to the Hardware Configurator processor are shown in the following figure. Files that are specific to the selected part, the stack application framework, and the selected example application combine through the HAL Config data model to produce a project- specific .hwconf file (<span class="s8">&lt;boardname&gt;_&lt;partname&gt;.hwconf</span>). Developers using any SDK can edit the .hwconf file using the Hardware Con- figurator tool by double-clicking the .hwconf file. Developers using the EmberZNet and Flex SDKs can also modify some options by editing plugins in the Simplicity IDE. The .hwconf file is an integral part of any project. If you need to provide your project files to Silicon Labs Support, provide the .hwconf file along with the .isc file and other project files.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 37pt;text-indent: 0pt;text-align: left;"><span><img width="686" height="238" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_005.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When the .hwconf file is saved or when project files are generated, the Hardware Configurator processor uses the .hwconf file to pro- duce a configuration header, hal-config.h. It contains a structured set of defines that are used to configure the HAL or BSP. This header is standardized across SDKs.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Developers can add their own defines to this file. In earlier approaches to hardware configuration, the initDevice files or board header were completely overwritten on generation, and updates would be lost. In the current approach, customizations are maintained as long as they are written to an unused generation region in hal-config.h.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The hal-config.h file is always in a fixed location:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s9" style=" background-color: #D8D8D8;"> &lt;workspace&gt;/&lt;projectName&gt;/hal-config/hal-config.h                                                               </span></p><p class="s10" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Introduction</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_006.png"/></span></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark2">The HAL Config Framework</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The HAL Config framework is a set of standardized configuration options used to initialize and customize hardware peripherals and drivers. These options are constructed with three components:</p><ul id="l4"><li><p class="s7" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Prefix: <span class="p">Either BSP or HAL</span></p></li><li><p class="s7" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Module: <span class="p">Each module pertains to a set of hardware features based on an underlying peripheral and/or software enhancements.</span></p></li><li><p class="s7" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Option: <span class="p">Each module can be customized by defining configuration options. These might include enabling/disabling the module, specifying a peripheral signal route location, or mode to initialize the module.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A complete list of options for the current SDK may be found under the Simplicity Studio installation:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">\developer\sdks\gecko_sdk_suite\&lt;version&gt;\platform\halconfig\reference.html</p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="228" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_007.png"/></span></p><p class="s8" style="text-indent: 0pt;line-height: 107%;text-align: left;">(HAL_GPIO_DOUT_LOW) (HAL_GPIO_MODE_INPUT)</p><p class="s8" style="text-indent: 0pt;text-align: left;">{ 0, 1 }</p><p class="s8" style="text-indent: 0pt;text-align: left;">(2)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;text-align: left;">(2)</p><p class="s8" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">{ { BSP_BUTTON0_PORT, BSP_BUTTON0_PIN }, { BSP_BUTTON1_PORT,</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;line-height: 107%;text-align: left;">#define BSP_BUTTON_COUNT #define BSP_BUTTON_INIT BSP_BUTTON1_PIN } }</p><p class="s8" style="text-indent: 0pt;line-height: 107%;text-align: left;">#define BSP_BUTTON_GPIO_DOUT #define BSP_BUTTON_GPIO_MODE #define HAL_BUTTON_ENABLE #define HAL_BUTTON_COUNT</p><p class="s8" style="text-indent: 0pt;text-align: left;">// [BUTTON]$</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;text-align: left;">(7)</p><p class="s8" style="text-indent: 0pt;text-align: left;">(gpioPortF)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;line-height: 107%;text-align: left;">#define BSP_BUTTON1_PIN #define BSP_BUTTON1_PORT</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;text-align: left;">(6)</p><p class="s8" style="text-indent: 0pt;text-align: left;">(gpioPortF)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;line-height: 107%;text-align: left;">#define BSP_BUTTON0_PIN #define BSP_BUTTON0_PORT</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;text-align: left;">(1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s8" style="text-indent: 0pt;text-align: left;">// $[BUTTON]</p><p class="s8" style="text-indent: 0pt;text-align: left;">#define BSP_BUTTON_PRESENT</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following excerpt shows the Button framework.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ul></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark4">Integration with Simplicity IDE and EmberZNet and Flex SDKs</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">This section describes how to configure peripherals inside the Simplicity IDE for the following SDK releases:</p><ul id="l5"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EmberZNet SDK 6.0.0 or higher</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Flex 2.0.0 or higher.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark11" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Because of the significant changes to hardware configuration from previous SDK versions, custom configurations in projects created with those earlier versions, particularly those for custom hardware, do not automatically update. You must edit the hardware configura- tion to match previously implemented customizations. If you are working on a Silicon Labs platform and had made your changes in earlier version of configuration plugins, upgrade rules will make most of the changes when you import the .isc file to the current SDK. Section </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">2.2.2 Upgrading from Gecko SDK Versions Prior to 2.0.0 </span>discusses some of the key differences between earlier implementa- tions of hardware configuration and the current implementation.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Also note, when creating a project for a custom hardware board you will be required to use the hardware configurator to manually set up any information related to your custom board, for example whether a LFXO is present.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The .hwconf file default configuration is based on the part selected when the project is created. Unless the part is changed on the Gen- eral tab, the .hwconf file is not regenerated, only edited.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Not all Hardware Configurator options can be modified through the Simplicity IDE. The Hardware Configurator tool provides access to all options. In general, Silicon Labs recommends that you configure your project by enabling and disabling the relevant plugins, and then customize peripherals through the Hardware Configurator tool. Because both the Hardware Configurator tool and the Simplicity IDE interface are changing the underlying .hwconf file, changes made in one GUI can be seen in the other.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l6"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark5">Functionality on the General and HAL Tabs</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l7"><li><p class="s7" style="padding-top: 5pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark6">General Tab</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The Architecture selector allows you to modify the architecture you selected when you created the project, or that was automatically configured as part of the &quot;one-click&quot; method of creating an example project. Per the following figure the architecture shows:</p><ul id="l8"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Board</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Part. Changing the part causes a new .hwconf file to be generated the next time you click [<b>Generate</b>].</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Toolchain</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 59pt;text-indent: 0pt;text-align: left;"><span><img width="656" height="100" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_008.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">If you have made changes to the .hwconf file and then change the part selected in the Architecture, your .hwconf changes will not be transferred to the new .hwconf file that is generated.</p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark7">HAL Tab</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The HAL tab contains hooks to the Hardware Configurator. As shown in the following figure, the Board Header section enables Hard- ware Configurator, which is required for EFR32xG applications. A number of options are greyed out. Users of earlier SDK versions will note that they reflect the former architecture using the hal-config.h file. The interface reflects the fact that the Hardware Configurator works directly with the .hwconf file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="721" height="167" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_009.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Further down, another block configures integration with the Hardware Configurator. See the following figure for an example.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 29pt;text-indent: 0pt;text-align: left;"><span><img width="706" height="196" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_010.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you want to import the hardware configuration from an existing project that is based on the same target hardware, check the <b>Custom Hardware Configurator File </b>checkbox and provide an absolute path to use an .hwconf file in a different project, or when you are im- porting a project. When the checkbox is checked, the code that generates an .hwconf file for the project is bypassed.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Click [<b>Open Hardware Configurator</b>] to open the tool. This has the same effect as double-clicking the .hwconf file. See section</p></li></ol></li></ol></li><li><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><a href="#bookmark15" class="a">Using the Hardware Configurator</a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;"> </span><a href="#bookmark3" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">for more information on the Hardware Configurator tool. The file block shows the input files to the Hardware Configurator processor. These are the same three categories shown in the figure in section </a><a href="#bookmark3" class="a">1.1 File Inputs and </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Outputs</span>.</p></li></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Finally click [<b>Reset Hardware Configurator</b>] to go back to the defaults based on the input files. This deletes any manual changes to the hardware configuration of the project.</p><ol id="l9"><ol id="l10"><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark8">Plugin Configuration</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Plugins are configured as usual, by clicking on the plugin and making changes in the configuration options. Plugins that modify Hard- ware Configurator settings have a <b>Hardware Configurator Dependent Options </b>pane.You may need to scroll down in that pane to see all options.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Enabling/disabling plugins can also enable and disable Hardware Configurator modules and their dependent peripherals. When a plu- gin with Hardware Configurator dependencies is enabled/disabled, a pop-up dialog box shows which Hardware Configurator modules and peripherals are being enabled/disabled. See the following figure for an example.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 136pt;text-indent: 0pt;text-align: left;"><span><img width="424" height="194" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_011.jpg"/></span></p><p class="s7" style="padding-top: 5pt;padding-left: 197pt;text-indent: 0pt;text-align: center;">Figure 2.1.  Hardware Configuration disabled</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Also, when a plugin that shares Hardware Configurator modules/peripherals with another plugin is enabled/disabled, a similar warning updates the user which peripherals are being affected behind the scenes in the Hardware Configurator.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 136pt;text-indent: 0pt;text-align: left;"><span><img width="419" height="227" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_012.jpg"/></span></p><p class="s7" style="padding-top: 7pt;padding-left: 197pt;text-indent: 0pt;text-align: center;">Figure 2.2.  Hardware Configuration enabled</p><ol id="l11"><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark9">Using the Interface</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The following figure shows the Serial plugin from the Silicon Labs Zigbee Z3LightSoc example. Click on a configurator option to open a drop down or otherwise edit the property. The .hwconf file begins with standard default settings. Options that are black are default from the Hardware Configurator, and options that are blue have been modified, either by an example application or by you. All of the exam- ple applications provided with the SDKs modify the defaults. Each Hardware Configurator Dependent Module peripheral has an <b>Ena- bled </b>checkbox. If you are enabling a plugin with a peripheral, you must not only check the plugin to enable it but must also enable one or more dependent peripherals.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 31pt;text-indent: 0pt;text-align: left;"><span><img width="700" height="375" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_013.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Peripherals can be enabled either through the <b>Enabled </b><a href="#bookmark15" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">checkbox of a plugin or through the checkbox on the peripheral box in the Hardware Configurator tool (see section </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">3. Using the Hardware Configurator</span>). While this seems redundant when a plugin has only one peripheral, some plugins such as the Serial plugin have several. Simply select one of the peripherals from the list to see its configura- tion.</p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark10">Upgrading from Gecko SDK Versions Prior to 2.0.0</a><a name="bookmark11">&zwnj;</a></p></li></ol></li></ol></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Most importantly, modifications to Silicon Labs device peripherals are no longer made by editing the board header file but rather by changing the .hwconf file through the Hardware Configurator GUI. For example, to enable and configure a button or LED, which used to be done by editing hal-config.h, you now modify the options either on the plugins (new for EmberZNet) or on the module in Hardware Configurator.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Other enhancements include:</p><ul id="l12"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">The ability to modify the peripheral configuration in the Flex SDK RAILTest example.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Easier and more transparent clock configuration through the Hardware Configurator CMU module as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 190pt;text-indent: 0pt;text-align: left;"><span><img width="309" height="449" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_014.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">A number of configuration options have been relocated. Developers who import projects into the new SDK will see upgrade rules to handle these changes. Changes include:</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Serial Configuration: Moved from the HAL (HAL Configuration in EmberZNet) tab to the Hardware Configurator options on the Serial plugin.</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">The HAL Configuration plugin has been removed. All HAL Configuration options are located in the Hardware Configurator peripher- als options, many as peripherals on the Serial plugin.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Hal Config Plugin Option</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Hardware Configurator Peripheral/Plugin</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Antenna diversity</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Antenna peripheral/plugin</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">PTA and Radio Hold Off</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Combined into COEX peripheral/plugin</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Enable GPIO RX</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Serial peripheral/plugin property</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Enable VCOM</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">VCOM peripheral</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Enable VUART</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">VUART peripheral</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Enable Watchdog</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">WDOG peripheral</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Enable LEUART0 / LEUART1</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Peripherals associated with serial peripheral/plugin</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Hal Config Plugin Option</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Hardware Configurator Peripheral/Plugin</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">USART 0, 1, 2, 3</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Peripherals associated with serial peripheral/plugin</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">UART NCP port:</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">UART NCP peripheral</p></td></tr></table><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In some cases, configuration changes may still be made by selecting the plugin, but the options have been moved to the Hardware Configurator.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Plugins in this category include the following:</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Antenna diversity</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Coexistence Configuration</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">GPIO activation</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">SPI Flash</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">NCP UART</p><ol id="l13"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark12">Using the Hardware Configurator</a><a name="bookmark15">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">To open the Hardware Configurator for an open project, double-click the .hwconf file in Project Explorer or click <b>[Open Hardware Con- figurator] </b>on the HAL tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;"><span><img width="565" height="375" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_015.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">The Hardware Configurator has two views, accessed through the two <b>DefaultMode </b>tabs at the bottom of the center pane (shown in the following figure):</p></li></ol></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Port I/O—Used to configure the pin locations and port pins</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Peripherals—Used to configure modules such as Timers, USARTs, and HAL peripherals. Most configuration changes can be made through this tab.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 65pt;text-indent: 0pt;text-align: left;"><span><img width="603" height="149" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_016.jpg"/></span></p><ol id="l14"><ol id="l15"><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark13">Port I/O</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The <b>Port I/O </b>tab displays a package drawing for the selected device. This drawing updates to display changed pin assignments. An example is shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;"><span><img width="663" height="373" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_017.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Hover the cursor over a pin to see its definition. White = unused, blue = assigned, orange = two or more signals going to the pin, con- flict allowed, and red (not shown) = two or more signals going to the pin, conflict not allowed. While you can make some changes to the peripheral associated with a given pin, Silicon Labs recommends changing peripheral configuration through the peripheral tab. Use this configuration for pin customizations such as renaming the pin.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Some changes must be made in both the Port I/O and Peripherals tab. For example:</p><ul id="l16"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">A route can be selected in Port I/O and an APORT channel can be selected in the peripherals properties.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">ACMP output can be selected on the Port IO route selection and ACMP inputs can be configured in the Peripherals section.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A printable report can be generated by right-clicking on the pinout diagram and selecting <b>Pin Configuration Report</b>. This opens a re- port as a webpage in a browser that can be saved, printed, or archived. The <b>Module Configuration Report </b>option generates a similar set of tables organized by module rather than by pin order.</p><p class="s7" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Note: <span class="p">To share information about the hardware configurations for a device Silicon Labs recommends sharing the .hwconf file itself.</span></p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark14">Peripherals</a></p></li></ol></ol><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The Peripherals tab contains boxes, each of which represents either a hardware peripheral or a software concept that is HAL-related but not physically on the chip. Peripheral boxes are organized into groups. Collapse or expand a group by clicking the arrow icon on the upper right of the group. Hover your cursor over a box to see information about the peripheral.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="711" height="360" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_018.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Click on a box to see its properties in the Properties pane. Properties can either have a drop-down menu with the available selections or a text input box for a numeric or text field. After making a selection for a property, click away from the property or press Enter to ensure the property value change occurs. If you cannot disable a peripheral it may be owned by another peripheral. Go to the settings for that peripheral to free up any dependent peripherals.</p><p class="s7" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">The defines for the peripheral are only generated if the checkbox on the peripheral box is checked. For example, the interface for a project based on the Silicon Labs Zigbee Z3LightSoc example has a HAL group with a Button peripheral. Click on that peripheral to see its properties.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 31pt;text-indent: 0pt;text-align: left;"><span><img width="702" height="179" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_019.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Smart. Connected. Energy-Friendly.</h4><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Products</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products" class="s14">www.silabs.com/products</a></p><p class="s13" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s14">www.silabs.com/quality</a></p><p class="s13" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s15" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 64pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="767" height="695" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_020.png"/></span></p><p class="s16" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s17" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s17" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z- Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="an1115-32-bit-device-peripheral-configuration-in-simplicity-studio/Image_021.png"/></span></p><p class="s16" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s16" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
