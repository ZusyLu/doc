<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>AN1118: Certifying Zigbee 3.0 Devices</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s4 { color: #D71E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s5 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s6 { color: #406BCC; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s8 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s9 { color: #406BCC; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 a { color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt; }
 .s10 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s11 { color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 .s12 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s13 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s14 { color: #406BCC; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s15 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s17 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s18 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s19 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s20 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; vertical-align: -1pt; }
 .s21 { color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s22 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s23 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s24 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s25 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 .s26 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s27 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s28 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: d2 1; }
 #l3> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l4 {padding-left: 0pt;counter-reset: d2 1; }
 #l4> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt; }
 #l6> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l7 {padding-left: 0pt;counter-reset: d2 1; }
 #l7> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l8 {padding-left: 0pt;counter-reset: d2 2; }
 #l8> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l9 {padding-left: 0pt; }
 #l9> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l10 {padding-left: 0pt; }
 #l10> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l11 {padding-left: 0pt;counter-reset: d2 3; }
 #l11> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l12 {padding-left: 0pt;counter-reset: d3 1; }
 #l12> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l12> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l13 {padding-left: 0pt;counter-reset: f1 1; }
 #l13> li>*:first-child:before {counter-increment: f1; content: counter(f1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l13> li:first-child>*:first-child:before {counter-increment: f1 0;  }
 #l14 {padding-left: 0pt;counter-reset: g1 1; }
 #l14> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l14> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l15 {padding-left: 0pt; }
 #l15> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l16 {padding-left: 0pt;counter-reset: h1 1; }
 #l16> li>*:first-child:before {counter-increment: h1; content: counter(h1, decimal)". "; color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l16> li:first-child>*:first-child:before {counter-increment: h1 0;  }
 #l17 {padding-left: 0pt;counter-reset: i1 3; }
 #l17> li>*:first-child:before {counter-increment: i1; content: counter(i1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l17> li:first-child>*:first-child:before {counter-increment: i1 0;  }
 #l18 {padding-left: 0pt;counter-reset: j1 1; }
 #l18> li>*:first-child:before {counter-increment: j1; content: counter(j1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l18> li:first-child>*:first-child:before {counter-increment: j1 0;  }
 #l19 {padding-left: 0pt;counter-reset: d2 1; }
 #l19> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l19> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l20 {padding-left: 0pt;counter-reset: k1 1; }
 #l20> li>*:first-child:before {counter-increment: k1; content: counter(k1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l20> li:first-child>*:first-child:before {counter-increment: k1 0;  }
 #l21 {padding-left: 0pt;counter-reset: d3 1; }
 #l21> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l21> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l22 {padding-left: 0pt; }
 #l22> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l23 {padding-left: 0pt;counter-reset: l1 4; }
 #l23> li>*:first-child:before {counter-increment: l1; content: counter(l1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l23> li:first-child>*:first-child:before {counter-increment: l1 0;  }
 #l24 {padding-left: 0pt;counter-reset: l2 3; }
 #l24> li>*:first-child:before {counter-increment: l2; content: counter(l1, decimal)"."counter(l2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l24> li:first-child>*:first-child:before {counter-increment: l2 0;  }
 #l25 {padding-left: 0pt;counter-reset: l3 1; }
 #l25> li>*:first-child:before {counter-increment: l3; content: counter(l1, decimal)"."counter(l2, decimal)"."counter(l3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l25> li:first-child>*:first-child:before {counter-increment: l3 0;  }
 #l26 {padding-left: 0pt;counter-reset: d2 1; }
 #l26> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l26> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l27 {padding-left: 0pt; }
 #l27> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="127" height="62" alt="image" src="an1118-certifying-zigbee-30-devices/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 11pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">AN1118: Certifying Zigbee® 3.0 Devices</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="728" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="214" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 4pt;padding-bottom: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="216" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-left: 14pt;text-indent: -7pt;text-align: left;">Overview of the Zigbee Alliance Certifica- tion Process</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Zigbee test harness setup</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Using the Zigbee test tool and test har- ness</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Troubleshooting tips</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-top: 17pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">This document provides guidelines for certifying Zigbee 3.0 devices. It describes how to set up the Silicon Labs Zigbee Test Harness and provides details on using the Zigbee Test Tool and Test Harness for internal pre-testing, along with troubleshooting tips.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="724" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_005.png"/></span></p><ol id="l2"><li><h3 style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a name="bookmark0">Introduction</a></h3><p class="s4" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">Introduction</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">This document provides guidelines for certifying Zigbee 3.0 devices. It includes an overview of the process with tips for a successful outcome. It describes how to set up the Silicon Labs Zigbee Test Harness, including information about the Zigbee Test Tool firmware. It then provides details on using the Zigbee Test Tool and Test Harness for internal pre-testing, including a full example. Tips on trouble- shooting testing problems are covered. Finally, a list of resources is provided. Note that the official documents from Zigbee Alliance may require membership for full access.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l3"><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark1">Definitions</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The following abbreviations and acronyms are used throughout this document.</p><p class="s5" style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;">BDB<span class="p">: Base Device Behavior. </span>DoC<span class="p">: Declaration of Conformity. </span>DUT<span class="p">: Device under test.</span></p><p class="s5" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">PICS<span class="p">: Protocol Implementation Conformance Statement. The PICS will present a matching between DUT’s behavior and its items.</span></p><p class="s5" style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">PIXIT<span class="p">: Protocol Implementation Extra Information for Testing. PIXIT generally indicates manufacturer-specific information. In ZTT soft- ware, PIXIT also contains items to ensure the software’s functioning.</span></p><p class="s5" style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">TH or ZTH<span class="p">: Zigbee Test Harness. THrx denotes the router role of a test harness. THex denotes the end device role. THcx denotes the coordinator role.</span></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">ZTT<span class="p">: Zigbee Test Tool. If not specified, ZTT usually refers to the software that executes test scripts. ZTT firmware relates to the ZTT dongle.</span></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">ZA<span class="p">: Zigbee Alliance.</span></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;line-height: 181%;text-align: justify;">ZC<span class="p">: Zigbee Coordinator. </span>ZED<span class="p">: Zigbee End Device </span>ZR<span class="p">: Zigbee Router.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 60pt;text-indent: -36pt;text-align: left;"><a name="bookmark2">Documentation Conventions</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">Internal references to documents or websites are in the form of a cross-reference <b>[R#]</b><a href="#bookmark40" class="s7">, where R# is a specific item in the reference list (see section </a><a href="#bookmark40" class="s6">6 </a><span style=" color: #406BCC;">Reference Material</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="724" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_006.png"/></span></p></li></ol></li><li><h3 style="padding-top: 9pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a name="bookmark3">Overview of the Zigbee Alliance Certification Process</a></h3><p class="s4" style="padding-left: 6pt;text-indent: 0pt;text-align: left;">Overview of the Zigbee Alliance Certification Process</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="mailto:certification@zigbee.org" class="s7" target="_blank">Silicon Labs provides EmberZNet, a Zigbee-Compliant Platform, but the Zigbee Alliance also provides members a path for product certi- fication as Zigbee-Certified Products. This section summarizes the Zigbee certification process provided by the Zigbee Alliance. The Zigbee Alliance may change these details at any time. If you have questions about Zigbee certification or the certification process, contact the Zigbee Alliance directly at certification@zigbee.org.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l4"><li><p class="s5" style="padding-left: 60pt;text-indent: -36pt;text-align: left;"><a name="bookmark4">Getting Started</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark41" class="s7">The first step of the certification process is to submit your product to an authorized test service provider. A list of authorized providers can be found on the Zigbee Alliance website </a><a href="#bookmark41" class="s8">[R1]</a><a href="#bookmark26" class="s7">. Note: Although not required, many companies do internal testing before sending the product to an authorized test service provider. Procedures for in-house testing are documented in section </a><a href="#bookmark26" class="s6">4 Using the Zigbee Test Tool and Test Harness for In-House Pre-Testing</a><a href="#bookmark26" class="s7">.</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="http://zigbeecertifiedproducts.knack.com/zigbee-certified" class="s7" target="_blank">The second step in the process is to submit an application online using the Zigbee Alliance Certification Web Tool (</a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">http://zigbeecertifiedproducts.knack.com/zigbee-certified</span>). If you don’t already have a Zigbee Alliance user account (separate from your Workspace account), you can sign up as a new user by clicking the “Sign Up” link. When requesting a new account, be sure to sign up with a company e-mail address (not Gmail, Yahoo, 163.com, or other free e-mail domains).</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark41" class="s7">For detailed instructions on creating and submitting an application in the Certification Tool, a user information guide is available on </a><a href="#bookmark41" class="s8">[R1]</a>. After you complete and submit your application, the Zigbee Alliance will review it and send you either an approval notice or feedback via e-mail.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 24pt;text-indent: 0pt;line-height: 18pt;text-align: left;"><a name="bookmark5">Documentation Tips and Pointers Have all documents ready.</a></p><ul id="l5"><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">To ensure prompt processing of your application, remember to upload all required documents before submitting your application.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: justify;">All applications should include completed Declaration of Conformity (DoC) and Protocol Implementation Conformance Statement (PICS) documents. Protocol Implementation Extra Information for Testing (PIXIT) specifications are included in PICS documenta- tions. For Zigbee 3.0 applications, multiple PICS documents are required (one for base device behavior plus additional documents for each cluster). These may be uploaded to the Certification Tool in a single ZIP archive.</p><p class="s5" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Ensure consistency across all documents submitted.</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">A common error is inconsistent information across the web application, DoC, PICS, and test report. To save on processing time, double- check these entries:</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">All hardware/software version fields must match the versions declared in the test report.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">The compliant platform declared in the application must be consistent with the DoC and test report (or the original certified application, for Certification by Similarity requests).</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Tips for completing the DoC:</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a href="#bookmark41" class="s7">Use the latest DoC template. It can be found on </a><a href="#bookmark41" class="s8">[R1]</a><a href="#bookmark41" class="s7">.</a></p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Remember to have both the applicant and test house signature blocks signed and dated.</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Tips for completing the PICS:</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a href="#bookmark42" class="s7">Each Zigbee standard has its own PICS document, available with its respective specification document package, available on </a><a href="#bookmark42" class="s8">[R2]</a><a href="#bookmark42" class="s7">.</a></p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Brief instructions for completing PICS documents are found at the beginning of each document template.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Make sure that all mandatory PICS items are supported.</p></li></ul></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a name="bookmark6">Setting up the Silicon Labs Zigbee Test Harness</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">This section describes how to set up and use the Silicon Labs Zigbee 3.0 test harness. Two options for the ZTT dongle hardware are:</p><ul id="l6"><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">The Silicon Labs WSTK with BRD4162 radio board</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">The Silcon Labs Thunderboard Sense 2</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l7"><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark7">Requirements</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">In order to set up the Silicon Labs Zigbee 3.0 test harness (ZTT) you will need the following:</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Hardware (ZTT Dongle):</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The hardware that interfaces the ZTT to the Zigbee network as a Test Harness is called the ZTT Dongle in this document. The hardware can be purchased at the following:</p></li></ol></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">EFR32 Might Gecko Wireless Starter Kit (WSTK) (Part - SLWSTK6000B):</p><p style="padding-top: 8pt;padding-left: 39pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/products/development-tools/wireless/mesh-networking/mighty-gecko-starter-kit" class="s10">http://www.silabs.com/products/development-tools/wireless/mesh-networking/mighty-gecko-starter-kit</a></p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 39pt;text-indent: -14pt;line-height: 176%;text-align: left;">	<a href="https://www.silabs.com/products/development-tools/thunderboard/thunderboard-sense-two-kit" class="s7" target="_blank">Thunderboard Sense 2 (TBS2) (Part - SLTB004A):</a><a href="https://www.silabs.com/products/development-tools/thunderboard/thunderboard-sense-two-kit" class="s10" target="_blank"> https://www.silabs.com/products/development-tools/thunderboard/thunderboard-sense-two-kit</a></p><p class="s5" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Software:</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a href="#bookmark43" class="s7">ZTT (Zigbee 3.0 Test Tool) software version 1.0.2.4 or higher for Windows can be downloaded from the Zigbee website at </a><a href="#bookmark43" class="s8">[R3]</a><a href="#bookmark43" class="s7">.</a></p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">A ZTT license can be purchased from Zigbee online at:</p><p style="padding-top: 8pt;padding-left: 39pt;text-indent: 0pt;text-align: left;"><a href="https://www.regonline.com/Register/Checkin.aspx?EventID=1849737" class="s10">https://www.regonline.com/Register/Checkin.aspx?EventID=1849737</a></p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Silicon Labs Simplicity Studio can be downloaded from the Silicon Labs website here:</p><p style="padding-top: 8pt;padding-left: 39pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/products/development-tools/software/simplicity-studio" class="s10">http://www.silabs.com/products/development-tools/software/simplicity-studio</a></p></li><li><p style="padding-top: 3pt;padding-left: 24pt;text-indent: 0pt;line-height: 175%;text-align: left;"><a href="#bookmark43" class="s7">The latest ZTT dongle firmware can be downloaded from the Zigbee website at </a><a href="#bookmark43" class="s8">[R3]</a>. <b>ZTT Dongle Driver:</b></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: justify;">The driver configures the attached ZTT Dongle as a serial port (appears as COM port) interface that the ZTT software can use. The WSTK and TBS2driver is installed as part of the Simplicity Studio installation.</p><p class="s5" style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">Programming Tools:</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">The above hardware does not come with the ZTT Dongle firmware (explained in the next section) pre-programmed. You must program the firmware on the hardware using following tools The WSTK and TBS2 boards have a built-in J-Link to program the EFR32 MG12 parts using Simplicity Commander (provided as part of Simplicity Studio).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l8"><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark8">About the ZTT Firmware</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The ZTT firmware binary is built for the WSTK EFR32MG12 boards (BRD4162A) and TBS2 EFR32MG12 boards (BRD4166A. Binaries are provided for the following use cases:</p></li></ol></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Cordinator/Router: For test cases where the test harness should operate as a router or coordinator</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">End Device: For test cases where the test harness should operate as an end device</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The naming format used for the firmware files are TRaC_Z3_&lt;role&gt;_&lt;board&gt; where:</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">&lt;role&gt;: Role of the node, the firmware can be used by the ZTT for test case execution in following roles:</p><ul id="l9"><li><p style="padding-top: 3pt;padding-left: 53pt;text-indent: -14pt;text-align: left;">“ZCR”: can be used as coordinator or router by the ZTT</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">“ZED”: can be used only as end device by the ZTT</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">&lt;board&gt;: board on which the firmware runs</p><ul id="l10"><li><p style="padding-top: 3pt;padding-left: 53pt;text-indent: -14pt;text-align: left;">4161A: WSTK radio board</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">4166A: TBS2 radio board</p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The firmware files are provided in following image formats:</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">.S37: Standard Motorola S-Record format, used for a single application or bootloader image.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">GBL: Silicon Labs proprietary format for application images, designed to work with the Silicon Labs Gecko bootloader.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;line-height: 181%;text-align: left;">The gbl files are provided so that you can update the ZTT dongle firmware using a serial terminal tool that supports the xmodem protocol. The following binaries are provided for the WSTK with EFR32MG12 and the test roles:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:25.01pt" cellspacing="0"><tr style="height:18pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Binary</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Platform</p></td><td style="width:67pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Test</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:59pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZCR_&lt;board&gt;.s37</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">MG12</p></td><td style="width:67pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 7pt;padding-left: 5pt;padding-right: 31pt;text-indent: 0pt;text-align: left;">BDB or Cluster</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 2pt;padding-left: 5pt;padding-right: 34pt;text-indent: 0pt;text-align: left;">ZTT firmware binary file that can be programmed to the EFR32MG12 daughter board (BRD4162A) on a WSTK or Thunderboard Sense 2 (BRD4166A) using the Simplicity Commander programming tool.</p><p style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a href="#bookmark14" class="s15">Refer to section </a><a href="#bookmark14" class="s14">3.3.1 Programming the Firmware File</a><a href="#bookmark14" class="s15">.</a></p></td></tr><tr style="height:39pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZCR_&lt;board&gt;.gbl</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">MG12</p></td><td style="width:67pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;padding-right: 31pt;text-indent: 0pt;text-align: left;">BDB or Cluster</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="padding-top: 3pt;padding-left: 5pt;padding-right: 11pt;text-indent: 0pt;text-align: left;"><a href="#bookmark15" class="s15">ZTT firmware GBL file that can be programmed with the uart- xmodem-MG12 bootloader using the procedure in section </a><a href="#bookmark15" class="s14">3.3.2 Using the Xmodem Protocol.</a></p></td></tr><tr style="height:58pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZED_&lt;board&gt;.s37</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">MG12</p></td><td style="width:67pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">BDB</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 2pt;padding-left: 5pt;padding-right: 16pt;text-indent: 0pt;text-align: left;">ZTT firmware (ZED) binary file that can be programmed to the EFR32MG12 daughter board (BRD4162A) on a WSTK or Thunderboard Sense 2 (BRD4166A) using the Simplicity Commander programming tool.</p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a href="#bookmark14" class="s15">Refer to section </a><a href="#bookmark14" class="s14">3.3.1 Programming the Firmware File</a><a href="#bookmark14" class="s15">.</a></p></td></tr><tr style="height:40pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZED_&lt;board&gt;.gbl</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">MG12</p></td><td style="width:67pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">BDB</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="padding-top: 4pt;padding-left: 5pt;padding-right: 11pt;text-indent: 0pt;text-align: left;"><a href="#bookmark15" class="s15">ZTT firmware GBL file that can be programmed with the uart- xmodem-MG12 bootloader using the procedure in section </a><a href="#bookmark15" class="s14">3.3.2 Using the Xmodem Protocol.</a></p></td></tr><tr style="height:58pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 7pt;padding-left: 5pt;padding-right: 27pt;text-indent: 0pt;text-align: left;">bootloader-uart-xmodem- MG12- combined.s37</p></td><td style="width:68pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">MG12</p></td><td style="width:67pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 2pt;padding-left: 5pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">Bootloader binary that must be programmed to the EFR32MG12 daughter board (BDR4162A) on a WSTK or Thunderboard Sense 2 (BRD4166A) using the Simplicity Commander programming tool.</p><p style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a href="#bookmark14" class="s15">Refer to section </a><a href="#bookmark14" class="s14">3.3.1 Programming the Firmware File</a><a href="#bookmark14" class="s15">.</a></p></td></tr></table><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following commands implemented in the binaries are not included in the current ZTT API Reference. For usage see the command&#39;s help.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:25.01pt" cellspacing="0"><tr style="height:18pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Command Group</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Command Name</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#A6A6A6"><p class="s12" style="padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:36pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">custom</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: left;">lookup</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 1pt;padding-left: 5pt;padding-right: 22pt;text-indent: 0pt;text-align: left;">Looks up a short address from the neighbor table given an IEEE address string</p></td></tr><tr style="height:46pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">custom</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">resetBootloader</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 1pt;padding-left: 5pt;padding-right: 17pt;text-indent: 0pt;text-align: left;">Resets the dongle and enters the bootloader. This allows loading the .ebl file through a terminal emulator with xmodem support.</p></td></tr></table><ol id="l11"><li><p class="s5" style="padding-top: 7pt;padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark9">Loading the ZTT Firmware</a><a name="bookmark13">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Because Simplicity Studio is an essential tool required for using the built-in J-Link on a WSTK board or TBS2 board, install Simplicity Studio v4 before following the procedures in this section.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l12"><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark10">Programming the Firmware File</a><a name="bookmark14">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The WSTK/TBS2 ZTT Dongle firmware files and bootloader files are downloaded using Simplicity Commander as follows.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 118pt;text-indent: 0pt;text-align: left;"><span><img width="473" height="351" alt="image" src="an1118-certifying-zigbee-30-devices/Image_007.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 3-1. Reprogramming .gbl Firmware Files in Simplicity Commander</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l13"><li><p style="padding-left: 42pt;text-indent: -18pt;text-align: left;">Connect the USB cable from the WSTK board (with BDR4162A daughter board) to the computer. Note the “J-Link SN:” serial number that appears on the onboard LCD.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Launch Simplicity Commander (commander.exe) from its Simplicity Studio installation directory. Generally, the path looks like:</p><p class="s17" style="padding-top: 7pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">C:\SiliconLabs\SimplicityStudio\v4\developer\adapter_packs\commander\commander.exe</p></li><li><p style="padding-top: 7pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">In the Simplicity Commander graphical user interface (shown in the previous figure), in the Adapter bar select the J-Link Device serial number and click <b>Connect</b>. This changes to <b>Disconnect </b>when successfully connected.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">In the target bar click <b>Connect</b>. This changes to <b>Reconnect </b>when successfully connected.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Click the large <b>Flash </b>control in the left panel (1 in the previous figure).</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Click <b>Browse </b>next to the <b>Binary File </b>field (2) and locate the WSTK bootloader file, for example: <span class="s18">bootloader-uart-xmodem- MG12-combined.s37.</span></p></li><li><p style="padding-top: 2pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Click <b>Flash </b>(3). The bootloader file downloads.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Click <b>Browse </b>again and locate the WSTK ZTT dongle firmware file, for example</p><p class="s17" style="padding-top: 8pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZCR_4162A.s37</p></li><li><p style="padding-top: 7pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Click <b>Flash</b>. The firmware file downloads.</p></li></ol></li><li><p class="s5" style="padding-top: 7pt;padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark11">Using the Xmodem Protocol</a><a name="bookmark15">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">If a ZTT dongle that has a bootloader already programmed and the running ZTT Firmware needs a firmware upgrade, it can be done using a serial tool that supports the xmodem protocol. This option is only useful when the user does not have access to the above programming method using the ISA3 or Simplicity Studio.</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The steps are as follows:</p><ol id="l14"><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Open a terminal emulator that supports x-modem protocol to send a file and set the following.</p><ul id="l15"><li><p style="padding-top: 3pt;padding-left: 53pt;text-indent: -14pt;text-align: left;">Com port = that of the connected test harness.</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">Baud rate= 115200</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">Data = 8 bit</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">Stop = 1 bit</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">Parity = none</p></li><li><p style="padding-left: 53pt;text-indent: -14pt;text-align: left;">Flow control = none</p><p style="padding-top: 8pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">If all the settings are correct, when you press &lt;CR or ENTER &gt; a test harness prompt is returned, such as:</p><p class="s17" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZCR_4162A</p></li></ul></li><li><p style="padding-top: 7pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">To enter the bootloader, enter:</p></li></ol><p class="s17" style="padding-top: 7pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">TRaC_Z3_ZCR_4162A&gt;custom resetBootloader &lt;CR&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 39pt;text-indent: 0pt;text-align: left;">If the command is successful, a menu such as the following is displayed:</p><p class="s17" style="padding-top: 7pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">Gecko Bootloader v1.1.0</p><ol id="l16"><li><p class="s17" style="padding-left: 55pt;text-indent: -16pt;text-align: left;">upload gbl</p></li><li><p class="s17" style="padding-left: 55pt;text-indent: -16pt;text-align: left;">run</p></li><li><p class="s17" style="padding-left: 39pt;text-indent: 0pt;text-align: left;">ebl info BL &gt;</p></li></ol><ol id="l17"><li><p style="padding-top: 7pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Enter 1. The following is displayed:</p><p class="s17" style="padding-top: 7pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">begin upload CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</p></li><li><p style="padding-top: 7pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Send the .gbl file using the xmodem protocol from the terminal.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Once the transfer is complete, enter 2 to run the firmware.</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s5" style="padding-left: 60pt;text-indent: -36pt;text-align: left;"><a name="bookmark12">Setup Procedure</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">An overview of the procedure for setting up your own Zigbee test harness is as follows:</p><ol id="l18"><li><p class="s9" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a href="#bookmark13" class="s7">Once the steps in section </a><a href="#bookmark13" class="s6">3.3 </a>Loading the ZTT Firmware <span style=" color: #000;">are complete, connect the ZTT dongle to the computer.</span></p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Test the presence of the ZTT firmware by connecting to the dongle using a terminal such as Tera Term with the ZTT Com port (Baud</p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;">=115200, Data=8bit, Stop=1, Parity=None, FlowControl=None).</p><p style="padding-top: 8pt;padding-left: 39pt;text-indent: 0pt;text-align: left;">When you press Enter, you should see a command prompt such as <span class="s18">TRaC_Z3_ZCR_4162A&gt;. </span>Disconnect and close the terminal before the next step.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Launch the ZTT software.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Enter the license for the ZTT software.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Discover the ZTT dongle as your test harness.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">Use the ZTT software to test your Zigbee 3.0 devices.</p></li></ol><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: left;"><a href="#bookmark49" class="s7">For more information about testing see document </a><a href="#bookmark49" class="s8">[R11]</a>, available on the Zigbee website.</p></li></ol></li></ul></li><li><h3 style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a name="bookmark16">Using the Zigbee Test Tool and Test Harness for In-House Pre-Testing</a><a name="bookmark26">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: justify;">In this section, an example of test setup will be presented, followed by explanations of PICS and PIXIT selection. The section ends with a complete execution of a cluster test case to serve as a quick start.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l19"><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark17">Test Setup</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">It is recommended to conduct In-house pre-testing in a shield room or in a shield box. The idea is to provide a clean RF environment and to avoid interfering with the DUT’s performance. A shield box is illustrated in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 188pt;text-indent: 0pt;text-align: left;"><span><img width="285" height="284" alt="image" src="an1118-certifying-zigbee-30-devices/Image_008.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-1. A Shield Box</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Also, the official test specification requires deploying a sniffer to capture over-the-air packets for verification on certain test steps. The following figure shows a sniffing device connected to an ISA3 debugger. It is also feasible to use the built-in sniffing capability from the DUT with WSTK connection.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 154pt;text-indent: 0pt;text-align: left;"><span><img width="377" height="283" alt="image" src="an1118-certifying-zigbee-30-devices/Image_009.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-2. Sniffing Device Setup</p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Some BDB test cases require support by multiple test harnesses with various roles (for example THr1, THr2, THe1, and so forth). To save time on role-swapping, it is convenient to use an USB hub, and connect test harnesses with fixed roles to the hub if TH availability is not a concern. The following figure shows such a connection.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 160pt;text-indent: 0pt;text-align: left;"><span><img width="358" height="269" alt="image" src="an1118-certifying-zigbee-30-devices/Image_010.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-3. A USB Hub with Two Test Harnesses Connected</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="https://www.silabs.com/documents/public/user-guides/UG252.pdf" class="s7" target="_blank">The lighting reference design (</a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://www.silabs.com/documents/public/user-guides/UG252.pdf</span>) servers as a DUT, and is shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 178pt;text-indent: 0pt;text-align: left;"><span><img width="310" height="413" alt="image" src="an1118-certifying-zigbee-30-devices/Image_011.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-4. EFR32 Lighting Reference Design Connected to a WSTK Board</p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The following figure shows the complete device setup for testing a lighting reference design and built-in sniffing capability. Along with test harnesses, the DUT is enclosed in the shield box.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 176pt;text-indent: 0pt;text-align: left;"><span><img width="316" height="421" alt="image" src="an1118-certifying-zigbee-30-devices/Image_012.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-5. The Complete Device Setup for Lighting Reference Design</p><p class="s9" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark27" class="s7">Several consoles/graphical interfaces could be opened for DUT’s behavior investigation, over-the-air packets verification and standalone debugging. They are the UART console for test harnesses, virtual UART console for DUT (</a>Figure 4-6<a href="#bookmark28" class="s7">), and an analyzer interface for sniffing (</a>Figure 4-7<span style=" color: #000;">).</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="389" alt="image" src="an1118-certifying-zigbee-30-devices/Image_013.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;"><a name="bookmark27">Figure 4-6. DUT’s Virtual Console</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="389" alt="image" src="an1118-certifying-zigbee-30-devices/Image_014.png"/></span></p><p class="s5" style="padding-top: 7pt;padding-left: 117pt;text-indent: 0pt;text-align: center;"><a name="bookmark28">Figure 4-7. Sniffing GUI in Network Analyzer</a></p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark15" class="s7">Simplicity Studio integrates a virtual console and a network analyzer, available through the Tools drop down menu in the launcher per- spective. To open the console for a TH, a tool like PuTTY could be used. Make sure to use the parameters specified in section </a><a href="#bookmark15" class="s6">3.3.2 Using the Xmodem Protocol.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark18">Completing BDB PICS and PIXIT Items</a><a name="bookmark29">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The items in PICS and PIXIT items determine which test cases are run on a particular device. Hence, it is vital to build a comprehensive understanding of DUT&#39;s behavior. To complete the items, refer to two official documents: <a href="#bookmark44" style=" color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt;">docs-13-0402-13-00zi-Base-Device-Behavior- Specification </a><a href="#bookmark44" class="s7">(</a><a href="#bookmark44" class="s8">[R6]</a>, BDB-Spec-Doc for short) and <a href="#bookmark45" style=" color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt;">docs-15-0283-04-pfnd-Base-Device-Behavior-PICS </a><a href="#bookmark45" class="s7">(</a><b>[R7] </b>BDB-PICS-Doc for short). Both PICS and PIXIT are included in the BDB-PICS-Doc. Three complete BDB-PICS example documents for Z3ColorControlLight, Z3Gateway and Z3SmartOutlet reference designs are included as supplemental information to this application note. The zip file containing these examples can be accessed through the EmberZNet SDK’s Getting Started Application Note list in Simplicity Studio.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following figure shown an example PICS table, including five columns:</p><ol id="l20"><li><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Item Number: <span class="p">The unique number matches the one in the ZTT PICS tab.</span></p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Feature: <span class="p">A brief description of the related item.</span></p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Reference: <span class="p">Points each item to a detailed specification in BDB-Spec-Doc.</span></p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Status: <span class="p">Shows if an item is mandatory (M), optional (O), or prohibited (X), based on whether another item reflects the DUT’s behavior.</span></p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Support: <span class="p">Indicates if the feature reflects the DUT&#39;s behavior.</span></p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 162pt;text-indent: 0pt;text-align: left;"><span><img width="353" height="414" alt="image" src="an1118-certifying-zigbee-30-devices/Image_015.png"/></span></p><p class="s5" style="padding-top: 7pt;padding-left: 117pt;text-indent: 0pt;text-align: center;"><a name="bookmark30">Figure 4-8. A Screenshot of PICS Items</a></p><ol id="l21"><li><p class="s5" style="padding-top: 7pt;padding-left: 53pt;text-indent: -28pt;text-align: left;"><a name="bookmark19">Deciding if the DUT Supports a PICS item</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Whether or not the DUT supports a PICS item can be decided in two ways:</p><ul id="l22"><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Using Feature and Status</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Using Plugin Settings</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Using the &quot;Feature&quot; and &quot;Status&quot; Description</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark30" class="s7">Take ZLT1 in </a><span style=" color: #406BCC;">Figure 4-8 </span>as an example. Its feature says, &quot;<i>Is the logical device type specified as a ZigBee coordinator</i>?&quot; It could be straightforwardly answered with a No if the device is an end-device. Notice in the Status column, certain conditions must be fulfilled. For instance, in ZLT1.2, the status indicates that this item is prohibited (X) if the DUT satisfies ZLT2 or ZLT3.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Extra care also needs to be taken when dealing with items with an O.1 status, such as ZLT1. It usually means only one item can be chosen from a group of items marked by O.1. There are notes under a PICS table explaining each O.x status. For example, the notes for</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">O.1 are “<i>A node SHALL support one of ZLT1 or ZLT2 or ZLT3 or (ZLT1 and ZLT2, switchable under application control)</i>”.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">A status of M (mandatory) denotes a must-have feature in the DUT. For example, MRD1 (shown in the following figure) must be supported by the DUT, which can be explained by the one-to-one mapping of <i>Active_EP_req </i>and <i>Active_EP_rsp </i>illustrated in the figure. The key- word <i>SHALL </i>has the same effect as Required or Mandatory. Therefore, any item defined by SHALL become a must-have feature. If only BDB-PICS-Doc is considered, it is applicable throughout the document that an M-status indicates a Yes-support.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;"><span><img width="407" height="276" alt="image" src="an1118-certifying-zigbee-30-devices/Image_016.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 25pt;text-indent: 42pt;line-height: 195%;text-align: left;">Figure 4-9. Mandatory Item Correlation Between BDB-PICS-Doc Section 5.6 and BDB-Spec-Doc Section 6.6 Using Plugin Settings</p><p style="padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: justify;">Some BDB items are application-dependent, and they are usually marked by O (i.e., optional) in the status column. Therefore, plugin</p><p class="s9" style="padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark30" class="s7">settings need to be investigated. Take ZLT2.2 in </a>Figure 4-8 <span style=" color: #000;">as an example. The Silicon Labs Smart Outlet reference design acts as a router, but it does not form a distributed network. This could be determined by investigating the implemented plugins on Simplicity Studio.</span></p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">The following figure shows that neither <i>Network Creator </i>nor <i>Network Creator Security </i>plugins are enabled in the Smart Outlet. Therefore, item ZLT2.2 should be a No.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 82pt;text-indent: 0pt;text-align: left;"><span><img width="569" height="387" alt="image" src="an1118-certifying-zigbee-30-devices/Image_017.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-10. Z3SmartOutlet .isc File</p></li></ul></li><li><p class="s5" style="padding-top: 7pt;padding-left: 53pt;text-indent: -28pt;text-align: left;"><a name="bookmark20">Completing the PIXIT Items</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">There are three major classes of PIXIT items in BDB-PICS-Doc: IA (<i>internal attributes</i>), CC (<i>commissioning combinations</i>) and M (<i>mis- cellaneous</i>). Users could leave CC and M items as No as they wouldn&#39;t affect ZTT procedures, but it is always best to understand the behavior with respect to CC and M items. The BDB-Spec-Doc can help with completing PIXIT items.</p><p class="s19" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><span class="p">As most of IA items are mandatory, we use IA item completion as an example. The following figure presents all the IA items. The reference column points each item to the BDB-Spec-Doc as PICS items. For example, IA1 support equals to 0xffff in the Z3Gateway reference design, since its behavior matches the specification &quot;</span>If <span class="s18">bdbCommissioningGroupID </span>is equal to 0xffff, any bindings will be created as unicast<span class="p">&quot;.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 166pt;text-indent: 0pt;text-align: left;"><span><img width="342" height="351" alt="image" src="an1118-certifying-zigbee-30-devices/Image_018.png"/></span></p><p class="s5" style="padding-top: 7pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-11. IA Items (PIXIT)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Item IA6 relates to EmberZNet stack implementation. The value <span class="s18">bdbTcLinkKeyExchangeAttemptsMax </span>in the stack is 1, and it indicates the DUT would try once for link-key exchange. An additional item on ZTT software does not appear on BDB-PICS-Doc. This item, known as IA5B, asks for clarification of &quot;<i>DUT has a </i><span class="s18">bdbSecondaryChannelSet </span><i>!= 0 (bool)</i>&quot;. By default, this value is 0. How- ever, it should be set to 1, indicating the DUT does have a secondary channel set.</p><ol id="l23"><ol id="l24"><li><p class="s5" style="padding-top: 7pt;padding-left: 53pt;text-indent: -28pt;text-align: left;"><a name="bookmark21">Completing a Cluster’s PICS and PIXIT Items</a><a name="bookmark31">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark42" class="s7">The official PICS documents are created per cluster. The PICS documents for individual clusters can be found in </a><a href="#bookmark42" class="s8">[R2]</a><a href="#bookmark50" class="s7">. The layout of those documents is similar to BDBs, except that test specifications are integrated in the docs. To better present the PICS and PIXIT selection, ZA also provides XML files to be easily customized. As for the PICS documents, the XML files should be created per cluster, and they can be downloaded from the sub-folders of </a><a href="#bookmark50" class="s8">[R12]</a>. Example XML files for the Z3ColorControlLight cluster are included as sup- plemental information to this application note. The zip file containing these examples can be accessed through the EmberZNet SDK’s Getting Started Application Note list in Simplicity Studio.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The following text presents an example of the Basic cluster in XML format. Notice that in the <span class="s18">&lt;support&gt; </span>tag, <span class="s18">true </span>should selected if the feature is supported, and vice versa.</p><p class="s17" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">&lt;!-- General cluster information --&gt;</p><p class="s17" style="padding-left: 61pt;text-indent: 0pt;text-align: left;">&lt;name&gt;Basic&lt;/name&gt;</p><p class="s17" style="padding-left: 61pt;text-indent: 0pt;text-align: left;">&lt;clusterId&gt;0x0000&lt;/clusterId&gt;</p><p class="s17" style="padding-left: 61pt;text-indent: 0pt;text-align: left;">&lt;picsRoot&gt;B&lt;/picsRoot&gt;</p><p class="s17" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">&lt;!-- Cluster usage --&gt;</p><p class="s17" style="padding-left: 61pt;text-indent: 0pt;text-align: left;">&lt;usage&gt;</p><p class="s17" style="padding-left: 97pt;text-indent: 0pt;text-align: left;">&lt;picsItem&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;itemNumber&gt;B.S&lt;/itemNumber&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;feature&gt;Does the device implement the basic cluster as a server?&lt;/feature&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;reference&gt;3.2.2&lt;/reference&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;status&gt;O&lt;/status&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;support&gt;true&lt;/support&gt;</p><p class="s17" style="padding-left: 97pt;text-indent: 0pt;text-align: left;">&lt;/picsItem&gt;</p><p class="s17" style="padding-left: 97pt;text-indent: 0pt;text-align: left;">&lt;picsItem&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;itemNumber&gt;B.C&lt;/itemNumber&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;feature&gt;Does the device implement the basic cluster as a client?&lt;/feature&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;text-align: left;">&lt;reference&gt;3.2.3&lt;/reference&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&lt;status&gt;O&lt;/status&gt;</p><p class="s17" style="padding-left: 133pt;text-indent: 0pt;line-height: 10pt;text-align: left;">&lt;support&gt;false&lt;/support&gt;</p><p class="s17" style="padding-left: 97pt;text-indent: 0pt;text-align: left;">&lt;/picsItem&gt;</p><p class="s17" style="padding-left: 61pt;text-indent: 0pt;text-align: left;">&lt;/usage&gt;</p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">It is straightforward to map applications in Simplicity Studio to a clusters’ PICS items. The following figure illustrates such a mapping using the On/off cluster as an example. In Simplicity Studio, open the application project and navigate to <i>ZCL clusters</i>. Click <b>On/off. </b>You should be able to find the cluster role as <i>Server </i>and view the implemented attributes and commands in detail. In the <i>Attributes </i>and <i>Commands received </i>sections of the PICS document, the item should be supported if the related attributes/commands are ticked in Simplicity Stu- dio. The following figure shows the Attributes and Commands in Simplicity Studio correlated to the PICS items.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="260" alt="image" src="an1118-certifying-zigbee-30-devices/Image_019.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="231" alt="image" src="an1118-certifying-zigbee-30-devices/Image_020.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-12. Mapping the On/Off Cluster’s Attributes and Commands to PICS items</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">The PICS document also contains references for each item that point to related sections in <a href="#bookmark46" style=" color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt;">07-5123-06-zigbee-cluster-library-specification </a><a href="#bookmark46" class="s8">[R8]</a>. The following figure presents the detail with respect to <span class="s18">OO.S.A0000.Scene </span>and OO.S.A000.Report.Tx. As Z3ColorControlLight implements Scenes cluster as a server, the item <span class="s18">OO.S.A0000.Scene </span>is a mandatory feature. The attribute reporting section indicates OnOff attribute should be reportable, and therefore <span class="s18">OO.S.A0000.Report.Tx </span>is mandatory as well.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 139pt;text-indent: 0pt;text-align: left;"><span><img width="415" height="135" alt="image" src="an1118-certifying-zigbee-30-devices/Image_021.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-13. Cluster-Related Sections in the ZCL Specification</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: justify;">PIXIT items are enclosed in each clusters’ PICS document. Not all the clusters have PIXIT items. For example, the Color Control cluster contains PIXIT items regarding hue, whereas the Basic cluster has none. The following text presents PIXIT examples of the Color Control</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="728" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_022.png"/></span></p><p class="s5" style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark46" class="s7">cluster using XML format. By referring to section 5.2.2.2.1 of </a>[R8] <a href="https://upload.wikimedia.org/wikipedia/commons/3/3b/CIE1931xy_blank.svg" class="s7" target="_blank">and CIE1931 model (</a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://upload.wikimedia.org/wikipedia/commons/3/3b/CIE1931xy_blank.svg</span><span class="p">), we could calculate the approximate X coordinate by: 0.7</span></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: justify;">* 65536 = 45875(Dec) or 0xB333(Hex).</p><p class="s17" style="padding-top: 7pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">&lt;!-- PIXIT --&gt;</p><p class="s17" style="padding-left: 35pt;text-indent: 0pt;text-align: left;">&lt;pixit&gt;</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">&lt;pixitItem&gt;</p><p class="s17" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">&lt;itemNumber&gt;CC.PIXIT01.1&lt;/itemNumber&gt;</p><p class="s17" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">&lt;feature&gt;Approximate X coordinate for a red hue?&lt;/feature&gt;</p><p class="s17" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">&lt;specification&gt;0xB333&lt;/specification&gt;</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">&lt;/pixitItem&gt;</p><p class="s17" style="padding-left: 35pt;text-indent: 0pt;text-align: left;">&lt;pixit&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark22">Selecting Suitable Test Cases Based on the PICS</a><a name="bookmark32">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">Once the PICS items are completed, suitable test cases need to be selected. Over-selection of test cases could cause unnecessary failures. However, under-selection of test cases incurs incomplete validation of conformity.</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">Note that the Zigbee Test Tool will build up a list of tests for your device based on the PICS and PIXIT data provided. While in many cases these will be the complete suite of tests, you should check the Zigbee documentation to verify that these are all of the test you are required to run.</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">ZA provides cross references for test case selection. The BDB PICS and Cluster PICS to test case cross references are described below.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l25"><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark23">BDB PICS to Test Case Cross Reference</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark47" class="s7">A cross reference spreadsheet can be found at </a><a href="#bookmark47" class="s8">[R9]</a>. The following figure illustrates the test cases for PICS item GRC1. Test case CN- NSA-TC-04 covers PICS item GRC1 (indicated by C), while test case CN-NSA-TC-03 does not. By scanning through the spreadsheet, you should be able to find a suitable test case to cover for the applicable PICS items.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 169pt;text-indent: 0pt;text-align: left;"><span><img width="334" height="107" alt="image" src="an1118-certifying-zigbee-30-devices/Image_023.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-14. Cross Reference for BDB Test Cases</p></li><li><p class="s5" style="padding-top: 7pt;padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark24">Clusters PICS to Test Case Cross Reference</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The PICS document for individual clusters contains a cross reference table. For example, the on/off cluster PICS document (docs-15- 0310-05-pfnd-0x0006-OnOff-Cluster-Test-Specification) presents the table in shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 176pt;text-indent: 0pt;text-align: left;"><span><img width="316" height="254" alt="image" src="an1118-certifying-zigbee-30-devices/Image_024.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-15. Cross reference for On/Off cluster.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark29" class="s7">The figure shows that seven cases in total could be used for testing. However, at least one case should not be chosen for the Z3Col- orControlLight reference design. As shown in section </a><a href="#bookmark31" class="s6">4.2 </a><span style=" color: #406BCC;">Completing a Cluster’s PICS and PIXIT Items, </span>PICS item <span class="s18">OO.S.A4000</span>, <span class="s18">OO.S.A4001 </span>and <span class="s18">OO.S.A4002 </span>have not been configured as Yes, whereas the figure shows that tests in OO-TC-03S will be con- ducted against these attributes (shown by the &#39;X&#39; mark). In other words, if OO-TC-03C is executed, these three unimplemented attributes would cause a failure. The test script for OO-TC-03C, running in ZTT software, could be investigated to prove it tries to read the value of attribute 0x4000 (<span class="s18">OO.S.A4000</span><a href="#bookmark48" class="s7">). A code snippet is presented below (the original script can be downloaded from </a><b>[R10]</b>). In step 1b shown below, attribute 0x4000 is collected via &quot;<i>zcl global read 0x0006 0x4000</i>&quot;.</p><p class="s17" style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">print step 1b</p><p class="s17" style="padding-left: 25pt;text-indent: 32pt;text-align: left;">print comment TH CLIENT unicasts a ZCL read attributes command frame to DUT SERVER to read the OnOff and GlobalSceneControl attributes</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">……</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw zcl global read 0x0006 0x4000</p><p class="s17" style="padding-left: 68pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw send [NWK:SHORTADDRESS] 1 [PIXIT:ENDPOINT]</p><p class="s17" style="padding-left: 25pt;text-indent: 43pt;text-align: justify;">zigbee expect packet [PIXIT:MAXIMUMTIMEOUT] &quot;&quot;ReadAttributesResponse: Cluster 0x0006 Attrib- ute 0x4000&quot;&quot; { cs=0, cluster=0x0006, command=0x01, attributeidentifier=0x4000, attributesta- tusread=0x00, datatype=0x10, value=0x01 }</p></li></ol></li><li><p class="s5" style="padding-top: 7pt;padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark25">Example of Using ZTT to Run a Test Case</a></p></li></ol></ol><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">This section uses the on/off cluster test as an example. The DUT is based on Z3ColorControlLight reference design. The following two figures show the implemented attributes and commands for the on/off cluster.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="349" alt="image" src="an1118-certifying-zigbee-30-devices/Image_025.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-16. Implemented Attributes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="348" alt="image" src="an1118-certifying-zigbee-30-devices/Image_026.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-17. Implemented Commands</p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">These attributes and commands can be mapped to the PICS items (based on <i>docs-15-0310-05-pfnd-0x0006-OnOff-Cluster-Test-Speci- fication</i><a href="#bookmark29" class="s7">) using the method introduced in section </a><a href="#bookmark31" class="s6">4.2 Completing a Cluster’s PICS and PIXIT Items</a>. The following figure illustrates the PICS items (a) configured in the ZTT software. The common PIXIT items (b) also need to be filled to make sure ZTT operates correctly.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="322" height="573" alt="image" src="an1118-certifying-zigbee-30-devices/Image_027.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="318" height="570" alt="image" src="an1118-certifying-zigbee-30-devices/Image_028.png"/></span></p><p class="s20" style="padding-top: 4pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">a) <span class="p">b)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 4pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-18. PICS and PIXIT Configuration in ZTT</p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">As the on/off cluster is implemented as a type 1 server, it must join a TH network whose role is a client. The client role assignment is made in ZTT software’s Test Harness configuration window, shown in the following figure. When running cluster tests, it is recommended to use the Router/Coordinator test harness firmware.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 173pt;text-indent: 0pt;text-align: left;"><span><img width="324" height="578" alt="image" src="an1118-certifying-zigbee-30-devices/Image_029.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-19. TH configuration</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 25pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark32" class="s7">Follow the method described in section </a><a href="#bookmark32" class="s6">4.4 </a>Selecting Suitable Test Cases Based on the PICS <span style=" color: #000;">to pick the suitable test cases based on the PICS items, then add those test cases to ZTT’s Test Engine as shown in the following figure. It should be noted that the perquisite of</span></p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">running the following tests is that DUT has already joined the network created by TH_Client. Tips for joining DUT can be found in section</p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><a href="#bookmark38" class="s6">5.4 Tips for Testing a Custom Test Case</a><a href="#bookmark38" class="s7">.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 173pt;text-indent: 0pt;text-align: left;"><span><img width="323" height="580" alt="image" src="an1118-certifying-zigbee-30-devices/Image_030.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-20. Test Cases to be Executed in ZTT</p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Click <b>[Run] </b>in the test engine tab. The test cases are executed sequentially. An example result is shown in the following figure. The figure also shows a list of debug information. When investigating a failure cases, you can start by clicking <b>[Copy] </b>to duplicate the debug infor- mation and pasting it into any text editor for script and payload checking.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 118pt;text-indent: 0pt;text-align: left;"><span><img width="470" height="364" alt="image" src="an1118-certifying-zigbee-30-devices/Image_031.png"/></span></p><p class="s5" style="padding-top: 7pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 4-21. Output Log Example</p></li></ol></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a name="bookmark33">Troubleshooting</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">If a test case fails, first check that the test case has been correctly executed before investigating the application code. The following sections describe some common situations that could cause a failure, and some tips on using ZTT.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l26"><li><p class="s5" style="padding-left: 60pt;text-indent: -36pt;text-align: left;"><a name="bookmark34">Verify the Device Joins the Network</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The DUT could be conducting network-steering after power-up. A full network-steering cycle is as follows:</p><p class="s17" style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">NWK Steering State: Scan Primary Channels and use Install Code NWK Steering State: Scan Secondary Channels and use Install Code NWK Steering State: Scan Primary Channels and Use Centralized Key</p><p class="s17" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">NWK Steering State: Scan Secondary Channels and Use Centralized Key NWK Steering State: Scan Primary Channels and Use Distributed Key NWK Steering State: Scan Secondary Channels and Use Distributed Key</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Assuming the THr and the DUT start network-steering at the same time, the DUT first tries joining the distributed network in the state of “<i>Scan Primary Channels and use Install Code</i>”. From the DUT point of view, this will fail. Testers could observe from the ISA3 debugger that the steering continues. However, the ZTT thinks the device is successfully joined and progresses to next step. This will eventually cause no response from the device since it is not even in the network. In most test cases, the ZTT prompts with a question like “<i>Does DUT start network steering</i>”, and waits for a response. Make sure DUT is joined before giving a positive answer.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark35">Tests Against Sleepy End Devices</a></p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">The following are some suggestions when testing sleepy end devices.</p><p style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;text-align: justify;">Sleepy devices may fail some BDB test cases when a long pending time is instigated on the ZTT software. Testers could shorten the long poll interval to prevent the DUT from sleeping too fast. The following figure illustrates the place to modify the long poll interval.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="398" alt="image" src="an1118-certifying-zigbee-30-devices/Image_032.png"/></span></p><p class="s5" style="padding-top: 7pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 5-1. Long Poll Interval Modification</p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">Some cluster tests may last too long due to the measurement frequency of certain attributes, for example the temperature measurement. The place to modify this is shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="400" alt="image" src="an1118-certifying-zigbee-30-devices/Image_033.png"/></span></p><p class="s5" style="padding-top: 6pt;padding-left: 117pt;text-indent: 0pt;text-align: center;">Figure 5-2. Temperature Measurement Frequency Modification</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 60pt;text-indent: -36pt;text-align: left;"><a name="bookmark36">Tips for using the Zigbee Test Tool</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The Zigbee Test Tool Configuration page is shown in the following figure. The buttons are in the row under the tabs.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 175pt;text-indent: 0pt;text-align: left;"><span><img width="317" height="88" alt="image" src="an1118-certifying-zigbee-30-devices/Image_034.png"/></span></p><ul id="l27"><li><p style="padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Before starting, clear the previously loaded ZTT PICS settings (<b>Clear</b>).</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">Do not forget to save from time to time (<b>Save</b>).</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;text-align: left;">If you need to share the PICS with a third party use the <b>Export PICS </b>button.</p></li><li><p style="padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;">If somebody made the test plan for you use the <b>Load PICS </b>button to load it.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s5" style="padding-left: 61pt;text-indent: -36pt;text-align: left;"><a name="bookmark37">Tips for Testing a Custom Test Case</a><a name="bookmark38">&zwnj;</a></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><a href="#bookmark49" class="s7">This section illustrates building a custom test case for the joining procedure. The ZTT user’s guide </a>[R11] <span class="p">provides brief descriptions and examples of how to run a custom script. Following those guidelines, you can paste the following text into a new script to make the DUT</span></p><p style="padding-top: 7pt;padding-left: 25pt;text-indent: 0pt;text-align: left;">join a network created by TH_Client. Analogously, to join a network created by TH_Server, replace the name <span class="s18">TH_Client </span>with</p><p class="s18" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">TH_Server <span class="p">in the text.</span></p><p class="s17" style="padding-top: 7pt;padding-left: 46pt;text-indent: -21pt;text-align: left;">TH_CLIENT &gt; zigbee command raw info print step 1</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw network leave</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw option binding-table clear TH_CLIENT &gt; zigbee command raw keys clear</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw reset prompt wait 5</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">print step 2</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw network extpanid { 5AAD62311D3A1D8B } TH_CLIENT &gt; zigbee command raw plugin test-harness z3 set-device-mode 0x00</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">print step 2a</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw plugin network-creator mask set 1 0 TH_CLIENT &gt; zigbee command raw plugin network-creator mask set 2 0 TH_CLIENT &gt; zigbee command raw plugin network-creator mask add 1 11 TH_CLIENT &gt; zigbee command raw plugin test-harness z3 set-pan-id 0xAABB TH_CLIENT &gt; zigbee command raw plugin network-creator start 0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">print step 2b</p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">TH_CLIENT &gt; zigbee command raw network broad-pjoin 0x00 TH_CLIENT &gt; zigbee command raw plugin network-steering start 1</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s17" style="padding-left: 46pt;text-indent: 0pt;text-align: left;">prompt continue Is DUT joined the network? prompt verdict Should the test case pass?</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="724" height="1" alt="image" src="an1118-certifying-zigbee-30-devices/Image_035.png"/></span></p></li></ol></li><li><h3 style="padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;"><a name="bookmark39">Reference Material</a><a name="bookmark40">&zwnj;</a></h3></li></ol><p class="s4" style="padding-left: 25pt;text-indent: 0pt;text-align: left;">Reference Material</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 4pt;padding-left: 25pt;text-indent: 0pt;line-height: 182%;text-align: left;"><a name="bookmark41">Note: </a><span class="p">Official documents from Zigbee Alliance may require membership for full access. </span>[R1] <a href="https://groups.zigbee.org/wg/all_members/document/folder/31" class="s7" target="_blank">Certification resources for members: </a><a href="https://groups.zigbee.org/wg/all_members/document/folder/31" target="_blank">https://groups.zigbee.org/wg/all_members/document/folder/31</a></p><p class="s5" style="padding-left: 25pt;text-indent: 0pt;line-height: 182%;text-align: left;"><a name="bookmark42">[R2] </a><a href="https://groups.zigbee.org/wg/probdb/document/folder/44" class="s7" target="_blank">PICS document for individual clusters: </a><a href="https://groups.zigbee.org/wg/probdb/document/folder/44" target="_blank">https://groups.zigbee.org/wg/probdb/document/folder/44</a></p><p class="s5" style="padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;"><a name="bookmark43">[R3] </a><a href="https://groups.zigbee.org/wg/all_members/document/folder/289" class="s7" target="_blank">Zigbee 3.0 Test Tool: </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://groups.zigbee.org/wg/all_members/document/folder/289</span><span class="s21"> </span>[R4] <a href="https://zigbeecertifiedproducts.knack.com/zigbee-certified" class="s7" target="_blank">Certification Web Tool: </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://zigbeecertifiedproducts.knack.com/zigbee-certified</span><span class="s21"> </span>[R5] <span class="p">Zigbee Alliance BDB documents:</span></p><p class="s21" style="padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;"><a name="bookmark44"><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://workspace.zigbee.org/higherlogic/ws/groups/zigbee_all_members/documents?folder_id=390</span></a> <span class="s5">[R6] </span><a href="https://groups.zigbee.org/wg/all_members/document/5479" class="s7" target="_blank">docs-13-0402-13-00zi-Base-Device-Behavior-Specification: </a><a href="https://groups.zigbee.org/wg/all_members/document/5479" target="_blank">https://groups.zigbee.org/wg/all_members/document/5479</a></p><p class="s21" style="padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;"><a href="https://groups.zigbee.org/wg/all_members/document/previewpdf/5479" class="s7" target="_blank" name="bookmark45">(preview link) </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://groups.zigbee.org/wg/all_members/document/previewpdf/5479</span> <span class="s5">[R7] </span><a href="https://groups.zigbee.org/wg/all_members/document/9125" class="s7" target="_blank">docs-15-0283-04-pfnd-Base-Device-Behavior-PICS: </a><a href="https://groups.zigbee.org/wg/all_members/document/9125" target="_blank">https://groups.zigbee.org/wg/all_members/document/9125</a></p><p class="s21" style="padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;"><a href="https://groups.zigbee.org/wg/all_members/document/previewpdf/9125" class="s7" target="_blank" name="bookmark46">(preview link) </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://groups.zigbee.org/wg/all_members/document/previewpdf/9125</span> <span class="s5">[R8] </span><a href="https://groups.zigbee.org/wg/probdb/document/294" class="s7" target="_blank">Zigbee cluster library specification: </a><a href="https://groups.zigbee.org/wg/probdb/document/294" target="_blank">https://groups.zigbee.org/wg/probdb/document/294</a></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><a href="https://groups.zigbee.org/wg/probdb/document/previewpdf/294" class="s7" target="_blank">(preview link) </a><a href="https://groups.zigbee.org/wg/probdb/document/previewpdf/294" target="_blank">https://groups.zigbee.org/wg/probdb/document/previewpdf/294</a></p><p class="s5" style="padding-top: 8pt;padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;"><a name="bookmark47">[R9] </a><a href="https://workspace.zigbee.org/higherlogic/ws/groups/zigbee_all_members/documents/base390/document?document_id=23224" class="s7" target="_blank">BDB PICS to test cases cross reference: </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://workspace.zigbee.org/higherlogic/ws/groups/zigbee_all_members/documents/base390/document?document_id=23224</span><span class="s21"> </span>[R10] <a href="https://groups.zigbee.org/wg/all_members/document/9123" class="s7" target="_blank">ZTT v1.0.2.4 Official Test Scripts.zip (included in ZTT 1.0.2.4 package): </a><a href="https://groups.zigbee.org/wg/all_members/document/9123" target="_blank">https://groups.zigbee.org/wg/all_members/document/9123</a><a name="bookmark48">&zwnj;</a></p><p class="s5" style="padding-left: 25pt;text-indent: 0pt;line-height: 181%;text-align: left;"><a name="bookmark49">[R11] </a><a href="https://groups.zigbee.org/wg/all_members/document/folder/289" class="s7" target="_blank">ZTT user guide (included in ZTT 1.0.2.4 package): </a><span style=" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt;">https://groups.zigbee.org/wg/all_members/document/folder/289</span><span class="s21"> </span>[R12] <a href="https://groups.zigbee.org/wg/probdb/document/folder/44" class="s7" target="_blank">Clusters test specification parent folder: </a><a href="https://groups.zigbee.org/wg/probdb/document/folder/44" target="_blank">https://groups.zigbee.org/wg/probdb/document/folder/44</a><a name="bookmark50">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 18pt;text-indent: 0pt;text-align: left;">Simplicity Studio</h4><p class="s22" style="padding-top: 8pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">One-click access to MCU and wireless tools, documentation, software, source code libraries &amp; more. Available for Windows, Mac and Linux!</p><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s23" style="text-indent: 0pt;line-height: 8pt;text-align: center;">IoT Portfolio</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/IoT" class="s24">www.silabs.com/IoT</a></p><p class="s25" style="text-indent: 0pt;line-height: 9pt;text-align: center;">SW/HW</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/simplicity" class="s24">www.silabs.com/simplicity</a></p><p class="s25" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s24">www.silabs.com/quality</a></p><p class="s25" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s26" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 44pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">			</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="768" height="693" alt="image" src="an1118-certifying-zigbee-30-devices/Image_036.png"/></span></p><p class="s27" style="padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s28" style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product.  Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s27" style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s28" style="padding-left: 6pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.® , Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z-Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="an1118-certifying-zigbee-30-devices/Image_037.png"/></span></p><p class="s27" style="padding-top: 4pt;padding-left: 169pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s27" style="padding-left: 169pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 169pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
