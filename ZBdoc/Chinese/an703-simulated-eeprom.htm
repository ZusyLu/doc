<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>AN703: Using Simulated EEPROM Version 1 and Version 2 for the EFR32 Series 1 SoC Platform</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s5 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s6 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .a { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s8 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; }
 .s10 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6pt; }
 .s11 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; }
 .s12 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; }
 .s13 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7.5pt; }
 .s14 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8.5pt; }
 .s15 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s16 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s17 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s18 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 .s19 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s20 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s21 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s22 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: d2 1; }
 #l3> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l4 {padding-left: 0pt;counter-reset: d3 1; }
 #l4> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt;counter-reset: d3 1; }
 #l6> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l7 {padding-left: 0pt; }
 #l7> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l8 {padding-left: 0pt;counter-reset: d4 1; }
 #l8> li>*:first-child:before {counter-increment: d4; content: counter(d4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: d4 0;  }
 #l9 {padding-left: 0pt;counter-reset: d4 1; }
 #l9> li>*:first-child:before {counter-increment: d4; content: counter(d4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: d4 0;  }
 li {display: block; }
 #l10 {padding-left: 0pt;counter-reset: g1 3; }
 #l10> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l11 {padding-left: 0pt; }
 #l11> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l12 {padding-left: 0pt; }
 #l12> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l13 {padding-left: 0pt;counter-reset: g2 1; }
 #l13> li>*:first-child:before {counter-increment: g2; content: counter(g1, decimal)"."counter(g2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l13> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l14 {padding-left: 0pt; }
 #l14> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l15 {padding-left: 0pt; }
 #l15> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l16 {padding-left: 0pt;counter-reset: g2 1; }
 #l16> li>*:first-child:before {counter-increment: g2; content: counter(g1, decimal)"."counter(g2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l16> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l17 {padding-left: 0pt; }
 #l17> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l18 {padding-left: 0pt; }
 #l18> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l19 {padding-left: 0pt; }
 #l19> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l20 {padding-left: 0pt;counter-reset: g2 1; }
 #l20> li>*:first-child:before {counter-increment: g2; content: counter(g1, decimal)"."counter(g2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l20> li:first-child>*:first-child:before {counter-increment: g2 0;  }
 #l21 {padding-left: 0pt; }
 #l21> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="an703-simulated-eeprom/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">AN703: Using Simulated EEPROM Version 1 and Version 2 for the EFR32 Series 1 SoC Platform</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="an703-simulated-eeprom/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="213" height="1" alt="image" src="an703-simulated-eeprom/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="211" height="1" alt="image" src="an703-simulated-eeprom/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">About Simulated EEPROM version 1 and version 2</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Differences between version 1 and version 2</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Erase cycle constraints</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Token definition tips</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Usage overview</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Design constraints</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">This document describes how to use Simulated EEPROM ver- sion 1 and version 2 in Silicon Labs’ EFR32 Series 1 platform, gives an overview of the internal design, and discusses design considerations.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Before reading this document, you should be familiar with the dynamic data storage system in the Ember HAL, inasmuch as the purpose of SimEEv1/v2 is to implement a dynamic data storage system. Specifically, an understanding of token definitions, the token API, and the practice of using real EEPROM for non-volatile storage will help you understand this document. For more information on HAL and the token system, see the online HAL API documentation and <i>AN1154: Using Tokens for Non-Volatile Data Stor- age</i>. If you are working with EFR32 Series 2 devices, which use NVM3 for non-volatile memory management, see <i>AN1135: Using Third Generation Non-Volatile Memory (NVM3) Data Storage</i>.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Overview</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an703-simulated-eeprom/Image_005.png"/></span></p><ol id="l2"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Overview</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Dynamic tokens are data constructs used to preserve frequently accessed data across reboots. Because EFR32 process technology does not offer an internal EEPROM, Silicon Labs has created several dynamic token implementations. This application note discusses the specifics of two of them: Simulated EEPROM version 1 (SimEEv1) and Simulated EEPROM version 2 (SimEEv2). These use a section of internal flash memory for stack and application token storage. Parts that use SimEEv1/v2 to store nonvolatile data have dif- ferent levels of flash performance with respect to guaranteed erase cycles. For SimEEv1, the EFR32 Series 1 devices utilize either 4 kB or 8 kB of upper flash memory. SimEEv2 requires 36 kB of upper flash storage. EFR32 flash cells are qualified for a guaranteed 10,000 erase cycles. Due to the limited erase cycles, SimEEv1/v2 implement a wear-leveling algorithm that effectively extends the number of erase cycles for individual tokens. This document addresses SimEEv1/v2 usage and design considerations from the perspective of the wear-leveling algorithm and its operation.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">SimEEv1/v2 are designed to operate below the token module as transparently as possible. The application is only required to imple- ment one callback and periodically call one utility function. In addition, a status function is available to provide the application with two basic statistics about SimEEv1/v2usage.</p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">About SimEEv1/v2</a><a name="bookmark12">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">SimEEv1/v2 are designed to operate below the token system, so the majority of their use—initialization, getting and setting data, and repairs—is driven by the token system and is otherwise transparent to users. (For information on the token system, see the online HAL API documentation and <i>AN1154: Using Tokens for Non-Volatile Data Storage</i>.) SimEEv1/v2 are based on dynamic placement of data to maximize wear-leveling effectiveness and to increase system erase cycles. The wear-leveling algorithm primarily aims to minimize the number of erases; it does so by only writing fresh data.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">SimEEv1/v2 require flash pages to be erased as data moves around. Erasure of flash pages is under the application’s control because erasing a page will prevent interrupts from being serviced for 21 ms. Ideally the application will regularly call <span class="s6">halSimEepromErasePage() </span>when it can. Calling <span class="s6">halSimEepromErasePage() </span>will return immediately if there are no pages to be erased.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">SimEEv1 is the default choice. Using SimEEv2 requires a special key from Silicon Labs. The only way to downgrade requires full data loss and upgrading might not retain every token.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l3"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark2">Fundamental Differences between SimEEv1 and SimEEv2</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">SimEEv1 and SimEEv2 share the same fundamental limits on maximum number of tokens, maximum token or element size, and maxi- mum number of elements in an indexed token. Maximum sum total of all token sizes is 2 kB in version 1 and 8 kB in SimEEv2. Si- mEEv2 is designed to reduce the maximum time needed when an application writes a token, at the expense of consuming more flash.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The fundamental design difference in SimEEv2 is that not only can there be more data, but “live data” can exist across different virtual pages. This concept means that moving data and erasing hardware pages are accomplished in smaller groupings which take less time. In SimEEv1, as more tokens are stored, token write time increases because an entire virtual page might need to be affected at once.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The rest of this section provides more details explaining how the different versions work.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark3">SimEEv1</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">SimEEv1 will check for existence of SimEEv2 data in the chip. If SimEEv2 data is found, sim-eeprom.c will assert. The only way to return a device to SimEEv1 is to explicitly erase SimEE data in flash or manually edit sim-eeprom.c to remove the asserts.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l4"><li><p class="s7" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark4">Virtual Page Memory Management</a></p><p class="s8" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark13" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">SimEEv1 is composed of two virtual pages, and a virtual page is composed of physical hardware pages in flash. For the 8 kB SimEEv1, a flash page is 2 kB, a virtual page is 4 kB, and the entire SimEEv1 uses 8 kB. For the 4 kB SimEEv1, a flash page is 2 kB, a virtual page is 2 kB, and the entire SimEEv1 uses 4 kB. To better understand the SimEEv1 design, refer to </a><a href="#bookmark13" class="a">Figure 2.1 Operation Inside a Page </a>on page 4 <a href="#bookmark14" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">and </a>Figure 2.2 Transitioning Between Pages on page 4<span style=" color: #000;">.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Inside a virtual page, SimEEv1 maintains a small block of management information that describes what tokens are in storage. Above this block of management information is the base token storage, which stores a single copy of every token. The rest of the unused flash in the virtual page is available for storing copies of tokens.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To keep memory use efficient, each copy of a token requires just a single 16-bit word of data space as a simple tag to identify the copy. When the set token function is called, only the fresh data that is passed into the function is written into storage, and only one extra 16- bit word is consumed to tag this fresh data.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Storing copies of token data is the primary reason why erase cycle calculations are so difficult. The total life of SimEEv1 depends on which tokens are written and how often. A large token can only be written a few times, while a small token can be written many more times in the same available space.</p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: justify;"><a name="bookmark5">Writing and Erasing</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">SimEEv1&#39;s main operation consists of moving between its two virtual pages, allowing writes to one while erasing the other, as shown in the following figure. A virtual page fills up by writing copies of tokens using the token system API. When the second virtual page is erased and the first is full of data, SimEEv1 extracts the management information and the freshest data for all tokens and shifts to the second (erased) virtual page. This shift consists of two operations:</p><ul id="l5"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">Writing the management information to the bottom of the virtual page.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">Reconstructing the base token storage using the freshest data for all of the tokens.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="21" height="121" alt="image" src="an703-simulated-eeprom/Image_006.png"/></span></p><p class="s9" style="padding-left: 180pt;text-indent: 3pt;line-height: 109%;text-align: justify;"><a name="bookmark13">Base Token Storage</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:66pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-left: 25pt;padding-right: 25pt;text-indent: 0pt;text-align: center;">free</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:17pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 5pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:24pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-left: 13pt;text-indent: 0pt;text-align: left;">Management</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-left: 15pt;text-indent: 0pt;text-align: left;">Virtual Page 1</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 77pt;text-indent: 0pt;text-align: left;"><span><img width="17" height="108" alt="image" src="an703-simulated-eeprom/Image_007.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:17pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:8pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;text-indent: 0pt;line-height: 3pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#CCCCCC"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;line-height: 3pt;text-align: left;">Token B</p></td></tr><tr style="height:8pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:17pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 5pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:24pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-left: 13pt;text-indent: 0pt;text-align: left;">Management</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-bottom: 4pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">Virtual Page 2</p><p style="padding-left: 97pt;text-indent: 0pt;text-align: left;"><span><img width="12" height="122" alt="image" src="an703-simulated-eeprom/Image_008.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 49pt;text-indent: 0pt;line-height: 109%;text-align: center;">Erased Flash Pages</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="66" alt="image" src="an703-simulated-eeprom/Image_009.png"/></span></p><p class="s9" style="padding-left: 2pt;text-indent: 3pt;line-height: 109%;text-align: justify;">Base Token Storage</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-top: 4pt;padding-left: 187pt;text-indent: 0pt;text-align: center;">Figure 2.1.  Operation Inside a Page</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">When the shift is complete, the second virtual page begins to fill up with copies of data while the first virtual page is erased, as shown in the following figure.</p><p class="s7" style="padding-top: 8pt;padding-left: 187pt;text-indent: 0pt;text-align: center;"><a name="bookmark14">Virtual Page 1                     Virtual Page 2</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 314pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="3" height="3" alt="image" src="an703-simulated-eeprom/Image_010.png"/></span></p><p class="s9" style="padding-top: 2pt;padding-left: 169pt;text-indent: 3pt;line-height: 109%;text-align: justify;">Base Token Storage</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 121pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="3" height="3" alt="image" src="an703-simulated-eeprom/Image_011.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 121pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="3" height="3" alt="image" src="an703-simulated-eeprom/Image_012.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 121pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="3" height="3" alt="image" src="an703-simulated-eeprom/Image_013.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="66" alt="image" src="an703-simulated-eeprom/Image_014.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="12" height="66" alt="image" src="an703-simulated-eeprom/Image_015.png"/></span></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:9pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td><td style="width:46pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" rowspan="11"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 4pt;padding-left: 25pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">free</p></td></tr><tr style="height:8pt"><td style="width:31pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3" rowspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="11"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:8pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:9pt"><td style="width:23pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" rowspan="3"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:8pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="7"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:8pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:8pt"><td style="width:14pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:9pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:16pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-right: 2pt;text-indent: 0pt;text-align: right;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s10" style="padding-top: 4pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:10pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 5pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 5pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:7pt"><td style="width:23pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" rowspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:8pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:15pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:8pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:8pt"><td style="width:23pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:8pt"><td style="width:11pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">X</p></td><td style="width:53pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td><td style="width:10pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" rowspan="2"><p class="s10" style="padding-top: 4pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:8pt"><td style="width:46pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="4" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-left: 13pt;text-indent: 0pt;text-align: left;">Management</p></td><td style="width:64pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="2" rowspan="2"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-left: 13pt;text-indent: 0pt;text-align: left;">Management</p></td></tr><tr style="height:12pt"><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">Figure 2.2. Transitioning Between Pages</p><p class="s9" style="padding-top: 2pt;padding-left: 2pt;text-indent: 3pt;line-height: 109%;text-align: justify;">Base Token Storage</p></li></ol></li><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark6">SimEEv2</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l6"><li><p class="s7" style="padding-top: 5pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark7">Virtual Page Memory Management</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">SimEEv2 is composed of three virtual pages, and a virtual page is composed of physical hardware pages in flash. A flash page is 2 kB, a virtual page is 12 kB, and the entire SimEEv2 uses 36 kB. Because live data is split across two virtual pages, a third virtual page is required to recover and repair a possible failure. While data is rotated among all three virtual pages, one virtual page is always kept erased to recover into.</p><p class="s8" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark15" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">To better understand the SimEEv2 design, refer to </a>Figure 2.3 Writes to a Fresh Page on page 6 <a href="#bookmark16" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">through </a><a href="#bookmark16" class="a">Figure 2.6 Token C Write </a>and Physical Page Erase on page 7 <span style=" color: #000;">in this section. Note that the third page is not shown in the figures, as it is only kept as a repair page.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Inside a virtual page, SimEEv2 maintains a small block of management information that describes what tokens are in storage, including integrity checks. Above this block of management information is the base token storage, which stores a single copy of every token. The rest of the unused flash in the virtual page is available for storing copies of tokens.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Each copy of a token requires 48-bits of data space as a tag. This tag is to identify the data, including an integrity check of the tag itself. When the set token function is called, only the fresh data that is passed into the function is written into storage, with the tag.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Storing copies of token data is the primary reason why erase cycle calculations are so difficult. The total life of SimEEv2 depends on which tokens are written and how often. A large token can only be written a few times, while a small token can be written many more times in the same available space.</p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark8">Writing and Erasing</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The main operation of SimEEv2 consists of moving between its virtual pages, allowing writes to one while erasing the other.</p><ul id="l7"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">A virtual page fills up by writing copies of tokens using the token system API, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:265.009pt" cellspacing="0"><tr style="height:22pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 4pt;text-indent: 0pt;text-align: left;"><a name="bookmark15">free/erased</a></p></td></tr><tr style="height:11pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s11" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:22pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:22pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:11pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s11" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:11pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s11" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:11pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s11" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Token D</p></td></tr><tr style="height:22pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:22pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:11pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s11" style="padding-top: 1pt;padding-left: 8pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:11pt"><td style="width:43pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s11" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Management</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="357" height="289" alt="image" src="an703-simulated-eeprom/Image_016.png"/></span></p><p class="s12" style="text-indent: 0pt;text-align: left;">1 2 3 4 5</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="text-indent: 0pt;line-height: 8pt;text-align: left;">VPA</p><p style="text-indent: 0pt;text-align: left;"/><p class="s13" style="text-indent: 0pt;line-height: 8pt;text-align: left;">VPB</p><p style="text-indent: 0pt;text-align: left;"/><p class="s12" style="padding-left: 42pt;text-indent: 0pt;text-align: left;">write token</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 21pt;text-indent: 10pt;line-height: 219%;text-align: left;">write token write token</p><p class="s12" style="padding-top: 1pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">write token</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="text-indent: 0pt;text-align: left;">write token</p><p style="text-indent: 0pt;text-align: left;"/><p class="s12" style="text-indent: 4pt;line-height: 109%;text-align: justify;">Base Token Storage</p><p style="text-indent: 0pt;text-align: left;"/><p class="s12" style="text-indent: 0pt;text-align: left;">currPage</p><p style="text-indent: 0pt;text-align: left;"/><p class="s12" style="text-indent: 0pt;text-align: left;">nextPage</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">free/erased</p><p style="text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-left: 187pt;text-indent: 0pt;text-align: center;">Figure 2.3.  Writes to a Fresh Page</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="266" height="293" alt="image" src="an703-simulated-eeprom/Image_017.png"/></span></p><p class="s14" style="text-indent: 0pt;line-height: 9pt;text-align: left;">VPA</p><p style="text-indent: 0pt;text-align: left;"/><p class="s14" style="text-indent: 0pt;line-height: 9pt;text-align: left;">VPB</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="padding-left: 16pt;text-indent: 0pt;line-height: 8pt;text-align: left;">write token</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="text-indent: 0pt;text-align: left;">copy token</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 8pt;text-align: left;">copy management</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 8pt;text-align: left;">currPage</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 8pt;text-align: left;">nextPage</p><p style="text-indent: 0pt;text-align: left;"/></li><li><p style="padding-left: 36pt;text-indent: -9pt;text-align: justify;">When a token write doesn’t fit in the current virtual page, the management data is copied over to the next page while writing the new data in the next page. In addition to copying over the management data, the latest versions of existing tokens are copied over, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-left: 4pt;text-indent: 0pt;text-align: left;">free/erased</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token D</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token C</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token B</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;">Management</p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:143pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">free/erased</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Management</p></td></tr></table><p style="padding-left: 210pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">	</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 120pt;text-indent: 0pt;text-align: left;">Figure 2.4. Write of Token C to Available Space with Copy of Management and a Token</p><p style="text-indent: 0pt;text-align: left;"><span><img width="268" height="294" alt="image" src="an703-simulated-eeprom/Image_018.png"/></span></p><p class="s14" style="text-indent: 0pt;line-height: 9pt;text-align: left;">VPA</p><p style="text-indent: 0pt;text-align: left;"/><p class="s14" style="text-indent: 0pt;line-height: 9pt;text-align: left;">VPB</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">write token</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">copy token</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">currPage</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">nextPage</p><p style="text-indent: 0pt;text-align: left;"/></li><li><p style="padding-top: 8pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Once the management data has been copied, the algorithm will always copy as much token data as the size of the new token write, as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="text-indent: 0pt;text-align: center;">free/erased</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token B</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token D</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token B</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Management</p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:96pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-top: 6pt;text-indent: 0pt;text-align: center;">free/erased</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token B</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Management</p></td></tr></table><p style="padding-left: 209pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">	</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 177pt;text-indent: 0pt;text-align: left;">Figure 2.5. Second Write of Token C with a Copy of a Token</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 36pt;text-indent: -9pt;text-align: left;">By copying an existing token(s) alongside a new token write, the freshest token data will be split across multiple virtual pages, keep- ing the maximum write time capped.</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Once the freshest copy of all tokens exists on the next page, the virtual pages swap current page designation and next page desig- nation.</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">With all the tokens existing on the current page, the page containing all the old data will begin to be erased, as shown in the follow- ing figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse" cellspacing="0"><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s16" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;"><a name="bookmark16">free/erased</a></p></td><td style="width:20pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:dashed;border-bottom-width:1pt" rowspan="5" bgcolor="#F2F2F2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token D</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token B</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:dashed;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s16" style="padding-top: 7pt;text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:dashed;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td><td style="width:20pt;border-top-style:dashed;border-top-width:1pt;border-left-style:solid;border-left-width:1pt" rowspan="7" bgcolor="#F2F2F2"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token D</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token B</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">Management</p></td></tr></table><table style="border-collapse:collapse" cellspacing="0"><tr style="height:36pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="padding-left: 1pt;text-indent: 0pt;text-align: center;">free/erased</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token D</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token B</p></td></tr><tr style="height:24pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;text-align: center;">Token C</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;text-indent: 0pt;text-align: center;">Token A</p></td></tr><tr style="height:12pt"><td style="width:48pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#FFFFFF"><p class="s16" style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;">Management</p></td></tr></table><p style="padding-left: 209pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">	</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="271" height="294" alt="image" src="an703-simulated-eeprom/Image_019.png"/></span></p><p class="s14" style="text-indent: 0pt;line-height: 10pt;text-align: left;">VPA</p><p style="text-indent: 0pt;text-align: left;"/><p class="s14" style="text-indent: 0pt;line-height: 10pt;text-align: left;">VPB</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">write token</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">erase</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">physical page boundary</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">nextPage</p><p style="text-indent: 0pt;text-align: left;"/><p class="s15" style="text-indent: 0pt;line-height: 9pt;text-align: left;">currPage</p><p style="text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-top: 4pt;padding-left: 196pt;text-indent: 0pt;text-align: left;">Figure 2.6. Token C Write and Physical Page Erase</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 36pt;text-indent: -9pt;text-align: left;">Token erasing is still under the control of the application. The simulated EEPROM callback will request that the application erase pages.</p></li></ul></li><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark9">Enabling SimEEv2</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To enable SimEEv2 on SoC platforms in EmberZNet PRO, you will enable the Application Framework plugin <b>Simulated EEPROM ver- sion 2 Library </b>to leverage the binary library file provided as sim-eeprom2-library. To create a new application configuration that utilizes SimEEv2, follow these steps:</p><ol id="l8"><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">With the project .isc file open in Simplicity Studio&#39;s Simplicity IDE (Application Builder), go to the Plugins tab.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Be sure the <b>Simulated EEPROM Version 1 Library </b>plugin is disabled.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Enable the <b>Simulated EEPRPOM Version 2 Library </b>plugin.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -8pt;text-align: justify;">In the Password field of the <b>Simulated EEPROM Version 2 Library </b>plugin, enter the following string exactly as shown (case-sen- sitive): !spoon</p></li><li><p class="s8" style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark17" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">If the chip currently has data from SimEEv1 and you want to preserve the data, link in the upgrade library (see section </a><a href="#bookmark17" class="a">2.3.4 Up- grade SimEEv1 to SimEEv2</a> <span style=" color: #000;">for more instructions). If the chip does not have any SimEEv1 data, or if you do not care about pre- serving any, then link in the upgrade stub library instead of the upgrade library.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s7" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark10">Upgrade SimEEv1 to SimEEv2</a><a name="bookmark17">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">It is possible to upgrade SimEEv1 to SimEEv2 using the <b>Simulated EEPROM Version 1 to Version 2 Upgrade Library </b>found in Appli- cation Builder. This upgrade library can only be linked into applications that are built with the <b>Simulated EEPROM Version 2 Library</b>. The upgrade library is a companion to the main <b>Simulated EEPROM Version 2 Library </b>and cannot be run on its own.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Like every type and instance of the SimEE, the tokens defined in the application must match the tokens already stored in flash. Only the tokens defined in the application matching the tokens that exist in flash can be upgraded to SimEEv2. Any new tokens and tokens that do not match will be installed with their default definitions. Tokens in flash that do not have a matching definition in the application will be ignored and eventually erased.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The upgrade library runs a simplified copy of the SimEEv1 to find existing tokens. SimEEv2 then takes over and performs a standard repair process to reformat SimEEv1 tokens into SimEEv2 formatting.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The upgrade is a one-way process that only has to be run once per device to move the tokens in flash into the proper format and loca- tions. Once an upgrade has been performed on a device, any further reboots of a device will check to see if SimEEv1 tokens exist and not take any further upgrade action. After an upgrade has been performed on a device, the application can be recompiled using the upgrade stub library to save space.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark11">Downgrade SimEEv2 to SimEEv1</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Downgrading requires full data loss. There are four means of downgrading:</p><ol id="l9"><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">In Application Builder’s <b>Plugins </b>tab, <b>Simulated EEPROM Version 1 Library </b>plugin has a checkbox option for Destructive SimEE version 2 to version 1 downgrade</p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Manually add the preprocessor define DESTRUCTIVE_SIMEE2TO1_DOWNGRADE to your build</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Manually edit sim-eeprom.c to remove the asserts that check for version 2</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Manually and explicitly erase simulated EEPROM data in flash</p></li></ol></li></ol></li></ol></li></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">All data will be lost and recreated from default values in the application.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Erase Cycle Constraints</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an703-simulated-eeprom/Image_020.png"/></span></p><ol id="l10"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark18">Erase Cycle Constraints</a><a name="bookmark19">&zwnj;</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Because flash cells are qualified for a guaranteed 2,000, 10,000, or 20,000 erase cycles, SimEEv1/v2 implement a wear-leveling algo- rithm that effectively extends the number of erase cycles for individual tokens. The number of set token operations is finite due to flash erase-cycle limitations. It is impossible to guarantee an exact number of set token operations because the life of SimEEv1/v2 depends on which tokens are written and how often.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Estimating erase cycles can be very difficult and inaccurate because every application, token setup, and chip can be different along with the variability of the larger environment after deployment into the field. In general, the number of token writes is on the order of hundreds of thousands and up to millions. Estimating erase cycles gives a false sense of certainty.</p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark20">Token Definition Tips</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">There are two types of dynamic tokens:</p><ul id="l11"><li><p class="s7" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Non-indexed or basic tokens <span class="p">can be thought of as a simple char variable type. They can be used to store an array, but if one element changes the entire array must be rewritten.</span></p><ul id="l12"><li><p style="padding-top: 2pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">A counter token is a special type of non-indexed token that is meant to store a number.</p></li></ul></li><li><p class="s7" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Indexed tokens <span class="p">can be considered as a linked array of char variables where each element is expected to change independently of the others and therefore is stored internally as an independent token and accessed explicitly through the token API.</span></p><p style="padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;line-height: 19pt;text-align: left;">The token system provides separate API functions for non-indexed and indexed tokens, which are not interchangeable. The following sections provide recommendations on token definitions:</p></li><li><p style="padding-top: 1pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Structured types and byte alignment</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">When to define a counter token</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Basic (non-indexed) array tokens versus indexed tokens</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Unused and zero-sized tokens</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l13"><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark21">Structured Types and Byte Alignment</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">To maximize the erase cycles and efficiency of SimEEv1/v2, avoid using extraneous memory wherever possible. The following is a sub- tle example of avoiding extraneous memory by defining a structured token type.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 12pt;text-indent: -9pt;line-height: 107%;text-align: left;">typedef struct { uint8_t dataA; uint16_t dataB; uint8_t dataC;</p><p class="s6" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">} tokTypeData</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In this example, the size of the struct is only 4 bytes, and SimEEv1/v2 stores data as 16-bit quantities, so each copy of this data in the flash should only use two 16-bit words. However, this is inefficient and costs an extra word of storage because the compiler’s alignment of data in memory performs a direct translation of this structure. The compiler places a padding byte after <span class="s6">dataA</span>, so <span class="s6">dataB </span>is word aligned. This forces <span class="s6">dataC </span>into a third word, where another padding byte is placed after <span class="s6">dataC</span>. Altogether, this structure consumes three 16-bit words of memory.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If <span class="s6">dataB </span>precedes <span class="s6">dataA</span>, the compiler places <span class="s6">dataB </span>as the first word and packs <span class="s6">dataA </span>and <span class="s6">dataC </span>into a single word following <span class="s6">dataB</span>. The following version uses only two words, 4 bytes of storage:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 12pt;text-indent: -9pt;line-height: 107%;text-align: left;">typedef struct { uint16_t dataB; uint8_t dataA; uint8_t dataC;</p><p class="s6" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">} tokTypeData</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 4pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark22">When to Define a Counter Token</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A counter token is a non-indexed token that is meant to store a number. This number is most often incremented as opposed to explicitly set. A counter token can only be non-indexed, and the token API function <span class="s6">halCommonIncrementCounterToken() </span>can only operate on counter tokens. Counter tokens must be 32-bits.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A token should only be declared as a counter when the function <span class="s6">halCommonIncrementCounterToken() </span>is used on the token. A counter token receives special memory storage. To increase the density of stored information inSimEEv1/v2, counter tokens consume an extra 50 bytes for each instance. These extra 50 bytes of storage are meant to store +1 markers. If an application declares a 32-bit counter token as a normal token and wants to increment this counter 50 times, 500 bytes are consumed (4 bytes plus 6 bytes of overhead times 50). However, if the application declares this token as a counter and then increments the counter 50 times, only 50 bytes are con- sumed. For the EFR32, the flash words can only be written twice, so each word can only store two increments. Therefore the extra 50 bytes of storage only allow 25 increments before the token has to be moved by SimEEv1/v2.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When a token is declared as a counter and incremented significantly more than it is set, the erase-cycle density is greatly increased due to the extra efficiency in storing the number. Conversely, if a token is declared as a counter and never incremented but only set, the erase-cycle density decreases dramatically due to the extra 50 bytes that are consumed for each token instance.</p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark23">Array Tokens Versus Indexed Tokens</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The difference between a basic (non-indexed) array token and an indexed token is subtle but important.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Array Token</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following example defines a basic (non-indexed) array token:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">typedef uint8_t tokTypeAdata[10]; DEFINE_BASIC_TOKEN(ADATA, tokTypeAdata, {0,})</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">In this case, the fifth byte of token ADATA is read as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s17" style=" background-color: #D8D8D8;"> halCommonGetToken(&amp;data, TOKEN_ADATA);                                                                           </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Byte 5 is accessed with a local variable such as <span class="s6">data[5]</span>.</p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Indexed Token</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In the following example, the same data is defined an indexed token:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">typedef uint8_t tokTypeIdata; DEFINE_INDEXED_TOKEN(IDATA, tokTypeIdata, 10, {0,})</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In this case, the fifth byte of token IDATA is read as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s17" style=" background-color: #D8D8D8;"> halCommonGetIndexedToken(&amp;data, TOKEN_IDATA, 5);                                                                </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">The local variable already holds byte 5 and only byte 5.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Differences in SimEEv1/v2 Storage</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">SimEEv1/v2 store these two tokens with significant differences:</p><ul id="l14"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">A <span class="s6">BASIC </span>token is stored as a chunk of data with a management word attached to it.</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">An <span class="s6">INDEXED </span>token is broken up and each element of the token is stored internally as a basic token.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Both methods allow grouping similar data together under a single token name. In general, grouped data should be stored as a <span class="s6">BASIC </span>token only when all of the grouped data will commonly change in unison. Alternatively, if each piece of the grouped data needs to change independently of the others, the token should be declared as <span class="s6">INDEXED</span>.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In the default set of stack tokens there are good examples of <span class="s6">BASIC </span>versus <span class="s6">INDEXED </span>tokens:</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">TOKEN_STACK_NODE_DATA <span class="p">contains six different pieces of data, but all six are always changed together. Therefore, the token is de- clared as </span>BASIC <span class="p">and the token’s type is a structure that contains each piece of data.</span></p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">TOKEN_STACK_BINDING_TABLE <span class="p">is an </span>INDEXED <span class="p">token because it contains multiple entries that change independently of each other.</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark24">Unused and Zero-Sized Tokens</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">You should remove declarations for unused tokens from the system. Otherwise, their default values remain set and they simply con- sume flash storage and reduce available erase cycles.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Indexed tokens with an array size of zero can be allowed to stay; however, they should be removed if they are always zero-sized. A zero-sized token does not consume any storage for its data; however, in SimEEv1 it consumes two 16-bit words for management data and in SimEEv2 is consumes 48-bits for management data. Maintaining management data is necessary since SimEEv1/v2 must always know the token exists, whether empty or not.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark25">Token Manager Component</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To use the Token Manager, the token_manager component (token_manager.slcc) should be added to the project. The token_manager component will default to using the token_manager_nvm3 component which brings in the NVM3 system. Using NVM3 for storage is highly recommended.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">To use Simulated EEPROM 1 or 2 for storage, the component token_manager_simee1 or token_manager_simee2 should be part of the project alongside token_manager.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">To upgrade SimEE 2 to NVM3, the sim_eeprom2_to_nvm3_upgrade component should be used alongside token_manager. This up- grade component will pull in the necessary SimEE and NVM3 code.</p></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark26">Usage Overview</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Only three SimEEv1/v2 functions are exposed to the application:</p><ul id="l15"><li><p class="s6" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">halSimEepromCallback()</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">halSimEepromErasePage()</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">halSimEepromStatus()</p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Prototypes and in-code descriptions for these functions can be found in hal/micro/sim-eeprom.h.</p><p class="s6" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">halSimEepromCallback()<span class="p">is critical because the application is responsible for periodically erasing flash pages by calling </span>halSimEepromErasePage() <span class="p">to allow the wear-leveling algorithm to continue to operate. The application must control when to erase pa- ges, because an erase operation renders EFR32 completely unresponsive for 21 milliseconds while the flash is busy.</span></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">In summary, when a token is set, SimEEv1/v2 determines if a page needs to be erased, and if so, the callback is triggered by one of the following <span class="s6">EmberStatus </span>codes:</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_GREEN <span class="p">indicates that there is still room available to the wear-leveling algorithm.</span></p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_RED <span class="p">indicates that SimEEv1/v2 are nearly out of room for the wear-leveling algorithm to continue, and that data loss due to a full sSimEEv1/v2 is possible.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The application should always call <span class="s6">halSimEepromErasePage() </span>when one of these two status codes return, in order to maintain ample room for SimEEv1/v2.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The application should take care only to call <span class="s6">halSimEepromErasePage() </span>while it is in a state where it can be unresponsive for an exten- ded period of time. <span class="s6">halSimEepromErasePage() </span>is typically called from the callback as needed. If the application is concerned about being unresponsive at inopportune times, Silicon Labs recommends two methods:</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">The application calls <span class="s6">halSimEepromErasePage() </span>whenever it can and as often as it can, inasmuch as the function only executes when necessary.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">The callback sets a simple flag whenever it requests a page be erased. The application can then check this flag when it is safe to do so, perform the erase, and clear the flag when the erase operation is complete. For example, the application can safely proceed with an erase during sleeping or waking sequences when the network is inactive.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The following sections provide more detail on the three functions.</p><ol id="l16"><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark27">halSimEepromCallback</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;"><span class="s17" style=" background-color: #D8D8D8;"> void halSimEepromCallback(EmberStatus status)                                                                    </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">This callback function must be implemented by the application. Because the majority of implementations follow the same basic pattern, a default instance is provided in SimplicityStudio/v4/developer/sdks/gecko_sdk_suite/&lt;vn.n&gt;/protocol/zigbee/stack/config/ember-config- uration.c. A page erase operation causes the processor to ignore interrupts for 21 milliseconds while the flash is busy.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If the application has specific timing requirements and must tightly control when SimEEv1/v2 perform a page erasure, the application can implement a custom callback handler and override the default implementation by defining the macro <span class="s6">EMBER_APPLICATION_HAS_CUSTOM_SIM_EEPROM_CALLBACK</span>. The primary purpose of the callback is to inform the application about the status of SimEEv1/v2 and the need for erasing flash pages. The callback always reports one of the following five possible <span class="s6">EmberStatus </span>codes:</p><ul id="l17"><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_GREEN</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_RED</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_SIM_EEPROM_FULL</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_ERR_FLASH_WRITE_INHIBITED</p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">EMBER_ERR_FLASH_VERIFY_FAILED</p></li></ul><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">This callback is critical because the application is responsible for periodically erasing flash pages by calling</p><p class="s6" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">halSimEepromErasePage()<span class="p">, so the wear-leveling algorithm can continue to operate.</span></p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">It is best for all applications to regularly call <span class="s6">halSimEepromErasePage() </span>when they can. Calling <span class="s6">halSimEepromErasePage() </span>will return immediately if there are no pages to be erased.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_GREEN</p><p class="s6" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">EMBER_SIM_EEPROM_ERASE_PAGE_GREEN <span class="p">indicates a page needs to be erased, but SimEEv1/v2 have enough space available for the wear-leveling algorithm to continue. Ideally the application will always erase a page on this indication, if not before. The application can safely defer or re-schedule the lengthy page erase operation until it is convenient. The application has control of erasing pages because an erase operation causes EFR32 to ignore interrupts for 21 milliseconds while the flash is busy.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_RED</p><p class="s6" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">EMBER_SIM_EEPROM_ERASE_PAGE_RED <span class="p">indicates that data loss is imminent due to a full SimEEv1/v2. Pages must be erased immediate- ly. Call </span>halSimEepromErasePage() <span class="p">to prevent data loss.</span></p><p class="s6" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><span class="p">Because calling </span>halSimEepromErasePage() <a href="#bookmark30" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">will return immediately if there is nothing to be erased, it is safe to call this function until it returns 0, meaning no more pages to be erased. For more information, see section </a><span class="s8">5.2 halSimEepromErasePage</span>.</p><p class="s7" style="padding-top: 5pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Note: <span class="p">An application that erases pages regularly should never see a status of EMBER_SIM_EEPROM_RED.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">EMBER_SIM_EEPROM_FULL</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When SimEEv1/v2 become full and the application or stack attempts to set another token, the callback is triggered with an <span class="s6">EmberStatus </span>of <span class="s6">EMBER_SIM_EEPROM_FULL</span>. Because SimEEv1/v2 are full, nothing can be done for the current set token call and the data being set is dropped.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">If this status is passed to the callback, the application should immediately call <span class="s6">halSimEepromErasePage() </span>for all the physical pages that comprise the virtual page. Doing so enables SimEEv1/v2 to continue operating.</p><p class="s6" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><span class="p">Because calling </span>halSimEepromErasePage() <a href="#bookmark30" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">will return immediately if there is nothing to be erased, it is safe to call this function until it returns 0, meaning no more pages to be erased. For more information, see section </a><span class="s8">5.2 halSimEepromErasePage</span>.</p><p class="s7" style="padding-top: 5pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Note: <span class="p">An application that erases pages regularly should never see a status of EMBER_SIM_EEPROM_FULL.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">EMBER_ERR_FLASH_WRITE_INHIBITED</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">This <span class="s6">EmberStatus </span>code indicates that the flash library inhibited the write attempt due to data already existing at the desired address. This error code generally indicates that there is stale data in a portion of SimEEv1/v2 that is supposed to be empty and unused. This indicates SimEEv1/v2 were fatally interrupted during an earlier write attempt and that it must now be repaired to recover from this error. The callback must now call the function <span class="s6">halInternalSimEeRepair(FALSE) </span>to resolve this error. To prevent possible reentrance of the repair function, wrap the call to <span class="s6">halInternalSimEeRepair(FALSE) </span>with a static or global flag. After the repair, the callback must now reset the micro with the HAL function call <span class="s6">halInternalSysReset(RESET_FLASH_INHIBIT) </span>due to the lost token data as well as to trig- ger proper initialization.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">EMBER_ERR_FLASH_VERIFY_FAILED</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If SimEEv1/v2 ever fail to write to flash—which eventually happens when the erase cycles of the flash are exceeded—SimEEv1/v2 re- port this error to the callback.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Because the wear-leveling algorithm of SimEEv1/v2 evenly spreads flash usage, the algorithm can operate cleanly for a long time. Eventually, however, the erase-cycle limit is exceeded. Assume every address inside SimEEv1/v2 will fail at nearly the same time. This characteristic of SimEEv1/v2’s end of life means that it cannot recover if it fails to write to flash. There is no means or method of work- ing around failed addresses.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">While the callback can still first call <span class="s6">halInternalSimEeRepair(FALSE) </span>and then or the HAL function <span class="s6">halInternalSysReset(RESET_FLASH_VERIFY) </span>in an attempt to keep using non-volatile storage, it can no longer guarantee that the data is safe. If this error code is ever seen, the application should cease all operations involving tokens (including the use of the net- working stack) and default into a safe mode.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark28">halSimEepromErasePage</a><a name="bookmark30">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;"><span class="s17" style=" background-color: #D8D8D8;"> uint8_t halSimEepromErasePage(void)                                                                              </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Returns a count of how many pages are left to be erased. This value allows for calling code to easily loop until all pages due for erasure are erased.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">This function instructs SimEEv1/v2 to erase a page. SimEEv1/v2 does not erase a page unless explicitly told to do this by this function call, even if failure to do so might cause data loss. Because of the length of time required to erase a page, this decision is left to the discretion of the application.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">This function is typically called from within <span class="s6">halSimEepromCallback()</span>, but it can and should be called from anywhere at any time con- venient for the application. When this function is called, SimEEv1/v2 only perform a page erasure if needed, and each call to this func- tion only erases a single page.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Because calling <span class="s6">halSimEepromErasePage() </span>will return immediately if there is nothing to be erased, it is safe to call this function any- time.</p><p class="s7" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Erasing a page of flash takes 21 milliseconds, during which the processor ignores interrupts. The application should take care to call this function only when it can afford to be unresponsive for a long period—for example, during sleeping or wakeup sequences when the network is not active.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark29">halSimEepromStatus</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">void halSimEepromStatus</p><p class="s6" style="padding-left: 17pt;text-indent: 0pt;text-align: left;">(uint16_t * freeWordsInCurrPage, uint16_t * totalPageUseCount)</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">This function returns two basic metrics about SimEEv1/v2&#39;s current state:</p><ul id="l18"><li><p class="s6" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">freeWordsInCurrPage <span class="p">returns the number of free words on the current page.</span></p></li><li><p class="s6" style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">totalPageUseCountTotal <span class="p">returns the total number of pages used.</span></p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">SimEEv1/v2 move data between two virtual pages: while one virtual page fills with set token calls, the other virtual page is erased by <span class="s6">halSimEepromErasePage() (</span><a href="#bookmark12" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">see section </a><span style=" color: #049;">2. About SimEEv1/v2 </span>for more information). The two metrics returned by this function provide insight into movement between the virtual pages.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">freeWordsInCurrPage</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The variable <span class="s6">freeWordsInCurrPage </span>equals the difference between the last location of written data and the end of the virtual page - that is, the number of unused words (16-bits) in the virtual page that are being written. This metric can be used to determine how many set token calls are still available in the current virtual page. By dividing this variable by the size of tokens expected to be written, you can estimate how many set token calls remain for this page.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">totalPageUseCount</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The variable <span class="s6">totalPageUseCoun</span>t indicates how many times SimEEv1/v2 switched virtual pages to continue setting additional tokens. This value lets you obtain a very rough approximation of erase cycles and to allow for time-to-failure calculations. The flash cells are qualified for up to 2,000, 10,000, or 20,000 erase cycles, so under ideal conditions for SimEEv1 this variable is read at least 4,000. 20,000 or 40,000 times before the flash cells fail, as two virtual pages are used. Under ideal conditions for SimEEv2 this variable is read at least 6,000, 30,000, or 60,000 times before the flash cells fail, as two virtual pages are used.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Design Constraints</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an703-simulated-eeprom/Image_021.png"/></span></p></li></ul></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark31">Design Constraints</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">The following sections describe some inherent design constraints of SimEEv1/v2:</p><ul id="l19"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Numerical parameters</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">About SimEEv1/v2 repairs</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l20"><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark32">Numerical Parameters</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">A critical set of numerical parameters define and characterize SimEEv1/v2. The four maximum values shown below are due to internal variable sizes, and SimEEv1/v2 are protected from values exceeding these parameters. The timing parameters are given only as a design reference; there is a wide range of operation timing that you should be aware of. Other than erase cycles, these parameters do not change due to environmental characteristics.</p><ul id="l21"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Maximum number of tokens: 255</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Maximum number of elements in an indexed token: 126</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Maximum token or element size: 254</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Maximum sum total of all token sizes for SimEEv1: 2 kB</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Maximum sum total of all token sizes for SimEEv2: 8 kB</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Average read time of one 26 byte token/element: 250 microseconds</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Average write time of one 26 byte token/element: 1.5 milliseconds</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Worst-case write time of one token/element: 75 milliseconds</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Erase time of one page: 21 milliseconds</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Best-case SimEEv1/v2 initialization time: 1.4 milliseconds</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Worst-case SimEEv1/v2 initialization time without repairing: 30 milliseconds</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Worst-case SimEEv1/v2 initialization time with repairing: &gt;200 milliseconds</p></li><li><p class="s8" style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;"><a href="#bookmark19" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Erase cycles: See section </a><a href="#bookmark19" class="a">3. Erase Cycle </a>Constraints<span style=" color: #000;">.</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark33">About SimEEv1/v2 Repairs</a></p></li></ol></li></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The worst-case initialization time with repairing is much larger than the worst case initialization time without repairing, due to the extra processing required when repairing. SimEEv1/v2 store token data using a relationally dependent mechanism that allows token data and management information to be packed as closely together as possible. So, if a token is added, a token is deleted, or a token’s size is changed, SimEEv1/v2 must recalculate the relationship between all of the tokens.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The recalculation is called the Repair function and is automatically performed as needed during the initialization sequence. The Repair function attempts to maintain the integrity of as much data as possible. Deleting a token naturally deletes the token data. Adding or changing a token causes token data to be set to the default value in the token definition.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Smart. Connected. Energy-Friendly.</h4><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s18" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Products</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products" class="s19">www.silabs.com/products</a></p><p class="s18" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s19">www.silabs.com/quality</a></p><p class="s18" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s20" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 64pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="767" height="695" alt="image" src="an703-simulated-eeprom/Image_022.png"/></span></p><p class="s21" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s22" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s22" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z- Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="an703-simulated-eeprom/Image_023.png"/></span></p><p class="s21" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s21" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
