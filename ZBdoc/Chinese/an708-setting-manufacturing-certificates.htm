<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>AN708: Setting Smart Energy Certificates for Zigbee Devices</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s5 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s6 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s8 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s10 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s11 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s12 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 a { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s13 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s14 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s15 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt; }
 #l3> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l4 {padding-left: 0pt;counter-reset: d2 1; }
 #l4> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l5 {padding-left: 0pt;counter-reset: d3 1; }
 #l5> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l6 {padding-left: 0pt; }
 #l6> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l7 {padding-left: 0pt;counter-reset: d2 1; }
 #l7> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l8 {padding-left: 0pt;counter-reset: d2 1; }
 #l8> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l9 {padding-left: 0pt;counter-reset: d2 1; }
 #l9> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l10 {padding-left: 0pt;counter-reset: d2 1; }
 #l10> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l11 {padding-left: 0pt;counter-reset: d3 1; }
 #l11> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="an708-setting-manufacturing-certificates/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">AN708: Setting Smart Energy Certificates for Zigbee Devices</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="an708-setting-manufacturing-certificates/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="205" height="1" alt="image" src="an708-setting-manufacturing-certificates/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="206" height="1" alt="image" src="an708-setting-manufacturing-certificates/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Provides an overview of Zigbee Smart Energy certificates, certificate components, certification authorities, and certification validation.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes the importance of matching all security data components.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Provides examples for programming the certificate into a device based on your target platform.</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">This application note gives an overview of the use of manufactur- ing certificates in a Smart Energy network. It also describes the components of a Smart Energy certificate and the differences be- tween test certificates and production certificates. It also explains (with the help of examples) how to use Simplicity Commander to program, verify, and erase Smart Energy certificates from the Sil- icon Labs Wireless Gecko (EFR32™) portfolio.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Refer to <i>AN1089: Using Installation Codes for Zigbee Devices </i>for how to use Simplicity Commander to program, verify, and erase installation codes with the Silicon Labs Wire- less Gecko (EFR32) portfolio.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Smart Energy Certificate Overview</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_005.png"/></span></p><ol id="l2"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Smart Energy Certificate Overview</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Zigbee uses public/private key technology to authenticate a device joining a Smart Energy network and provides a means to securely establish encryption keys for future transactions. The Smart Energy specification uses Elliptical Curve Cryptography (ECC) for crypto- graphic authentication and key generation.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="http://www.certicom.com/" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">Zigbee uses ECC with the key establishment cluster to derive a link key. It also uses ECC for creating digital signatures for software upgrade images sent through the Zigbee Over-the-Air (OTA) Upgrade cluster. Certicom </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">(www.certicom.com</span>) provides both the certifi- cates and the ECC technology for use in Zigbee Smart Energy networks.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Smart Energy 1.0 used an ECC curve 163k1 with a 48-byte certificate. Smart Energy 1.2 introduced use of the ECC curve 283k1 with a 74-byte certificate. The certificates are separate and unique and are not interoperable. However when both are present on the same device, they must contain the same 64-bit Extended Unique Identifier (EUI64). Devices may have one or both sets of security data in- stalled. The rules for what devices must have both certificates or what devices only need one certificate is governed by the Smart Ener- gy specification.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you are building a Smart Energy application for Great Britain&#39;s SMETS2 (Smart Metering Equipment Technical Specifications, 2nd generation) market, use of the ECC and CBKE libraries for the 163k1 (gen 1) elliptic curve is optional. Other geographies have different requirements for the ECC and CBKE libraries for the 163k1 (gen 1) elliptic curve or 283k1 (gen 2) elliptic curve. Contact Silicon Labs Technical Support if you are unsure about the ECC library requirements for your device&#39;s target market.</p><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><b>Note: </b>While the Silicon Labs Gecko Bootloader also makes use of ECC-based digital authentication with public and private key pairs for authenticating signed firmware images, Smart Energy certificates are not required to use signed images, nor is the Gecko Bootload- er required for Zigbee Smart Energy devices. For more information about the Gecko Bootloader and its security features, see <i>UG266: Silicon Labs Gecko Bootloader User’s Guide</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><h3 style="padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Security Components</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">When referring to Smart Energy certificates, there are actually three components that make up the ECC security data contained within a node:</p><ul id="l3"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Certificate</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Static Private Key</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">CA Public Key</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l4"><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark2">Certificate</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The first component of the ECC security data is the certificate. This is the device’s EUI64 and static public key, which are signed using the CA’s private key. The certificate is associated with a particular EUI64. <b>As a result, the EUI64 of the device must match the value contained in the certificate.</b></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Although this is part of the security data, it is not secret, and does not need to be handled in the same fashion as the private key. It is transmitted over the air during key establishment.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l5"><li><p class="s7" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark3">Smart Energy 1.0 Certificate</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Smart Energy 1.0 uses a 48-byte certificate. The following table summarizes the four different fields contained within the certificate body.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 183pt;text-indent: 0pt;text-align: center;">Table 2.1.  Smart Energy 1.0 Certificate Body Fields</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:161pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Field name</p></td><td style="width:84pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Length (bytes)</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:19pt"><td style="width:161pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Public Key Reconstruction Data</p></td><td style="width:84pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 36pt;padding-right: 35pt;text-indent: 0pt;text-align: center;">22</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Device’s public key signed by the CA’s private key.</p></td></tr><tr style="height:19pt"><td style="width:161pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Subject</p></td><td style="width:84pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Contains the EUI64 associated with the certificate, in big endian format.</p></td></tr><tr style="height:19pt"><td style="width:161pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Issuer</p></td><td style="width:84pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Identity of the CA that issued the certificate.</p></td></tr><tr style="height:30pt"><td style="width:161pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Attributes</p></td><td style="width:84pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 36pt;padding-right: 35pt;text-indent: 0pt;text-align: center;">10</p></td><td style="width:295pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;padding-right: 7pt;text-indent: 0pt;text-align: left;">An extra set of data associated with the device whose authenticity is guaranteed by the CA. It is not currently used by Zigbee Smart Energy.</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark4">Smart Energy 1.2 Certificate</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Smart Energy 1.2 uses a 74-byte certificate. The following table summarizes the four different fields contained within the certificate body.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 183pt;text-indent: 0pt;text-align: center;">Table 2.2.  Smart Energy 1.2 Certificate Body Fields</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Name</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Bytes</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Type</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">1</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Type of certificate = 0, implicit no extensions</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SerialNo</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">8</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Serial Number of the certificate</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Curve</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">1</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Curve identifier (sect283k1 is 13 or byte value 0x0D)</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Hash</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">1</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Hash identifier (AES-MMO is byte value 0x08)</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Issuer</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">8</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">8-byte identifier, EUI64</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ValidFrom</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">5</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">40-bit Unix time from which the certificate is valid</p></td></tr><tr style="height:30pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ValidTo</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">4</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;padding-right: 48pt;text-indent: 0pt;text-align: left;">32-bit # of seconds from the ValidFrom time for which the certificate is considered valid (0xFFFFFFFF = infinite)</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SubjectID</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">8</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">8-byte identifier, EUI64</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">KeyUsage</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 29pt;text-indent: 0pt;text-align: right;">1</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Bit flag indicating key usage (0x88 = digital signature or key agreement allowed)</p></td></tr><tr style="height:19pt"><td style="width:76pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">PublicKey</p></td><td style="width:65pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-right: 27pt;text-indent: 0pt;text-align: right;">37</p></td><td style="width:399pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">37-byte compressed public key value from which the public key of the Subject is reconstructed.</p></td></tr></table><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Security Components</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_006.png"/></span></p></li></ol></li><li><p class="s7" style="padding-top: 7pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark5">Static Private Key</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The second component of the ECC security data is the static private key. This is a secret piece of data that should be carefully protec- ted. Silicon Labs recommends that during the manufacturing process only those computers that need to know this data to program the device have access to it.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A Smart Energy 1.0 private key is 21 bytes in length. A Smart Energy 1.2 private key is 36 bytes in length.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark6">CA Public Key</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">This is the CA’s public key that corresponds to the secret private key held by Certicom. It is used to authenticate certificates received by remote devices and validate the keys derived using the Smart Energy Key Establishment Cluster. While it is not transmitted over the air, it is also public information and does not need to be kept secret.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">A Smart Energy 1.0 CA Public Key is 22 bytes in length. A Smart Energy 1.2 CA Public Key is 37 bytes in length.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Certificate Authorities</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_007.png"/></span></p></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark7">Certificate Authorities</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Two Certificate Authorities (CA) are provided by Certicom for use in Smart Energy networks:</p><ul id="l6"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">A Test CA that is intended only for use in internal development environments.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">The Production CA that is intended for use in real Smart Energy deployments.</p></li></ul><p class="s7" style="padding-top: 6pt;padding-left: 36pt;text-indent: 0pt;text-align: left;">Note: <span class="p">Certificates from the Test CA and the Production CA are </span>not compatible<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">There are two CAs because developers and installers have different security needs. Developers need to be able to test and debug devices where they will have access to the private keys. Their interests lie in having access to internal data in order to accomplish their goal of writing software. On the other hand, installers want reasonable assurances that a device will not have compromised security data. Their goal is to have a secure installation. Certicom can meet both needs by providing different security for each CA.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l7"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark8">Test CA</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="http://www.certicom.com/index.php/gencertregister" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">Certicom provides a Test CA for quickly and easily generating certificates for use in development units wishing to use ECC. The follow- ing link can be used to obtain certificates from the Test CA: </a><a href="http://www.certicom.com/index.php/gencertregister" class="s6" target="_blank">http://www.certicom.com/index.php/gencertregister.</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Silicon Labs provides two test certificates in their Smart Energy sample application, bound to EUI64 addresses 0022080000000001 and 0022080000000002. These may be used in combination with the Test CA to perform key establishment. They can be found in the sup- plemental ECC package (available upon request via the Silicon Labs Support Portal’s Software Releases tab) as certicom-test-cert-1.txt and certicom-test-cert-2.txt. The following is the CA Public Key for the Smart Energy 1.0 Test CA:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> 0200FDE8A7F3D1084224962A4E7C54E69AC3F04DA6B8                                                                     </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark9">Production CA</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The Production CA is the official CA that is used by all deployed devices. All manufactured devices should contain the Production CA’s public key, and a certificate and private key associated with the Production CA.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following is the Smart Energy 1.0 Production CA’s Public Key, which should be installed on production devices:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;"><span class="s10" style=" background-color: #D8D8D8;"> 0202264C5E4CBFA186A6B925B966B5B3A4D7A390344E                                                                     </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Production CAs are obtained through a different mechanism from Test CAs. Because manufacturing involves hundreds or potentially thousands of devices, a different process is used to obtain bulk certificates for a block of EUI64 addresses. In addition, security of the transmission of the private keys is much more important and thus is handled differently from the Test CA.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">It is recommended that a manufacturer obtain their own block of EUI64 addresses for production units instead of using each chip’s pre- programmed 64-bit MAC address (EUI64) from Silicon Labs’ address range. Certificates identify a Smart Energy device and its vendor, and a Silicon Labs chip may be used in many Smart Energy deployments. In addition, it is easier to issue certificates for blocks of EUI64 addresses.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Silicon Labs cannot guarantee a set of known EUI64 addresses with a particular set of chips, so it is recommended that the manufac- turer install their own to make it easier to manage them. Contact Certicom for more information about obtaining production certificates.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Certificate Validation</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_008.png"/></span></p></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark10">Certificate Validation</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">It is important to note that ECC uses a technology called <i>implicit certificates</i>. Traditional SSL certificates used on the Internet contain the unencrypted public key of the device along with a separate signature field that ensures the authenticity of the data. However, with implicit certificates, the two pieces of data are combined together to shrink the size of the certificate for use in embedded devices. This is known as <i>Public Key Reconstruction </i>data.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">As a result of the combination, it is not possible to verify an implicit certificate without using the certificate as part of the Key Establish- ment Cluster. Only by performing Key Establishment to derive a link key can a device determine if its certificate is valid.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Matching the Components</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_009.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark11">Matching the Components</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">It is important to note that the four pieces of security data installed for Smart Energy <b>must all match up correctly</b>. The installed certifi- cate must be the correct one for the private key that is also installed. The EUI64of the device must match the certificate that is installed. Lastly, the certificate must have been issued by the same CA whose public key is installed along with it.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">If any of the components is mismatched, the device will never be able to successfully perform key establishment to authenticate itself on a Smart Energy network.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l8"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark12">Manufacturing Test</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Silicon Labs recommends that manufacturers validate their process by testing the installed certificate in their first batch of devices. A full test involves successfully joining a Smart Energy network and using the key establishment cluster to derive a link key. The devices in the test should be using Production Certificates issued by the Production CA.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Silicon Labs’ SoC and Network Co-processor (NCP) platforms can all store application-specific manufacturing data into an area of flash that can be used to store unique device information. This information is write-once at run-time and is typically programmed via a Serial- Wire or JTAG debug adapter, although some NCP customers prefer to set this data during manufacturing via the EmberZNet Serial Protocol (EZSP). Refer to <i>UG100: EZSP Reference Guide </i>for information about the available commands for configuring the NCP. Note that some ICs may disallow modification of certain manufacturing data via run-time calls after the Read Protection of flash has already been enabled.</p><p class="s7" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Hard-coding a device’s unique information in source code does not work when using the same application image on multiple devices. The preferred alternative is to have the software read in the device’s unique information from the manufacturing area of flash.</span></p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Working with Certificates</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_010.png"/></span></p></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark13">Working with Certificates</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l9"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark14">Smart Energy 1.0 and 1.2 Certificates</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Smart Energy 1.0 used an ECC 163k1 curve with a 48-byte certificate. Smart Energy 1.2 added support for ECC 283k1 curve with a 74- byte certificate. The certificates and the libraries are not interoperable. The Zigbee specification requirements describe what devices must support both certificates and both sets of libraries.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark15">Overriding the Default EUI64</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">By default, a EUI64 address from Silicon Labs’ range is pre-programmed into all EFR32 chips. Customers may override this by writing their own EUI64 into the Custom EUI64 area of the manufacturing flash.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When programming certificates for EFR32-based devices, Simplicity Commander allows you to override the default EUI64. When a custom EUI64 is already present, the certificate or installation code <b>must use a EUI64 that matches the custom one</b>. See <i>UG162: Simplicity Commander User’s Guide </i>for using Simplicity Commander with EFR32 chips.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you do not want to override the EUI64, then the certificate must use the Silicon Labs EUI64, and that <b>EUI64 must match what is already programmed on the chip in the TOKEN_MFG_EMBER_EUI_64 field</b>. The tool prevents overriding EUI64 of the device with another EUI64 from Silicon Labs’ range in order to prevent duplicate EUI64s in the field.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The reason these requirements are in place is to prevent certificates from being programmed on the wrong device. The certificate is bound to the EUI64 of the device and therefore a mismatch will cause problems when deploying an end product.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To program a device with a certificate, the device must be connected via the debug cable to a supported debug adapter, such as the Silicon Labs Debug Adapter Kit (P/N: SLSDA001A) for EFR32-based devices. The tools provided with the Simplicity Commander instal- lation provide the basic elements needed to do this. The tool used for EFR32 platforms is commander.exe which is installed as an “adapter pack” by Simplicity Studio when you install the part support for the designated EFR32 chip.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark16">Verifying the Software Version on an EFR32</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">To verify that you have the correct version of the tools, open a command prompt, and change to the directory where Simplicity Commander is installed. The default for the Simplicity Studio installation of the Simplicity Commander adapter pack is:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> C:/SiliconLabs/SimplicityStudio/&lt;version&gt;/developer/adapter_packs/commander                                     </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Note: <span class="p">For installations under Mac OS, the “&lt;version&gt;” (v4 or v5) folder hierarchy will appear within the “Simplicity Studio.app” package.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">To verify the software version for Simplicity Commander, execute the following command<b>:</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> $ commander --version                                                                                            </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">You should see output similar to this:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Simplicity Commander 0v25p0b267</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">JLink DLL version: 6.14 EMDLL Version: 0v14p1b246 mbed TLS version: 2.2.0</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark17">Programming the Certificate into an EFR32</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l10"><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark18">Checking the Node Information</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Prior to modifying the certificate it is best to verify there is connectivity with the device to be programmed, and what information is cur- rently stored on the node. The <span class="s11">tokendump </span>command prints manufacturing token data as key-value pairs. Simplicity Commander sup- ports more than one group of tokens. In this example, the token group named ‘znet’ is used.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> $ commander tokendump --tokengroup znet                                                                          </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">You should see the following output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="756" alt="image" src="an708-setting-manufacturing-certificates/Image_011.png"/></span></p><p class="s11" style="padding-top: 5pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">#</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;"># The token data can be in one of three main forms: byte-array, integer, or string. # Byte-arrays are a series of hexadecimal numbers of the required length.</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;"># Integers are BIG endian hexadecimal numbers.</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;"># String data is a quoted set of ASCII characters. #</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;"># MFG_EMBER_EUI_64 : A8D417FEFF570B00 MFG_CUSTOM_VERSION : 0xFFFF MFG_CUSTOM_EUI_64 : FFFFFFFFFFFFFFFF MFG_STRING : &quot;&quot;</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_BOARD_NAME : &quot;&quot;</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_MANUF_ID : 0xFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">MFG_PHY_CONFIG : 0xFFFF MFG_SYNTH_FREQ_OFFSET: 0xFFFF MFG_CCA_THRESHOLD : 0xFFFF MFG_EZSP_STORAGE : FFFFFFFFFFFFFFFF MFG_CTUNE : 0xFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_XO_TUNE : 0xFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">MFG_LOCKBITS_PLW : 0x000000000000000000000000FFFFFFFF MFG_LOCKBITS_CLW0 : 0xFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">MFG_LOCKBITS_MLW : 0xFFFFFFFF MFG_LOCKBITS_ULW : 0xFFFFFFFF MFG_LOCKBITS_DLW : 0xFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">MFG_BOOTLOAD_AES_KEY : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MFG_SECURITY_CONFIG : 0xFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">MFG_ASH_CONFIG[0] : 0xFFFF MFG_ASH_CONFIG[1] : 0xFFFF MFG_ASH_CONFIG[2] : 0xFFFF MFG_ASH_CONFIG[3] : 0xFFFF MFG_ASH_CONFIG[4] : 0xFFFF MFG_ASH_CONFIG[5] : 0xFFFF MFG_ASH_CONFIG[6] : 0xFFFF MFG_ASH_CONFIG[7] : 0xFFFF MFG_ASH_CONFIG[8] : 0xFFFF MFG_ASH_CONFIG[9] : 0xFFFF MFG_ASH_CONFIG[10] : 0xFFFF MFG_ASH_CONFIG[11] : 0xFFFF MFG_ASH_CONFIG[12] : 0xFFFF MFG_ASH_CONFIG[13] : 0xFFFF MFG_ASH_CONFIG[14] : 0xFFFF MFG_ASH_CONFIG[15] : 0xFFFF MFG_ASH_CONFIG[16] : 0xFFFF MFG_ASH_CONFIG[17] : 0xFFFF MFG_ASH_CONFIG[18] : 0xFFFF MFG_ASH_CONFIG[19] : 0xFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">#&#39;MFG_CBKE_DATA (Smart Energy CBKE)&#39; token group</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Implicit Cert : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CA Public Key : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Device Private Key : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;text-align: left;"># CBKE Flags : 0xFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_INSTALLATION_CODE (Smart Energy Install Code)&#39; token group # Install Code Flags : 0xFFFF</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">Install Code : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF # CRC : 0xFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="263" alt="image" src="an708-setting-manufacturing-certificates/Image_012.png"/></span></p><p class="s11" style="padding-top: 5pt;padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_SECURE_BOOTLOADER_KEY (Manufacture token space for storing secure bootloader key.)&#39; token group MFG_SECURE_BOOTLOADER_KEY : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">#&#39;MFG_CBKE_283K1_DATA (Smart Energy 1.2 CBKE)&#39; token group</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Implicit Cert (283k1) : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CA Public Key (283k1) : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Private Key (283k1) : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF # CBKE FLAGS (283k1) : 0xFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_SIGNED_BOOTLOADER_KEY_X (Manufacture token space for storing ECDSA signed bootloader key (X-point).)&#39; token group</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">MFG_SIGNED_BOOTLOADER_KEY_X : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_SIGNED_BOOTLOADER_KEY_Y (Manufacture token space for storing ECDSA signed bootloader key (Y-point).)&#39; token group</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 215%;text-align: left;">MFG_SIGNED_BOOTLOADER_KEY_Y : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DONE</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">The pre-programmed EUI64 is read out by executing the following command.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">commander tokendump --tokengroup znet --token MFG_EMBER_EUI_64 #</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;"># The token data can be in one of three main forms: byte-array, integer, or string. # Byte-arrays are a series of hexadecimal numbers of the required length.</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;text-align: left;"># Integers are BIG endian hexadecimal numbers.</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;"># String data is a quoted set of ASCII characters. #</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;text-align: left;"># MFG_EMBER_EUI_64: A8D417FEFF570B00</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">DONE</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 4pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark19">Format of the Certificate File</a></p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">If programming both a Smart Energy 1.0 and a Smart Energy 1.2 certificate the two files may be combined into one.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l11"><li><p class="s7" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark20">Smart Energy 1.0</a></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="72" alt="image" src="an708-setting-manufacturing-certificates/Image_013.png"/></span></p><p class="s11" style="text-indent: 0pt;text-align: left;">03045fdfc8d85ffb8b3993cb72ddcaa55f00b3e87d6d0000000000000001544553545345434101090006000000000000</p><p class="s11" style="text-indent: 0pt;line-height: 107%;text-align: left;">Device Private Key: 00b8a900fcadebabbfa383b540fce9ed438395eaa7 MFG_CUSTOM_EUI_64: 0000000000000001</p><p style="text-indent: 0pt;text-align: left;"/><p class="s11" style="text-indent: 0pt;text-align: left;">Cert:</p><p style="text-indent: 0pt;text-align: left;"/><p class="s11" style="text-indent: 0pt;line-height: 107%;text-align: left;">CA Public Key: 0200fde8a7f3d1084224962a4e7c54e69ac3f04da6b8 Device Implicit</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To program a Smart Energy 1.0 certificate into the tokens, it is necessary to create a simple text file with the security information in it. The following is the format of the file expected by Simplicity Commander for Smart Energy 1.0 certificates. Note, however, that Simplici- ty Commander does not automatically update the EUI64 address of the device automatically, so you must specify this manually in the token file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 4pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark21">Smart Energy 1.2</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To program a Smart Energy 1.2 certificate into the tokens, it is necessary to create a simple text file with the security information in it. The following is the format of the file expected by Simplicity Commander for Smart Energy 1.2 certificates. Note, however, that Simplici- ty Commander does not automatically update the EUI64 address of the device automatically, so you must specify this manually in the token file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">CA Public Key (283k1): 0207a445022d9f39f49bdc38380026a27a9e0a1799313ab28c5c1a1c6b605154db1dff6752 Device Implicit Cert (283k1): 00602a3c32e55a8acf0d081112131415161718005320c3a6ffffffff0000000000000001080201d4d1887cd727e195300</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">c9a11c4b6cd82d37f36381bc3707a05b8f01b73d236d3a59ee9</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Private Key (283k1): 000071ab965eeedfa9ad08370fed7dc7b1e7d0940c9f3917a23b2cdb16afd2402ade31a5 MFG_CUSTOM_EUI_64: 0000000000000001</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/></li></ol></li><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark22">Writing the Certificate into the Manufacturing Area</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Simplicity Commander does not automatically update the custom EUI64 address to match the certificate, so you need to make sure that these are in sync. This can be accomplished by adding it to the text file with the certificate (<span class="s11">sample_cert.txt </span>in the example).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> $ commander flash --tokengroup znet --tokenfile sample_cert.txt                                                 </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">You should see the following output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">Writing 2048 bytes starting at address 0x0fe04000 Comparing range 0x0FE04000 - 0x0FE047FF (2 KB) Programming range 0x0FE04240 - 0x0FE0435F (288 Bytes) Verifying range 0x0FE04000 - 0x0FE047FF (2 KB)</p><p class="s11" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">DONE</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/></li><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark23">Verifying the Stored Certificate</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">After writing the certificate, it is best to verify the information by executing the following command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> $ commander tokendump --tokengroup znet                                                                          </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">You should see the following output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="834" alt="image" src="an708-setting-manufacturing-certificates/Image_014.png"/></span></p><p class="s11" style="padding-top: 5pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">#</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;"># The token data can be in one of three main forms: byte-array, integer, or string. # Byte-arrays are a series of hexadecimal numbers of the required length.</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;"># Integers are BIG endian hexadecimal numbers.</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;"># String data is a quoted set of ASCII characters. #</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;"># MFG_EMBER_EUI_64 : E33409FEFF570B00 MFG_CUSTOM_VERSION : 0xFFFF MFG_CUSTOM_EUI_64 : FFFFFFFFFFFFFFFF MFG_STRING : &quot;&quot;</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_BOARD_NAME : &quot;&quot;</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_MANUF_ID : 0xFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">MFG_PHY_CONFIG : 0xFFFF MFG_SYNTH_FREQ_OFFSET: 0xFFFF MFG_CCA_THRESHOLD : 0xFFFF MFG_EZSP_STORAGE : FFFFFFFFFFFFFFFF MFG_CTUNE : 0x7BF0</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_XO_TUNE : 0xFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">MFG_LOCKBITS_PLW : 0x000000000000000000000000FFFFFFFF MFG_LOCKBITS_CLW0 : 0xFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">MFG_LOCKBITS_MLW : 0xFFFFFFFF MFG_LOCKBITS_ULW : 0xFFFFFFFF MFG_LOCKBITS_DLW : 0xFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">MFG_BOOTLOAD_AES_KEY : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MFG_SECURITY_CONFIG : 0xFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: justify;">MFG_ASH_CONFIG[0] : 0xFFFF MFG_ASH_CONFIG[1] : 0xFFFF MFG_ASH_CONFIG[2] : 0xFFFF MFG_ASH_CONFIG[3] : 0xFFFF MFG_ASH_CONFIG[4] : 0xFFFF MFG_ASH_CONFIG[5] : 0xFFFF MFG_ASH_CONFIG[6] : 0xFFFF MFG_ASH_CONFIG[7] : 0xFFFF MFG_ASH_CONFIG[8] : 0xFFFF MFG_ASH_CONFIG[9] : 0xFFFF MFG_ASH_CONFIG[10] : 0xFFFF MFG_ASH_CONFIG[11] : 0xFFFF MFG_ASH_CONFIG[12] : 0xFFFF MFG_ASH_CONFIG[13] : 0xFFFF MFG_ASH_CONFIG[14] : 0xFFFF MFG_ASH_CONFIG[15] : 0xFFFF MFG_ASH_CONFIG[16] : 0xFFFF MFG_ASH_CONFIG[17] : 0xFFFF MFG_ASH_CONFIG[18] : 0xFFFF MFG_ASH_CONFIG[19] : 0xFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">#&#39;MFG_CBKE_DATA (Smart Energy CBKE)&#39; token group</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Implicit Cert : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CA Public Key : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Device Private Key : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;"># CBKE Flags : 0xFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_INSTALLATION_CODE (Smart Energy Install Code)&#39; token group # Install Code Flags : 0xFFFF</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">Install Code : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF # CRC : 0xFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_SECURE_BOOTLOADER_KEY (Manufacture token space for storing secure bootloader key.)&#39; token group MFG_SECURE_BOOTLOADER_KEY : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">#&#39;MFG_CBKE_283K1_DATA (Smart Energy 1.2 CBKE)&#39; token group</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Device Implicit Cert (283k1) :</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="185" alt="image" src="an708-setting-manufacturing-certificates/Image_015.png"/></span></p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">00602A3C32E55A8ACF0D081112131415161718005320C3A6FFFFFFFF0000000000000001080201D4D1887CD727E195300C9A11C4B6CD82D37F36381 CA Public Key (283k1) : 0207A445022D9F39F49BDC38380026A27A9E0A1799313AB28C5C1A1C6B605154DB1DFF6752</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Private Key (283k1) : 000071AB965EEEDFA9AD08370FED7DC7B1E7D0940C9F3917A23B2CDB16AFD2402ADE31A5 # CBKE FLAGS (283k1) : 0x00</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_SIGNED_BOOTLOADER_KEY_X (Manufacture token space for storing ECDSA signed bootloader key (X-point).)&#39; token group</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">MFG_SIGNED_BOOTLOADER_KEY_X : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">#&#39;MFG_SIGNED_BOOTLOADER_KEY_Y (Manufacture token space for storing ECDSA signed bootloader key (Y-point).)&#39; token group</p><p class="s11" style="padding-left: 24pt;text-indent: 0pt;line-height: 215%;text-align: left;">MFG_SIGNED_BOOTLOADER_KEY_Y : FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DONE</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Erasing the Certificate on an EFR32</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an708-setting-manufacturing-certificates/Image_016.png"/></span></p></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark24">Erasing the Certificate on an EFR32</a></h3></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">If the wrong device is programmed with a certificate, or it is necessary to remove this security data from the device. To erase a certifi- cate, execute this command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 21pt;text-indent: 0pt;text-align: left;"><span class="s10" style=" background-color: #D8D8D8;"> $ commander flash --tokenfile sample_erase_cert.txt --tokengroup znet                                           </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">You should see the following output:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">Writing 2048 bytes starting at address 0x0fe04000 Comparing range 0x0FE04000 - 0x0FE047FF (2 KB) Erasing range 0x0FE04240 - 0x0FE0435F (288 Bytes) Verifying range 0x0FE04000 - 0x0FE047FF (2 KB) DONE</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Smart. Connected. Energy-Friendly.</h4><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Products</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products">www.silabs.com/products</a></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality">www.silabs.com/quality</a></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s13" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 64pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="767" height="695" alt="image" src="an708-setting-manufacturing-certificates/Image_017.png"/></span></p><p class="s14" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s15" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s14" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s15" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z- Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="an708-setting-manufacturing-certificates/Image_018.png"/></span></p><p class="s14" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s14" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
