<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>AN716: Instructions for Using Image-Builder</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s4 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s5 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .p, p { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; margin:0pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s8 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s11 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 a { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s12 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s13 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s14 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: d2 1; }
 #l3> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l4 {padding-left: 0pt;counter-reset: d3 1; }
 #l4> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l5 {padding-left: 0pt;counter-reset: d3 1; }
 #l5> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="an716-image-builder-instructions/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">AN716: Instructions for Using Image- Builder</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="an716-image-builder-instructions/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="163" height="1" alt="image" src="an716-image-builder-instructions/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="163" height="1" alt="image" src="an716-image-builder-instructions/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Displaying OTA files</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Creating an OTA file</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Extracting tags from an OTA file</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Image-builder is Silicon Labs’ tool for creating Zigbee over-the-air (OTA) bootloader files for use with all Silicon Labs EFR32MGx platforms. It takes one or more files and wraps them in the file format as declared in the Zigbee specification. This application note provides complete instructions for creating OTA files using Image-builder.</p><p class="s4" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Overview</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an716-image-builder-instructions/Image_005.png"/></span></p><ol id="l2"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Overview</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">Image-builder is Silicon Labs’ tool for creating Zigbee over-the-air (OTA) bootloader files. It takes one or more files and wraps them in the file format,as declared in the Zigbee specification. The files it wraps are normally bootloader files (such as GBL).</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Image-builder comes in two versions: one with Elliptical Curve Cryptography (ECC) and one without ECC. Due to U.S. export regula- tions, the version with ECC may not be distributed to certain countries. Silicon Labs distributes the version without ECC with the normal stack releases, but only distributes the version with ECC through the Silicon Labs ZigBee support portal. The non-ECC version of the tool can do everything that the ECC version can, except creating and verifying ECDSA signatures.</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">For more information about Zigbee over-the-air please see the Over-the-Air Upgrade Plugins section in <i>UG391: Zigbee Application Framework Developer&#39;s Guide</i>, provided with the EmberZNet stack release.</p><p class="s4" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Help</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an716-image-builder-instructions/Image_006.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Help</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Running Image-builder without arguments produces the program’s command line interface syntax.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="501" alt="image" src="an716-image-builder-instructions/Image_007.png"/></span></p><p style="padding-top: 5pt;padding-left: 24pt;text-indent: 0pt;line-height: 107%;text-align: left;">image-builder Copyright 2013 Silicon Laboratories, Inc. Version: 1.5.1</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">ECC signature support present.</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 20pt;text-align: left;">Usage: image-builder &lt;operation&gt; [ &lt;additional arguments&gt; ] Print operation: Arguments for printing OTA header information</p><p style="padding-left: 24pt;text-indent: 9pt;line-height: 107%;text-align: left;">-p, --print=&lt;filename|directory&gt; print either (1) the OTA header of the specified file, or (2) all OTA files found in the directory.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: center;">Create operation: Arguments for creating OTA files</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: center;">-c, --create=&lt;filename&gt;        create OTA file</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: center;">-v, --version=&lt;4-bytes-hex&gt;    firmware version</p><p style="padding-left: 24pt;text-indent: 0pt;text-align: center;">-m, --manuf-id=&lt;2-bytes-hex&gt;   manufacturer ID</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-i, --image-type=&lt;2-bytes-hex&gt; image type ID</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-s, --stack-version=&lt;2-bytes&gt; zigbee stack version (optional)</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--string=&lt;text&gt; header string text (optional)</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--min-hw-ver=&lt;2-bytes-hex&gt; Minimum hardware version (optional)</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--max-hw-ver=&lt;2-bytes-hex&gt; Maximum hardware version (optional)</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--upgrade-dest=&lt;8-bytes-hex-big-endian&gt; The EUI64 of the device the file is intended for (optional)</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-t, --tag-id=&lt;2-bytes-hex&gt; tag identifier</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-l, --tag-length=&lt;32-bit length&gt; length of dummy data for tag</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-f, --tag-file=&lt;filepath&gt; file to include or extract as data with associated tag</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--security-credentials=&lt;1-byte-hex&gt; The security credentials required for this upgrade.</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--test-sign=&lt;crypto-suite-number&gt; Sign the image with the built-in security key</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--sign=&lt;filename&gt; Sign using certificate and private key from file (or stdin)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Extract operation: Extract tags from an OTA file</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-x, --extract=&lt;filename&gt; Extract tags from the specified OTA file</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-t, --tag-id=&lt;2-bytes-hex&gt; tag identifier</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-f, --tag-file=&lt;filepath&gt; file to include or extract as data with associated tag</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">EBL operation: Arguments for manipulating EBLs</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--ebl-print=&lt;filename&gt; Print the contents of an EBL</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">Help operation</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">-h, --help display this usage and exit</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;">--help-signing Print syntax for signing certificate files</p><p class="s4" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Displaying OTA Files</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an716-image-builder-instructions/Image_008.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark2">Displaying OTA Files</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="423" alt="image" src="an716-image-builder-instructions/Image_009.png"/></span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Using Certicom TEST CA issued certificate. Message Digest: E26A886E8030458DA084586F2DCB08A2</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Signature is valid Found 1 files.</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(&gt;)000D6F0000198B36</p><p style="padding-left: 14pt;text-indent: 0pt;line-height: 107%;text-align: justify;">01C2C31CB8C40064 EABB3189AD8969EA C25893183A023BD2 8D5FB2134D3E07B9 2E06A258E478D20C 7ACC</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(ECDSA Signature)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0001</p><p style="text-indent: 0pt;text-align: left;">50 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(&gt;)5445535453454341 (Certicom TEST CA)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 9pt;line-height: 107%;text-align: left;">Issuer: ID:</p><p style="padding-left: 9pt;text-indent: -9pt;line-height: 107%;text-align: left;">Length: Signer:</p><p style="padding-left: 14pt;text-indent: 0pt;text-align: left;">Data:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">Subject: (&gt;)000D6F0000198B36</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(ECDSA Signing Certificate)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(Manufacturer Specific)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0xF000</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">10 bytes 0x0002</p><p style="text-indent: 0pt;text-align: left;">48 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0BEEF11E</p><p style="text-indent: 0pt;text-align: left;">0x0100</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">56 bytes 0x0000 0x1002 0x5678 0x00000005 0x0002</p><p style="text-indent: 0pt;text-align: left;">The latest and greatest upgrade.</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">182 bytes 3</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Magic Number: Header Version: Header Length: Field Control: Manufacturer ID: Image Type: Firmware Version: Stack Version: Header String: Total Image Size: Total Tags:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">ID:</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 107%;text-align: left;">Length: ID:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">Length:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">bash$ ./image-builder-ecc -p app/framework/plugin/ota-storage-simple-ram/ota-static-sample.ota image-builder (C) 2013 by Silicon Labs</p><p style="text-indent: 0pt;text-align: left;">Version: 1.4.1</p><p style="text-indent: 0pt;text-align: left;">ECC signature support present.</p><p style="text-indent: 0pt;text-align: left;">File: app/framework/plugin/ota-storage-simple-ram/ota-static-sample.ota</p><p style="text-indent: 0pt;text-align: left;"/><p class="s5" style="text-indent: 0pt;text-align: right;">You can see the contents of OTA files by using the <span class="p">–p </span>command-line option. An example of the contents of an OTA file is shown below.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark3">Creating an OTA File</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">To create an OTA file you need to first decide the parameters of the firmware image that will be embedded in the OTA file.</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The basic build parameters are <span class="p">Manufacturer ID</span>, <span class="p">Image Type Id</span>, and <span class="p">Version</span>. Together these form a unique identifier to denote the image for all OTA servers that serve up the file to clients.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l3"><li><p class="s7" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark4">Manufacturer ID</a></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The manufacturer ID is the Zigbee-assigned value that is unique to the manufacturer. For example, the Silicon Labs manufacturer ID is 0x1049. Manufacturers must contact the Zigbee Alliance to obtain their own manufacturer ID.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark5">Image Type ID</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The image type ID is an identifier to indicate the specific product group to which the update applies. For example, if your company manufactures light switches and thermostats, which required different flavors of software, you would use different image type IDs to indicate whether the upgrade is for a light switch or a thermostat.</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Zigbee has specified a few values, but the rest (0x0000-0xFFBF) are open to each manufacturer’s interpretation. The manufacturer- specific values for the image type are unique to each manufacturer ID. Therefore different vendors may use the same image type ID within the manufacturer-specific range without a conflict. The image type ID values are shown in the following table.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 24pt;text-indent: 0pt;text-align: center;">Table 4.1.  Image Type ID Values</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Image Type ID</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0000 – 0xffbf</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Manufacturer Specific</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0xffc0</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Security credential</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0xffc1</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Configuration</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0xffc2</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Log</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0xffc3 – 0xfffe</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reserved (unassigned)</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0xffff</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reserved: wild card</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark6">Version</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Version is the software version that is associated with the file or files that are wrapped in the OTA package. This version is used by the OTA cluster to query when a new software update is ready. In general it is recommended that this be an increasing number for each new software version. However, you are free to use whatever scheme you would like. For example, our version number is enco- ded as hexadecimal digits, so version 4.2.0 build 1 would be 0x00004201.</p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark7">Tags</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Tags are blobs of data inside the OTA file that are interpreted by the device receiving and processing the update. A few tags are de- fined and global to all devices, such as the ECDSA Signature Tag and the ECDSA Signer Certificate tag. However, tags can be manu- facturer-specific and contain information only pertinent to certain devices that know how to handle them. Each tag is labeled with an identification number. The list of identification numbers is specified by the OTA cluster, as shown in the following table.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 24pt;text-indent: 0pt;text-align: center;">Table 4.2.  Tag Identifiers</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Identification Number</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0000</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Upgrade Image</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0001</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ECDSA Signature</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0002</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ECDSA Signing Certificate</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0003</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Image Integrity Code</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0004</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Picture Data</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0005</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ECDSA 283K1 Signature</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0006</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ECDSA 283K1 Signing Certificate</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0007 – 0xefff</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reserved by Zigbee</p></td></tr><tr style="height:19pt"><td style="width:269pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0xf000 – 0xffff</p></td><td style="width:271pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s9" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Manufacturer Specific Use</p></td></tr></table><p class="s5" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">An OTA file should have at least one tag containing data that is of use to the client receiving the file. There is no limit to the maximum number of tags in the file. The main upgrade file (such as the GBL file) is normally specified as tag 0x0000 (upgrade file), but this is not required by the specification. The OTA cluster code looks for this tag when passing this data to the bootloader of the device.</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark16" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">A NULL upgrade file is used for many of the Zigbee over-the-air bootload cluster certification tests. This is a small file that contains no upgrade code and will not be passed to the bootloader. However the OTA cluster code will download and process it. These files should be specified with a tag OTHER than 0x0000 (upgrade image) inside of them. They may in fact contain no tags and the OTA client code will not process them. Instructions for creating a NULL upgrade file are provided in the section </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">4.7 Special OTA Files</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark8">String</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The OTA header string is a human readable string that indicates what the upgrade file is and who it is for. This string is not used by the OTA cluster code and it is only for display purposes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark9">Signing</a></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The Zigbee Smart Energy Profile requires that OTA files be signed by the manufacturer. Downloaded files must be validated by the OTA client prior to installation. When images are signed the signer’s certificate is included automatically as a tag in the file, and a signa- ture tag is added as the last tag in the file.</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Files can be signed in two ways: using a built-in test certificate and using a user-supplied certificate.</p><ol id="l4"><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark10">Built-in Test Certificate</a></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Image-builder contains a built-in test certificate that can be used to sign images with the --test-sign option. This certificate is not inten- ded for production use. It is provided as a sample to allow signing and verification to be done in development environments. This built-in certificate used by the tool is automatically accepted by the default Simplicity Studio AppBuilder configuration for the plugin OTA Client.</p><p class="s7" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Note: <a href="#bookmark15" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Silicon Labs strongly recommends that manufacturers do NOT use the built-in test certificate to generate production images to be shipped to deployed, production device. See </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">4.6.2 User-Supplied Certificates </span><span class="s5">below.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Production signer certificates must be handled differently than test certificates. For more information on this topic please see the Over- the-Air Upgrade Plugins section in Chapter 15 of document in <i>UG391: Zigbee Application Framework Developer&#39;s Guide</i>, provided with the EmberZNet PRO stack release.</p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Example Using the Built-in Test Certificate</p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="449" alt="image" src="an716-image-builder-instructions/Image_010.png"/></span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Using Certicom TEST CA issued certificate. Message Digest: 77CA8B210A9AAE225CCA7736AFABE0A8</p><p style="text-indent: 0pt;text-align: left;">Signature is valid</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">7EE3A313A7D9D2ED</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">8523BD2759CB1E7F A338</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 14pt;text-indent: -14pt;line-height: 107%;text-align: left;">(&gt;)000D6F0000198B36 03ECE34CF26E86E3</p><p style="padding-left: 14pt;text-indent: 0pt;text-align: left;">3C01FA1230029AF9</p><p style="padding-left: 14pt;text-indent: 0pt;text-align: left;">41D045109AAABDDB</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(ECDSA Signature)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0001</p><p style="text-indent: 0pt;text-align: left;">50 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(&gt;)5445535453454341 (Certicom TEST CA)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 9pt;line-height: 107%;text-align: left;">Issuer: ID:</p><p style="padding-left: 9pt;text-indent: -9pt;line-height: 107%;text-align: left;">Length: Signer:</p><p style="padding-left: 14pt;text-indent: 0pt;text-align: left;">Data:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">Subject: (&gt;)000D6F0000198B36</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(ECDSA Signing Certificate)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0002</p><p style="text-indent: 0pt;text-align: left;">48 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">111872 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(Upgrade Image)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0000</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0BEEF11E</p><p style="text-indent: 0pt;text-align: left;">0x0100</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">56 bytes 0x0000 0x1002 0x5678 0x00000005 0x0002</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">EFR32 uart fifo ecc tokens 112044 bytes</p><p style="text-indent: 0pt;text-align: left;">3</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Magic Number: Header Version: Header Length: Field Control: Manufacturer ID: Image Type: Firmware Version: Stack Version: Header String: Total Image Size: Total Tags:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">ID:</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 107%;text-align: left;">Length: ID:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">Length:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">bash$ ./image-builder-ecc --create test.ota --manuf-id 0x1002 --image-type 0x5678 --version 0x00000005 --  string &quot;EFR32 uart fifo ecc tokens&quot; --tag-id 0x0000 --tag-file uart-fifo-ecc-tokens.gbl --test-sign</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">image-builder (C) 2013 by Silicon Labs Version: 1.4.1</p><p style="text-indent: 0pt;text-align: left;">ECC signature support present.</p><p style="text-indent: 0pt;text-align: left;">WARNING: Using internal test key and certificate.</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">WARNING: Using weak random number generator. Use &#39;--sign&#39; for more secure generator. File: test.ota</p><p style="text-indent: 0pt;text-align: left;"/><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The following is an example of creating an OTA file and signing using the built-in test certificate.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark11">User-Supplied Certificates</a><a name="bookmark15">&zwnj;</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Image-builder also allows users to supply their own certificates to sign their OTA files with the <span class="p">--sign &lt;filename&gt; </span>option. The certifi- cate can be either 163k1 or 283k1. The certificates may either be test certificates issued from the Certicom Test CA, or production certificates issued from the Certicom Production CA. For details about obtaining and modifying a test certificate from Certicom, see document <i>AN714: Smart Energy ECC-Enabled Device Setup Process</i>.</p><p class="s7" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Note: <span class="s5">Silicon Labs strongly recommends that manufactures use their own certificates issued from the Certicom Production CA to sign production images to be shipped to deployed, production devices.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The user-supplied certificates may either be supplied from a text file on disk, or through the command-line STDIN. To provide the data using STDIN, use the <span class="p">--sign </span>option with the special filename stdin. The program reads data from STDIN, expecting the same format as a file on disk. The format for both the file on disk and STDIN is as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;"># Comment lines begin with a ‘#’ and are ignored Certificate: &lt;48-byte hexadecimal array&gt;</p><p style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Private Key: &lt;21-byte hexadecimal array&gt;</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p class="s5" style="padding-top: 6pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Alternatively, the certificate files supported by Simplicity Commander are also accepted, as follows:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">Device Implicit Cert: &lt;48-byte hex array&gt; Device Private Key: &lt;21-byte hex array&gt;</p><p style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;"># These two parameters are ignored, as they are not used by the image-builder tool. CA Public Key: &lt;22-byte hex array&gt;</p><p style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Device Public key: &lt;22-byte hex array&gt;</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Note: <span class="s5">Array data must be specified on the same continuous line, with a carriage return only at the end.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Image-builder reads the data from the text file (or stdin), parses the values to make sure they are formatted correctly, and then uses the data to sign the image. Below is an example of a text file with a user-supplied certificate.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Certificate:0307834a5cfa185ee9c9550a6561212af7082ef6d319000d6f000092e04e544553545345434100000000000000000000</p><p style="padding-left: 2pt;text-indent: 0pt;text-align: left;">Private Key:02032ed11b3ceeddae99ce00e23bc54564d16b18ea</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p class="s7" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Example Using User-Supplied Certificates</p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="393" alt="image" src="an716-image-builder-instructions/Image_011.png"/></span></p><p style="text-indent: 0pt;text-align: left;">(&gt;)000D6F000092E04E</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(ECDSA Signature)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0001</p><p style="text-indent: 0pt;text-align: left;">50 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(&gt;)5445535453454341 (Certicom TEST CA)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 9pt;line-height: 107%;text-align: left;">Issuer: ID:</p><p style="padding-left: 9pt;text-indent: -9pt;line-height: 107%;text-align: left;">Length: Signer:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">Subject: (&gt;)000D6F000092E04E</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(ECDSA Signing Certificate)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0002</p><p style="text-indent: 0pt;text-align: left;">48 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">111872 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(Upgrade Image)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0000</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0BEEF11E</p><p style="text-indent: 0pt;text-align: left;">0x0100</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">56 bytes 0x0000 0x1002 0x5678 0x00000005 0x0002</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">EFR32 uart fifo ecc tokens 112044 bytes</p><p style="text-indent: 0pt;text-align: left;">3</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Magic Number: Header Version: Header Length: Field Control: Manufacturer ID: Image Type: Firmware Version: Stack Version: Header String: Total Image Size: Total Tags:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">ID:</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 107%;text-align: left;">Length: ID:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">Length:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: justify;">$ ./image-builder-ecc --create test.ota --manuf-id 0x1002 --image-type 0x5678 --version 0x00000005 --string &quot;EFR32 uart fifo ecc tokens&quot; --tag-id 0x0000 --tag-file uart-fifo-ecc-tokens.gbl --sign user-supplied-cert.txt image-builder (C) 2013 by Silicon Labs</p><p style="text-indent: 0pt;text-align: justify;">Version: 1.4.1</p><p style="text-indent: 0pt;text-align: justify;">ECC signature support present.</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Using user supplied key and certificate.  Using Certicom TEST CA issued certificate. Using /dev/random for random number generation</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Gathing sufficient entropy... (may take up to a minute)... File: test.ota</p><p style="text-indent: 0pt;text-align: left;"/><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following is an example of creating an OTA file and signing using a user-supplied certificate.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="82" alt="image" src="an716-image-builder-instructions/Image_012.png"/></span></p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Using Certicom TEST CA issued certificate. Message Digest: 040797A3C2BC13BC04D1B5C661E4D877</p><p style="text-indent: 0pt;text-align: left;">Signature is valid</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">03E9F2CE826C4CB9 B734BBA2933F1F27</p><p style="text-indent: 0pt;text-align: left;">3485DDE831030C78 F214589E1C46EB9D</p><p style="text-indent: 0pt;text-align: left;">7C50C3FFA300D4C1 8C40</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">Data:</p><p style="text-indent: 0pt;text-align: left;"/></li><li><p class="s7" style="padding-top: 4pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark12">AppBuilder Integration</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In order for the device to accept an image signed using a user-supplied certificate, the EUI64 of that signer must be specified to the OTA client plugin. On the AppBuilder Plugins tab, select the OTA Bootload Cluster Client plugin. If the plugin is not enabled, on the ZCL Clusters tab, find the Over-the-Air Bootloading cluster and check Client.</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">In the OTA Bootload Cluster Client plugin, under the Options, change the Image Signer EUI64 0 value to the EUI64 of the primary signer, as shown in the following figure. If other EUI64s are used for signing, then change Image Signer EUI64 1 and Image Signer EUI64 2 to reflect the values of the other two signers’ EUI64s.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 63pt;text-indent: 0pt;text-align: left;"><span><img width="622" height="451" alt="image" src="an716-image-builder-instructions/Image_013.jpg"/></span></p><p class="s7" style="padding-top: 4pt;text-indent: 0pt;text-align: right;">Figure 4.1. AppBuilder Plugins Interface Example</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="text-indent: 0pt;text-align: right;">By default, AppBuilder uses the EUI64 of the built-in test certificate for Image Signer EUI64 0.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s7" style="padding-top: 6pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark13">Special OTA Files</a><a name="bookmark16">&zwnj;</a></p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">This section details certain configurations that apply to various special OTA files.</p><ol id="l5"><li><p class="s7" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark14">Null OTA Files</a></p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The certification process for the Zigbee Over-the-Air Bootload cluster client requires that the manufacturer provides a NULL upgrade file to the test house for testing. A NULL OTA upgrade file does not contain an actual upgrade image inside it (such as a GBL). It is much smaller than a full upgrade image, but otherwise the same as a normal Zigbee OTA file. Some of the certification tests performed by the test house use the NULL file as a way of speeding up the testing process.</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">NULL upgrade files can be created using Image-builder with the <span class="p">--tag-length </span>option instead of the <span class="p">--tag-file </span>option. The value passed to <span class="p">--tag-length </span>is usually something small, such as 10. This option generates a sequence of bytes incrementing from 0 based on the length passed in. When creating the files, you should provide a tag ID other than 0x0000, which Zigbee has defined as “Upgrade Image”. This step prevents confusion between a real upgrade file and a NULL upgrade file. If both files have the same tag ID it is diffi- cult to tell them apart. However, the Gecko Bootloader will never try to bootload a NULL upgrade file. It always verifies that the data is a valid GBL file before bootloading it.</p><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">NULL files can optionally be signed in the same way as regular OTA files. If the signature is present the OTA Client Policy plugin soft- ware will verify it before examining the contents to see if the file contains a NULL image.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="254" alt="image" src="an716-image-builder-instructions/Image_014.png"/></span></p><p style="text-indent: 0pt;text-align: left;">(Manufacturer Specific)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0xFFFF</p><p style="text-indent: 0pt;text-align: left;">10 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0BEEF11E</p><p style="text-indent: 0pt;text-align: left;">0x0100</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">56 bytes 0x0000 0x1002 0x5678 0x00000005 0x0002</p><p style="text-indent: 0pt;text-align: left;">NULL upgrade file</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">72 bytes 1</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Magic Number: Header Version: Header Length: Field Control: Manufacturer ID: Image Type: Firmware Version: Stack Version: Header String: Total Image Size: Total Tags:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">ID:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">Length:</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">$ ./image-builder --create null-file.ota --version 0x00000005 --manuf-id 0x1002 --image-type 0x5678 --string &quot;NULL upgrade file&quot; --tag-id 0xfffff --tag-length 10</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">image-builder (C) 2013 by Silicon Labs Version: 1.4.1</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">ECC signature support NOT present. File: null-file.ota</p><p style="text-indent: 0pt;text-align: left;"/><p class="s5" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Here is an example of how to create a NULL OTA file:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s4" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Extracting Tags from an OTA File</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="an716-image-builder-instructions/Image_015.png"/></span></p></li></ol></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark17">Extracting Tags from an OTA File</a></h3></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s5" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">In some cases it may be helpful to extract data from specific tags of an existing OTA file. This can be done with the <span class="p">--extract </span>com- mand-line option.</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">For each tag you would like to extract data from you must specify a <span class="p">--tag-id</span>, and the <span class="p">--tag-file </span>option that corresponds to the output file.</p><p class="s5" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">In the following example, the existing OTA file is shown first, and then the tag extraction.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="728" height="306" alt="image" src="an716-image-builder-instructions/Image_016.png"/></span></p><p style="text-indent: 0pt;text-align: left;">(Manufacturer Specific)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;">(Manufacturer Specific)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">(Manufacturer Specific)</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0xFFF0</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">10 bytes 0xFFFE</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">30 bytes 0xF000</p><p style="text-indent: 0pt;text-align: left;">100 bytes</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;">0x0BEEF11E</p><p style="text-indent: 0pt;text-align: left;">0x0100</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">56 bytes 0x0000 0x0001 0x0001 0x00000001 0x0002</p><p style="text-indent: 0pt;text-align: left;">test extraction image</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">214 bytes 3</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">Magic Number: Header Version: Header Length: Field Control: Manufacturer ID: Image Type: Firmware Version: Stack Version: Header String: Total Image Size: Total Tags:</p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;">ID:</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 107%;text-align: left;">Length: ID:</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 107%;text-align: left;">Length: ID:</p><p style="text-indent: 9pt;line-height: 107%;text-align: left;">Length: Found 1 files.</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;line-height: 107%;text-align: left;">bash$ ./image-builder -p test.ota image-builder (C) 2013 by Silicon Labs Version: 1.4.1</p><p style="text-indent: 0pt;line-height: 107%;text-align: left;">ECC signature support NOT present. File: test.ota</p><p style="text-indent: 0pt;text-align: left;"/><p class="s5" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">You can extract all of the tags by specifying each tag and the associated file output. For example:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">bash$ ./image-builder-ecc -x test.ota -t 0xfff0 -f tag-fff0.txt -t 0xfffe -f tag-fffe.txt -t 0xf000 -f tag- f000.txt</p><p style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">image-builder (C) 2013 by Silicon Labs Version: 1.4.1</p><p style="padding-left: 2pt;text-indent: 0pt;text-align: left;">ECC signature support present.</p><p style="padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">Wrote tag 0xFFF0, length 10 bytes, to file &#39;tag-fff0.txt&#39; Wrote tag 0xFFFE, length 30 bytes, to file &#39;tag-fffe.txt&#39; Wrote tag 0xF000, length 100 bytes, to file &#39;tag-f000.txt&#39;</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Smart. Connected. Energy-Friendly.</h4><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Products</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products">www.silabs.com/products</a></p><p class="s11" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality">www.silabs.com/quality</a></p><p class="s11" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s12" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 64pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="767" height="695" alt="image" src="an716-image-builder-instructions/Image_017.png"/></span></p><p class="s13" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s14" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s13" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s14" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z- Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="an716-image-builder-instructions/Image_018.png"/></span></p><p class="s13" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s13" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
