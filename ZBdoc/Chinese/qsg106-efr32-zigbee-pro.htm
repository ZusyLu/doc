<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>QSG106: Zigbee EmberZNet PRO Quick-Start Guide</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 h4 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s4 { color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s5 { color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 9pt; }
 .s6 { color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .a, a { color: #538DD3; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s9 { color: #538DD3; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s10 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s11 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s12 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s13 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 9pt; }
 .s14 { color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 h2 { color: #FFF; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s15 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s16 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s17 { color: #424242; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s18 { color: #424242; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s19 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s20 { color: #4C4D4F; font-family:"Arial Black", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s22 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s24 { color: #0086DD; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s25 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 4pt; vertical-align: 2pt; }
 h3 { color: #FB1725; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt; }
 #l3> li>*:first-child:before {content: " "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l4 {padding-left: 0pt;counter-reset: d2 1; }
 #l4> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt; }
 #l6> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l7 {padding-left: 0pt;counter-reset: d2 2; }
 #l7> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l8 {padding-left: 0pt;counter-reset: d3 1; }
 #l8> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l9 {padding-left: 0pt;counter-reset: d3 1; }
 #l9> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l10 {padding-left: 0pt;counter-reset: d2 5; }
 #l10> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l11 {padding-left: 0pt;counter-reset: f1 1; }
 #l11> li>*:first-child:before {counter-increment: f1; content: counter(f1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: f1 0;  }
 #l12 {padding-left: 0pt;counter-reset: g1 1; }
 #l12> li>*:first-child:before {counter-increment: g1; content: counter(g1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l12> li:first-child>*:first-child:before {counter-increment: g1 0;  }
 #l13 {padding-left: 0pt;counter-reset: d2 1; }
 #l13> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l13> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l14 {padding-left: 0pt;counter-reset: d2 1; }
 #l14> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l14> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l15 {padding-left: 0pt;counter-reset: d3 1; }
 #l15> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l15> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l16 {padding-left: 0pt;counter-reset: h1 1; }
 #l16> li>*:first-child:before {counter-increment: h1; content: counter(h1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l16> li:first-child>*:first-child:before {counter-increment: h1 0;  }
 #l17 {padding-left: 0pt;counter-reset: d2 1; }
 #l17> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l17> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l18 {padding-left: 0pt;counter-reset: i1 1; }
 #l18> li>*:first-child:before {counter-increment: i1; content: counter(i1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l18> li:first-child>*:first-child:before {counter-increment: i1 0;  }
 #l19 {padding-left: 0pt;counter-reset: j1 1; }
 #l19> li>*:first-child:before {counter-increment: j1; content: counter(j1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l19> li:first-child>*:first-child:before {counter-increment: j1 0;  }
 #l20 {padding-left: 0pt;counter-reset: k1 1; }
 #l20> li>*:first-child:before {counter-increment: k1; content: counter(k1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l20> li:first-child>*:first-child:before {counter-increment: k1 0;  }
 #l21 {padding-left: 0pt;counter-reset: d3 1; }
 #l21> li>*:first-child:before {counter-increment: d3; content: counter(d1, decimal)"."counter(d2, decimal)"."counter(d3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l21> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l22 {padding-left: 0pt;counter-reset: l1 1; }
 #l22> li>*:first-child:before {counter-increment: l1; content: counter(l1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l22> li:first-child>*:first-child:before {counter-increment: l1 0;  }
 #l23 {padding-left: 0pt; }
 #l23> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l24 {padding-left: 0pt;counter-reset: m1 1; }
 #l24> li>*:first-child:before {counter-increment: m1; content: counter(m1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l24> li:first-child>*:first-child:before {counter-increment: m1 0;  }
 #l25 {padding-left: 0pt;counter-reset: n1 1; }
 #l25> li>*:first-child:before {counter-increment: n1; content: counter(n1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l25> li:first-child>*:first-child:before {counter-increment: n1 0;  }
 #l26 {padding-left: 0pt;counter-reset: d2 1; }
 #l26> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l26> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l27 {padding-left: 0pt;counter-reset: d2 1; }
 #l27> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l27> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l28 {padding-left: 0pt;counter-reset: o1 1; }
 #l28> li>*:first-child:before {counter-increment: o1; content: counter(o1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l28> li:first-child>*:first-child:before {counter-increment: o1 0;  }
 #l29 {padding-left: 0pt; }
 #l29> li>*:first-child:before {content: " "; color: black; font-family:Symbol, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l30 {padding-left: 0pt; }
 #l30> li>*:first-child:before {content: " "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="127" height="62" alt="image" src="qsg106-efr32-zigbee-pro/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 11pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">QSG106: Zigbee EmberZNet PRO Quick-Start Guide</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 21pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="728" height="1" alt="image" src="qsg106-efr32-zigbee-pro/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="214" height="1" alt="image" src="qsg106-efr32-zigbee-pro/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-top: 4pt;padding-bottom: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">KEY FEATURES</p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="215" height="1" alt="image" src="qsg106-efr32-zigbee-pro/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-left: 14pt;text-indent: -7pt;text-align: left;">Product overview</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Setting up your development environment</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Installing Simplicity Studio and Em- berZNet PRO</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Creating an example application network</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 14pt;text-indent: -7pt;text-align: left;">Using the Network Analyzer</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-top: 17pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">This quick start guide provides basic information on configuring, building, and installing applications for the EFR32MG family of SoCs using the EmberZNet PRO stack v. 6.7.x with Simplicity Studio® 4 and the EmberZNet PRO stack v. 6.8.x and higher with Simplicity Studio 5</p><p style="padding-top: 9pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">This guide is designed for developers who are new to EmberZNet PRO and the Silicon Labs development hardware. It provides instructions to get started using the example applications provided with the EmberZNet PRO stack.</p><ol id="l2"><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: justify;"><a name="bookmark0">Product Overview</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Before following the procedures in this guide you must have</p><ul id="l3"><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Purchased your EFR32MG  Mesh Networking Kit (see<a href="http://www.silabs.com/products/wireless/mesh-networking/zigbee/Pages/zigbee.aspx" class="s6" target="_blank"> </a><a href="http://www.silabs.com/products/wireless/mesh-networking/zigbee/Pages/zigbee.aspx" class="s5" target="_blank">http://www.silabs.com/products/wireless/mesh-network- ing/zigbee/Pages/zigbee.aspx</a> ).</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Downloaded the required software components, as described below. A card included in your development hardware kit contains a link to a Getting Started page, which will direct you to links for the Silicon Labs software products.</p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Note on Simplicity Studio Versions and Terminology:</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">EmberZNet PRO SDK v 6.8.0 was released with, and is only compatible with, Simplicity Studio 5 (SSv5). Among many improvements SSv5 introduced the <i>Simplicity Studio 5 User’s Guide</i><a href="https://docs.silabs.com/" class="s10" target="_blank">, available online at </a><a href="https://docs.silabs.com/" class="s5" target="_blank">https://docs.silabs.com/</a> and through SSv5’s help menu. Stand- ard information, such as how to download SSv5 and the EmberZNet PRO stack and descriptions of SSv5 features and functions, are provided in that guide, and are not repeated here. Throughout this document, “Simplicity Studio” means the information is generic across Simplicity Studio 4 (SSv4) and SSv5.</p><p class="s9" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark13" class="s10">SSv5 introduces a new user workspace. As a result, Ember ZNet projects that were developed in Ember ZNet 6.7.x and Simplicity Studio 4 must be migrated over to the new workspace, after which they can be upgraded to Ember ZNet 6.8. See Section </a><a href="#bookmark13" class="a">1.6 Migrating an </a>Ember ZNet Project from Simplicity Studio 4 to Simplicity Studio 5 <span style=" color: #000;">for details.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l4"><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: justify;"><a name="bookmark1">Software Components</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">See the stack release notes for version restrictions and compatibility constraints for the stack and these components. To develop Em- berZNet PRO applications, you will need the following.</p></li></ol></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Simplicity Studio 5 (SSv5) (for stack version 6.8.x and higher) or Simplicity Studio 4 (SSv4) (for stack version 6.7.x). Simplicity Studio is the core development environment designed to support the Silicon Labs IoT portfolio of system-on-chips (SoCs) and modules. It provides access to target device-specific web and SDK resources; software and hardware configuration tools; an integrated develop- ment environment (IDE); and advanced, value-add tools for network analysis and code-correlated energy profiling. EmberZNet PRO uses AppBuilder as the code configuration tool in Simplicity Studio. Online help for AppBuilder and other Simplicity Studio modules is provided.</p></li><li><p style="padding-top: 2pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">The EmberZNet PRO stack, an advanced implementation of a Zigbee stack, installed through Simplicity Studio. The stack API is documented in an online API reference. The stack is delivered as a collection of libraries that you can link to your applications. A description of each library is provided in the development environment. The release notes contain details on the folders installed along with their contents.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Simplicity Commander, installed along with Simplicity Studio. A GUI with limited functionality can be accessed through Simplicity Studio’s Tools menu. Most functions are accessible through a CLI invoked by opening a command prompt in the Simplicity Com- mander directory (\SiliconLabs\SimplicityStudio\v4\developer\adapter_packs\commander). See <i>UG162: Simplicity Commander Ref- erence Guide </i>for more information.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Compiler toolchain:</p><ul id="l5"><li><p style="padding-top: 3pt;padding-left: 51pt;text-indent: -14pt;text-align: justify;">GCC (The GNU Compiler Collection) is provided with Simplicity Studio. GCC is used in this document. However, you must use IAR to compile the following:</p><ul id="l6"><li><p style="padding-left: 66pt;text-indent: -14pt;text-align: justify;">A part with less than 512 kB, such as the EFR32xG1</p></li><li><p style="padding-left: 66pt;text-indent: -14pt;text-align: justify;">Any of the Dynamic Multiprotocol examples</p><p class="s7" style="padding-top: 8pt;padding-left: 51pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Application images created with GCC are larger than those created with IAR. If you use GCC to compile the example applications in this SDK, you must use a part with at least 512 kB of flash.</span></p></li></ul></li><li><p style="padding-top: 6pt;padding-left: 51pt;text-indent: -14pt;text-align: left;">IAR Embedded Workbench for ARM (IAR-EWARM).</p><p class="s7" style="padding-top: 8pt;padding-left: 51pt;text-indent: 0pt;text-align: justify;">Note: <a href="#bookmark12" class="s10">See the SDK Release Notes for the IAR version supported by this version of the EmberZNet SDK. Download the supported version from the Silicon Labs Support Portal, as described in section </a><a href="#bookmark12" class="a">1.5 </a><span class="s9">Using IAR as a Compiler. </span><span class="p">Refer to the “QuickStart Installation Information” section of the IAR installer for additional information about the installation process and how to configure your license. Once IAR-EWARM is installed, the next time Simplicity Studio starts it will automatically detect and configure the IDE to use IAR-EWARM.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">While Simplicity Studio and Simplicity Commander can be run on a Mac OS or Linux machine, these instructions assume you are working with a Microsoft Windows-based PC. If you are using a non-Windows system, IAR-EWARM must be run via WINE or some other form of emulator or virtual machine.</p><ol id="l7"><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark2">Support</a><a name="bookmark11">&zwnj;</a></p><p class="s4" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><a href="https://www.silabs.com/support" class="s10" target="_blank">You can access the Silicon Labs support portal at </a><a href="https://www.silabs.com/support" class="s5" target="_blank">https://www.silabs.com/support</a> <span style=" color: #000;">through Simplicity Studio. Use the support portal to contact Customer Support for any questions you might have during the development process.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l8"><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark3">SSv5</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">Access is through the Welcome view under Learn and Support. Note that you can return to the Welcome view at any time through the Welcome button on the toolbar.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="723" height="460" alt="image" src="qsg106-efr32-zigbee-pro/Image_005.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark4">SSv4</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><a href="#bookmark61" class="s10">Access is through the Resources tab, as described in section </a><a href="#bookmark61" class="a">8.6 Accessing Documentation and Other Resources</a><a href="#bookmark61" class="s10">.</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark5">Documentation</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Documentation is accessed through Simplicity Studio. Simplicity Studio filters documentation based on the connected or selected part.</p><ol id="l9"><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark6">SSv5</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Hardware-specific documentation can be accessed through links on the part OVERVIEW tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 73pt;text-indent: 0pt;text-align: left;"><span><img width="584" height="358" alt="image" src="qsg106-efr32-zigbee-pro/Image_006.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">SDK documentation and other references are available through the DOCUMENTATION tab. Filter with the Zigbee Technology Type checkbox to see documentation most closely related to the EmberZNet PRO SDK.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 28pt;text-indent: 0pt;text-align: left;"><span><img width="695" height="430" alt="image" src="qsg106-efr32-zigbee-pro/Image_007.jpg"/></span></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark7">SSv4</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark61" class="s10">Stack documentation is accessed as described in section </a><a href="#bookmark61" class="a">8.6 Accessing Documentation and Other Resources</a>. SSv4 also provides links to hardware documentation and other application notes. See the release notes for further details about the EmberZNet PRO software.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark8">Gecko Platform</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Platform is a set of drivers and other lower-layer features that interact directly with Silicon Labs chips and modules. Gecko Platform components include EMLIB, EMDRV, RAIL Library, NVM3, and mbedTLS. Application developers using EmberZNet plugins, Hardware Configurator interface, or APIs may not need to interact directly with the Gecko Platform as the code does that for you. For more information about Gecko Platform, see release notes that can be found in Simplicity Studio’s Launcher perspective.</p></li></ol></li></ul></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">SSv5: On the DOCUMENTATION tab, filter by Resource Type: Release Notes</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;"><a name="bookmark9">SSv4: On the Getting Started tab, under </a><b>SDK Documentation</b>, <b>Release Notes</b><a name="bookmark12">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l10"><li><p class="s7" style="padding-top: 8pt;padding-left: 51pt;text-indent: -28pt;text-align: left;">Using IAR as a Compiler</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">If you plan to use IAR as your compiler (required for dynamic multiprotocol and Micrium OS examples), find the Release Notes on the SDK Documentation list and check for software version requirements, in particular for IAR-EWARM. To install IAR-EWARM:</p><ol id="l11"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a href="#bookmark11" class="s10">Go to the Customer Support portal as described in section </a><a href="#bookmark11" class="a">1.2 </a><a href="#bookmark11">Support.</a></p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">If you are not already signed in, sign in.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Click the Software Releases tab. In the View list select <b>Latest EmberZNet Software</b>. Click <b>Go</b>. In the results is a link to the appro- priate IAR-EWARM version.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Download the IAR package. This is a large package - download time depends on connection speed but can take 1 hour or more.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Install IAR.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">In the IAR License Wizard, click <b>Register with IAR Systems to get an evaluation license</b>.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Complete the registration and IAR will provide an evaluation license.</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark10">Migrating an Ember ZNet Project from Simplicity Studio 4 to Simplicity Studio 5</a><a name="bookmark13">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Simplicity Studio 5 (SSv5) introduces a new user workspace. As a result, Ember ZNet projects that were developed in Ember ZNet 6.7 and Simplicity Studio 4 must be migrated over to the new workspace, at which point they can be upgraded to Ember ZNet 6.8.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Follow this procedure to move projects and compile them with Ember ZNet 6.8 under Simplicity Studio V5.</p><ol id="l12"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Install SSv5. When you run SSv5, it creates a new workspace called the “v5_workspace” for example:</p><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">/Users/&lt;username&gt;/SimplicityStudio/v5_workspace/</p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Locate your previous project. If it was created in Ember ZNet 6.7 and you used the default location you will see it in the Simplicity Studio v4 workspace. For example:</p><p class="s11" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">/Users/&lt;username&gt;/SimplicityStudio/v4_workspace/</p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Create a temporary directory inside the v5_workspace called &lt;project name&gt;_temp for your important application-specific files.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Copy the project’s “.isc”, “.hwconf” and “callbacks.c” file into the new temporary directory. In addition, copy any other application- specific files you have created into this directory.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Start SSv5.</p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Select <b>File &gt; Import… </b>and browse to the temporary directory containing your copied files. You should have the option of importing the project as an “External Project Type”.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 166pt;text-indent: 0pt;text-align: left;"><span><img width="337" height="177" alt="image" src="qsg106-efr32-zigbee-pro/Image_008.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Import the project. Be sure to set the stack to the EmberZNet 6.8 stack. The project name should default to the original name of the project, in this case Z3LightSoc.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">You should see the project inside the Simplicity Studio IDE.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Copy the files out of your &lt;projectname&gt;_temp directory into your actual project directory by right-clicking the files in Simplicity Studio and choosing “Copy Linked Files into Project”.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 221pt;text-indent: 0pt;text-align: left;"><span><img width="191" height="77" alt="image" src="qsg106-efr32-zigbee-pro/Image_009.jpg"/></span></p></li><li><p style="padding-top: 5pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Double click the .isc file in the Simplicity Studio to open the project in AppBuilder.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Change the generation directory from the old &lt;v4_workspace&gt;/&lt;project name&gt; directory to your project directory inside your new V5 workspace. In the example this is <span class="s12">/Users/&lt;username&gt;/SimplicityStudio/v5_workspace/Z3LightSoc</span></p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Be sure to change the path to any “Included” files in your project by modifying the <b>Includes Tab </b>as necessary.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 59pt;text-indent: 0pt;text-align: left;"><span><img width="628" height="145" alt="image" src="qsg106-efr32-zigbee-pro/Image_010.jpg"/></span></p></li><li><p style="padding-top: 5pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Generate the application.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Compile the application.</p></li></ol></li></ol></li></ul></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark14">Set Up Your Development Environment</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l13"><li><p class="s7" style="padding-top: 10pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark15">Connect the WSTK</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Connect your WSTK, with radio board mounted, to your PC using a USB cable. By having it connected when Simplicity Studio installs, Simplicity Studio will automatically obtain the relevant additional resources it needs.</p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">For best performance in Simplicity Studio, be sure that the power switch on your WSTK is in the Advanced Energy Monitoring or “AEM” position as shown in the following figure.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="716" height="423" alt="image" src="qsg106-efr32-zigbee-pro/Image_011.jpg"/></span></p><p class="s7" style="padding-top: 6pt;padding-left: 147pt;text-indent: 0pt;text-align: center;">Figure 1. EFR32MG12 on a WSTK</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark16">Register your Development Kit</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="https://siliconlabs.force.com/KitRegistration" class="s10" target="_blank">Before you install Simplicity Studio, you need to create an account on the support portal. Be sure to record your account username and password as you will use it to log in to Simplicity Studio. In order to install the EmberZNet PRO stack from Simplicity Studio, you must also register your kit on </a><a href="https://siliconlabs.force.com/KitRegistration" class="s5" target="_blank">https://siliconlabs.force.com/KitRegistration</a>, using your EFR32MG Kit serial number (you must be logged into your Salesforce account for this link to resolve). You can also register your kit through Simplicity Studio during installation if you prefer.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Properties in your Salesforce account determine what update notifications you will receive. To review or change your subscriptions, log in to the portal, click HOME to go to the portal home page and then click the Manage Notifications tile. Make sure that Software/Security Advisory Notices &amp; Product Change Notices (PCNs) is checked, and that you are subscribed at minimum for your platform and protocol. Click [Save] to save any changes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark17">Install Simplicity Studio and the EmberZNet PRO Stack</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><b>Ember ZNet PRO v6.8.x and Simplicity Studio 5: </b>SSv5 and stack installation and getting started instructions along with a set of detailed references can be found in the online <i>Simplicity Studio 5 User’s Guide</i><a href="https://docs.silabs.com/" class="s10" target="_blank">, available on </a><a href="https://docs.silabs.com/" class="s5" target="_blank">https://docs.silabs.com/</a> and through the SSv5 help menu.</p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">EmberZNet PRO v6.7.x and Simplicity Studio 4: <a href="#bookmark57" class="s10">SSv4 and stack installation instructions and a Launcher perspective overview may be found in </a><a href="#bookmark57" class="a">APPENDIX: SSv4 Installation and Overview</a><a href="#bookmark57" class="s10">.</a></p></li></ol></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark18">About Demos and Examples</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Because starting application development from scratch is difficult, the EmberZNet SDK comes with a number of built-in demos and software examples covering the most frequent use cases. Demos are pre-built application images that you can run immediately. Software examples can be modified before building the application image. The software examples with the same names as the demos provide the demo functionality.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 59pt;text-indent: -36pt;text-align: left;">Note: <span class="p">The demos and examples you see are determined by the part selected. If you are using a custom solution with more than one part, be sure to click on the part you are working with to see only those items applicable to that part.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Silicon Labs recommends that you start your own development with a use case-based example and modify it according to your needs. If none of the use case-based examples meet your needs, you can start with the <b>ZigbeeMinimal </b>example. The examples provide default configurations needed by the stack and a basic application structure that you can build upon.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l14"><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark19">Demos</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Demos are prebuilt application examples that can be directly downloaded to your device. These demos are compatible with EFR32MG12 on either board 4161A or 4162A. You will not see the demos in Studio unless you have one of these devices selected. If you have more than one device connected, make sure that one of these devices is selected in the Device view. To download and run a demo on your device:</p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In SSv5: <span class="p">Select your device, click on the Example Projects &amp; Demos tab in the Launcher perspective. Turn off the Example Projects switch to see only demos, and click RUN next to the demo to load..</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="705" height="437" alt="image" src="qsg106-efr32-zigbee-pro/Image_012.png"/></span></p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In SSv4<span class="p">: Drop down the demo list and click the demo. In the Mode drop-down in the next dialog, select </span>Run<span class="p">. Click </span>Start<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 174pt;text-indent: 0pt;text-align: left;"><span><img width="315" height="295" alt="image" src="qsg106-efr32-zigbee-pro/Image_013.jpg"/></span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The EmberZNet demos are:</p><p class="s13" style="padding-left: 23pt;text-indent: 0pt;line-height: 19pt;text-align: left;">Simple Zigbee 3.0 Network<span class="s7"> Z3Light: </span><span class="p">Zigbee 3.0 Light application.</span></p><p class="s7" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Z3Switch: <span class="p">Zigbee 3.0 Switch application.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">For the Light and Switch demos, press Button0 on the Switch device to initiate the network. The light device should bind to the network automatically. Once the switch has finished finding and binding, you can use Button0 as an On/Off toggle.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark39" class="s10">This may not be successful, because some timeouts are included in the button functionality. If so, use the Command Line Interface to set up the demo network. The CLI commands can be entered in the Serial Console, as described in the final step of the section </a><a href="#bookmark39" class="a">4.3 Config- </a><a href="#bookmark39">uration and Generation.</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Once the Z3Light app starts running, it makes many attempts to join a network, at the end of which it sets up its own distributed network. Once the Info command indicates that it is in a network (that is, has a PAN ID and Node ID), use the CLI command:</p><p class="s11" style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">plugin network-creator-security open-network</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">You should get the response:</p><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">NWK Creator Security: Open network: 0x00 pJoin for 254 sec: 0x00</p><p class="s11" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">NWK Creator Security: Open network: 0x00</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Now the device is ready for joining. In the Z3Switch App, instead of using the button, first make sure it has not joined any networks by issuing:</p><p class="s11" style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">network leave</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Then you can enter the command:</p><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">plug network-steering start 0</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">This will kick off the joining process.</p><p class="s13" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Dynamic Multiprotocol</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><b>DynamicMultiprotocolLight, DynamicMultiprotocolLightSed, </b>and <b>DynamicMultiprotocolSwitch: </b>Companion applications demon- strating Zigbee/Bluetooth LE dynamic multiprotocol functionality on specified development kit hardware. See <i>QSG155: Using the Silicon Labs Dynamic Multiprotocol Demonstration </i>for instructions on using the demos, and the development kit hardware that supports them.</p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark20">Software Examples</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 59pt;text-indent: -36pt;text-align: justify;"><b>Note: </b>Examples provided for the EFR32xG12 and newer parts include Silicon Labs Gecko Bootloader examples. Examples are pro- vided for all compatible Simplicity Studio SDKs. When configuring security for a Gecko Bootloader example, you must use Simplicity Commander, not the Simplicity Studio IDE interface. For more information on using the Gecko Bootloader see <i>UG266: Silicon Labs Gecko Bootloader User Guide</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Some EmberZNet software examples are specifically for SoC applications. If you are not familiar with the differences between System- on-Chip (SoC) and Network Coprocessor (NCP) application models, see <i>UG103.03: Application Development Fundamentals: Design Choices</i>. For more information on Green Power Devices see <i>UG392: Using Silicon Labs Green Power with EmberZNet PRO</i>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark36" class="s10">You can start an example from the list on the Launcher perspective, as described in section </a><a href="#bookmark36" class="a">4 Starting an Example Application</a>. This list is filtered by the selected device.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To see all examples, including the Host and NCP examples:</p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;line-height: 181%;text-align: justify;">In SSv5<span class="p">: Click File &gt; New &gt; Project. Drop down the Simplicity Studio group and select </span>Silicon Labs AppBuilder Project. In SSv4: <span class="p">Click </span>File &gt; New Project &gt; Silicon Labs AppBuilder &gt; Project<span class="p">.</span></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you access examples in this way, the NCP examples are based on the <b>Customizable network coprocessor (NCP) applications </b>type, and the SoC and Host examples are based on the <b>Silicon Labs Zigbee </b>type. Be sure to check the complete example description for any platform restrictions.</p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">The checkbox “Start with a blank application” on the screen listing the applications produces an incorrectly-configured starting project, and should not be used. Instead, start with the </span>ZigbeeMinimal <span class="p">example.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The following descriptions group related examples together. Examples followed by (SoC) or (Host) are available through the <b>Silicon Labs Zigbee\EmberZNet &lt;version&gt; SoC </b>or <b>EmberZNet &lt;version&gt; Host </b>stacks, respectively. Examples followed by (NCP) are avail- able through <b>Customizable network coprocessor (NCP) applications. </b>Examples followed by (GP) are available through <b>Green Power Device Framework</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l15"><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark21">Zigbee 3.0 Network</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">For network formation instructions, see the corresponding demos in the section above.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark49" class="s10">The Z3Light and Z3Switch applications were developed for specific development kit hardware. Use on other devices may require some GPIO remapping using the Hardware Configurator tool, described in section </a><a href="#bookmark49" class="a">7.2 Hardware Configurator</a><a href="#bookmark49" class="s10">.</a></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Z3Light (SoC)<span class="p">: Zigbee light application. Acting as a router it can form a distributed network. Acting as a touchlink target it can touchlink with the </span>Z3Switch<span class="p">, which is acting as a touchlink initiator.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Z3LightGPCombo (SoC)<span class="p">: Zigbee light application with Green Power combo basic functionality.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Z3Switch (SoC)<span class="p">: Zigbee switch application, acting as an end device, can join the network.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Z3Gateway (Host)<span class="p">: Simple gateway application that can form a centralized network, and the light and the switch can join the centralized network by performing network steering.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark22">Dynamic Multiprotocol Demonstration</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">These applications are the source for the EmberZNet/Bluetooth dynamic multiprotocol demos described in <i>QSG155: Using the Silicon Labs Dynamic Multiprotocol Demonstration</i>. <i>AN1133: Dynamic Multiprotocol Development with Bluetooth and Zigbee </i><a href="#bookmark49" class="s10">contains a summary procedure for these examples, describes how to change configuration settings to make an EmberZNet application into a dynamic multi- protocol application, and contains details on the functionality underlying this demo. All applications are configured with NVM3 for persistent storage. These applications were developed for specific development kit hardware. Use on other devices may require some GPIO re- mapping using the Hardware Configurator tool, described in section </a><a href="#bookmark49" class="a">7.2 Hardware Configurator</a><a href="#bookmark49" class="s10">.</a></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">DynamicMultiprotocolLight (SoC): <span class="p">Demonstrates the Zigbee and Bluetooth stacks running concurrently as MicriumOS tasks.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">DynamicMultiprotocolLightSed (SoC): <span class="p">Demonstrates the Zigbee and Bluetooth stacks running concurrently as MicriumOS tasks. The Light is configured as a Zigbee Sleepy End Device (SED) and searches for a network to join.</span></p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">DynamicMultiprotocolSwitch (SoC): <span class="p">This application only uses Zigbee and is not a dynamic multiprotocol application itself. It is to be used with the </span>DynamicMultiprotocolLight <span class="p">sample to demonstrate the control of a dynamic multiprotocol device from a Zigbee network.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark23">Host/NCP Applications Controlling an LED</a></p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">XncpLed (Host): <span class="p">Presents a HOST application for communicating with an NCP application using custom EZSP commands. It is meant to be used with the NCP sample application xNCP LED.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">xNCP LED (NCP): <span class="p">Presents an NCP application for communicating with a UNIX HOST using custom EZSP commands. This application is meant to be used with the HOST sample application </span>XncpLed<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark24">NCP Application Examples</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">All applications can be built as configured, or optionally can be augmented with customizations for target hardware, initialization, main loop processing, event definition/handling, and messaging with the host.</p><p class="s7" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">NCP SPI (NCP): <span class="p">This NCP application supports communication with a host application over an SPI interface.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">NCP UART HW (NCP): <span class="p">This NCP application supports communication with a host application over a UART interface with hardware flow control.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">NCP UART SW (NCP): <span class="p">This NCP application supports communication with a host application over a UART interface with software flow control.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark25">Green Power Device</a></p><p class="s7" style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Green Power Device: <span class="p">Green Power Device example.</span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Green Power Sensor: <span class="p">Green power sensor device that reports periodically.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark26">Minimal Configuration</a></p><p class="s7" style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">ZigbeeMinimal (SoC)<span class="p">: This is a Zigbee minimal network-layer application suitable as a starting point for new application development.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark27">Testing</a></p><p class="s7" style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;line-height: 107%;text-align: left;">StandardizedRfTesting: <span class="p">This is a pre-standardization implementation of Zigbee&#39;s RF testing standard. It utilizes the TIS (Total Isotropic Sensitivity)/ TRP (Total Radiated Power) testing interfaces and is optional for Zigbee certifications.</span></p></li></ol></li></ol></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark28">Starting an Example Application</a><a name="bookmark36">&zwnj;</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark42" class="s10">In these instructions you will compile and load two example applications, Z3Light and Z3Switch. Section </a><a href="#bookmark42" class="a">5 </a>Creating a Network <a href="#bookmark44" class="s10">describes how to use the examples to create a network. Section </a><a href="#bookmark44" class="a">6 </a>Using the Network Analyzer <span style=" color: #000;">describes how to use Network Analyzer to observe traffic across the network.</span></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">When working with example applications in Simplicity Studio, you will first execute the following steps:</p><ol id="l16"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Select an example application.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Generate application files.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Compile and flash the application (and, the first time, a bootloader) to the radio board.</p></li></ol><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">These procedures are illustrated for a WSTK with an EFR32MG. <b>Note: </b>Your SDK version may be later than the version shown in the procedure illustrations.</p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">SDK version 6.0 and later contain a number of changes to the way hardware peripherals are configured and managed. You may see the following dialog when you open an example or generate code. Always click </span>Yes<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 155pt;text-indent: 0pt;text-align: left;"><span><img width="363" height="114" alt="image" src="qsg106-efr32-zigbee-pro/Image_014.jpg"/></span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The procedure to create a project based on an example application is different in SSv5 and SSv4. Once the project is created, the process is the same. The only difference is that SSv5 has a toolbar available that SSv4 does not.</p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">SSv5:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="43" alt="image" src="qsg106-efr32-zigbee-pro/Image_015.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 22pt;text-indent: 0pt;text-align: left;">SSv4:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="719" height="44" alt="image" src="qsg106-efr32-zigbee-pro/Image_016.jpg"/></span></p><ol id="l17"><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark29">Starting an Example in SSv5</a><a name="bookmark37">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="https://docs.silabs.com/" class="s10" target="_blank">SSv5 offers a variety of ways to begin a project using an example application. The online Simplicity Studio 5 User’s Guide, available both through </a><a href="https://docs.silabs.com/" class="s5" target="_blank">https://docs.silabs.com/</a> and the SSv5 help menu, describes them all. This guide uses the <b>File &gt; New &gt; Silicon Labs Project Wizard </b>method, because it takes you through all three of the Project Creation Dialogs.</p><ol id="l18"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: justify;">Open SSv5’s File menu and select New &gt; Silicon Labs Project Wizard. The Target, SDK, and Toolchain Selection dialog opens. If you want to change the toolchain from the default GCC to IAR, do so here. Click <b>NEXT</b>.</p><p class="s7" style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Note: <span class="p">If you have both IAR and GCC installed, GCC is the default. Note that if you are compiling the example for a part with less than 512 kB, such as the EFR32xG1, or you are compiling the Dynamic Multiprotocol Light(s) or Switch examples, you must use IAR.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 120pt;text-indent: 0pt;text-align: left;"><span><img width="458" height="462" alt="image" src="qsg106-efr32-zigbee-pro/Image_017.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The Example Project Selection dialog opens. Use the Technology Type and Keyword filters to search for a specific example, in this case <b>Z3Switch. </b>Select it and click <b>NEXT</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 130pt;text-indent: 0pt;text-align: left;"><span><img width="430" height="433" alt="image" src="qsg106-efr32-zigbee-pro/Image_018.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: justify;">The Project Configuration dialog opens. Here you can rename your project, change the default project file location, and determine if you will link to or copy project files. Note that if you change any linked resource, it is changed for any other project that references it. Click <b>FINISH.</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 115pt;text-indent: 0pt;text-align: left;"><span><img width="468" height="472" alt="image" src="qsg106-efr32-zigbee-pro/Image_019.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The Simplicity IDE perspective opens with the new project in AppBuilder view, and the focus on the General tab. See the online Simplicity Studio 5 User’s Guide for details about the functionality available through the Simplicity IDE perspective and AppBuilder.</p></li></ol><p class="s7" style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Note: <span class="p">You now have a Simplicity IDE button next to the Launcher button in the upper right.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="706" height="404" alt="image" src="qsg106-efr32-zigbee-pro/Image_020.jpg"/></span></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark30">Starting an Example in SSv4</a><a name="bookmark38">&zwnj;</a></p><ol id="l19"><li><p style="padding-top: 5pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">In the Launcher perspective, click an example application, in this case Z3Switch. Your project will be based on this example, and on the device you have selected in the Devices or Solutions tabs on the left.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="724" height="409" alt="image" src="qsg106-efr32-zigbee-pro/Image_021.jpg"/></span></p></li><li><p style="padding-top: 5pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">You are asked if you want to switch to the Simplicity IDE. Click <b>Yes</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 150pt;text-indent: 0pt;text-align: left;"><span><img width="378" height="109" alt="image" src="qsg106-efr32-zigbee-pro/Image_022.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">The Simplicity IDE perspective opens with the new project in AppBuilder view, and the focus on the General tab.</p></li></ol><p class="s7" style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Note: <span class="p">You now have a Simplicity IDE button next to the Launcher button in the upper right.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 32pt;text-indent: 0pt;text-align: left;"><span><img width="688" height="389" alt="image" src="qsg106-efr32-zigbee-pro/Image_023.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark31">Configuration and Generation</a><a name="bookmark39">&zwnj;</a></p><ol id="l20"><li><p style="padding-top: 5pt;padding-left: 40pt;text-indent: -18pt;text-align: justify;">Make sure the toolchain shown is the one you want to use. If you have both IAR and GCC installed, GCC is the default. Note that if you are compiling the example for a part with less than 512 kB, such as the EFR32xG1, or you are compiling the Dynamic Multipro- tocol Light(s) or Switch examples, you must use IAR.</p><p style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">To change the toolchain click <b>Edit Architecture</b>. In the resulting dialog, select the desired toolchain and click <b>OK</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 191pt;text-indent: 0pt;text-align: left;"><span><img width="270" height="305" alt="image" src="qsg106-efr32-zigbee-pro/Image_024.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">In the Simplicity IDE, click <b>Generate.</b></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="720" height="413" alt="image" src="qsg106-efr32-zigbee-pro/Image_025.jpg"/></span></p><p style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">If you get the following overwrite warning, click <b>OK</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 122pt;text-indent: 0pt;text-align: left;"><span><img width="454" height="132" alt="image" src="qsg106-efr32-zigbee-pro/Image_026.gif"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Once generation is complete, a dialog reporting results is displayed. Click <b>OK</b>.</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 171pt;text-indent: 0pt;text-align: left;"><span><img width="327" height="272" alt="image" src="qsg106-efr32-zigbee-pro/Image_027.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">The generated files are shown in the Project Explorer view.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="706" height="405" alt="image" src="qsg106-efr32-zigbee-pro/Image_028.jpg"/></span></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark32">Compiling and Flashing the Application</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l21"><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark33">About Bootloading</a><a name="bookmark40">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Because this sample application is built with a bootloader (configured under the HAL tab), you will need to load a bootloader before you run the application for the first time.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="721" height="414" alt="image" src="qsg106-efr32-zigbee-pro/Image_029.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">A bootloader is a program stored in reserved flash memory that can initialize a device, update firmware images, and possibly perform some integrity checks. Silicon Labs networking devices use bootloaders that perform firmware updates in two different modes: standalone (also called standalone bootloaders) and application (also called application bootloaders). An application bootloader performs a firmware image update by reprogramming the flash with an update image stored in internal or external memory. Silicon Labs recommends that you always flash a bootloader image along with your application, so that flash memory usage is appropriately allocated from the beginning. For more information about bootloaders see <i>UG103.6: Application Development Fundamentals: Bootloading</i>.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In March of 2017, Silicon Labs introduced the Gecko Bootloader, a code library configurable through Simplicity Studio’s IDE to generate bootloaders that can be used with a variety of Silicon Labs protocol stacks. The Gecko Bootloader is used with all EFR32xG parts.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="https://www.silabs.com/documents/public/user-guides/ug162-simplicity-commander-reference-guide.pdf" class="s10" target="_blank">The Gecko Bootloader works with a specialized firmware update image format, ending in the extension .gbl (the GBL file). To create a GBL file from an .s37 or binary, follow the instructions in </a><a href="https://www.silabs.com/documents/public/user-guides/ug162-simplicity-commander-reference-guide.pdf" class="s5" target="_blank">UG162: Simplicity Commander Reference Guide</a>, section 6.7.1, GBL File Crea- tion. The exact format of the GBL file depends on the hardware you selected.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 59pt;text-indent: -36pt;line-height: 107%;text-align: left;"><b>Note: </b>When working with the Gecko Bootloader, you must use Simplicity Commander to enable some configuration option such as security features. See <i>UG266: Silicon Labs Gecko Bootloader User’s Guide</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark34">Flashing a Bootloader</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">All Silicon Labs examples require that a bootloader be installed. By default, a new device is factory-programmed with a bootloader. If you have a new device, haven’t cleared the bootloader region for your part or have a supported bootloader image already flashed on your device, skip this step and continue with the next section. Once you have installed a bootloader image, it remains installed until you erase the device.</p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you need to flash a bootloader you can either do so independently, or when flashing the application image, as described in the next section. With your device connected, select the Flash Programmer from the Tools menu. Browse to one of the precompiled bootloader images (.s37 files) for your device in the SSv5 installed directory:, such as <b>bootloader-storage-internal-single.</b></p><p class="s11" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">developer\sdks\gecko_sdk_suite\&lt;version&gt;\platform\bootloader\sample-apps\bootloader-storage-inter- nal-single\</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Make sure that the file type is .s37. The default is .hex, so if you don’t find any images you may have forgotten to change the filter.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 66pt;text-indent: 0pt;text-align: left;"><span><img width="609" height="284" alt="image" src="qsg106-efr32-zigbee-pro/Image_030.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Note: Note that, if you do not find a precompiled bootloader image for your device, you can also use a dummy bootloader image supported by your part. You can find the dummy bootloader images in ./platform/bootloader/util/bin/. For more details, refer to <i>UG266: Silicon Labs Gecko Bootloader User&#39;s Guide</i>.</p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark35">Building and Flashing Project Files</a></p><ol id="l22"><li><p style="padding-top: 5pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">After you generate your project files, click the <b>Build </b>(hammer) control in the top tool bar.</p><p style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: justify;">If the Build control is not enabled, click the device. Your example application will compile based on its build configuration. You can change the build configuration at any time in the Project Explorer View by right clicking on the project and going to <b>Build Configura- tions &gt; Set Active</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 37pt;text-indent: 0pt;text-align: justify;">During the build, progress is reported both in a window, which can be run in the background, and also in the lower right. The process may take over a minute.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Build completion is reported in the Build Console.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="721" height="414" alt="image" src="qsg106-efr32-zigbee-pro/Image_031.jpg"/></span></p><p style="padding-top: 9pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The build should complete with no errors. The line above the completion line is not an error. It refers to an option, not enabled in the default example configuration, to build a special application image used by the Zigbee Cluster Library Over-the-Air (OTA) bootload func- tionality.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If any errors occur they are highlighted in red in the console. Contact technical support for assistance.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 51pt;text-indent: 0pt;text-align: left;"><span><img width="638" height="153" alt="image" src="qsg106-efr32-zigbee-pro/Image_032.jpg"/></span></p><p class="s7" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">If you are using GCC on a Windows platform, and experience a build error concerning a missing include file, you may have encountered a known issue concerning GCC and long pathnames. If this happens, you may be able to work around the problem by opening the Windows Registry and setting the &#39;HKLM\SYSTEM\CurrentControlSet\Control\FileSystem&#39; registry key to a value of 1. If after</span></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">making this adjustment you still experience build issues with GCC and the example applications, please contact Silicon Labs technical support.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: justify;">To load the application and (optionally) the bootloader images, first make sure your hardware is displayed in the Device perspective. Expand the radio board to show the part number, as you will need that along with the board number to find the correct bootloader folder. Note that the folder in which the example was generated is displayed on the General tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="721" height="410" alt="image" src="qsg106-efr32-zigbee-pro/Image_033.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="517" height="345" alt="image" src="qsg106-efr32-zigbee-pro/Image_034.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Right-click the device and select <b>Upload Application</b>. The Application Image Upload dialog is displayed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s14" style="padding-left: 37pt;text-indent: -14pt;line-height: 20pt;text-align: justify;">	<a href="#bookmark40" class="s10">Browse to the folder with your compiled application and select the .s37 file (see section </a><a href="#bookmark40" class="a">4.4.1 About Bootloading</a><span class="s9"> </span><span class="p">for more information). If you compiled the image with GCC, the files are in </span><span class="s12">&lt;folder on General tab&gt;\GNU ARM vn.n.n - Default.</span></p><p style="padding-left: 37pt;text-indent: 0pt;text-align: left;">If you compiled the image with IAR EWARM, the files are in <span class="s12">&lt;folder on General tab&gt;\IAR ARM - &lt;qualifier</span>&gt;.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 89pt;text-indent: 0pt;text-align: left;"><span><img width="540" height="355" alt="image" src="qsg106-efr32-zigbee-pro/Image_035.jpg"/></span></p></li><li><p style="padding-top: 8pt;padding-left: 40pt;text-indent: -18pt;text-align: justify;">If you have not already loaded a bootloader, check <b>Bootloader image</b>, then browse to the folder containing a prebuilt bootloader image. Images are located in the Simplicity Studio platform bootloader folder under sample apps. In this case open the ‘SPI Flash Single’ folder, for example:</p><p class="s12" style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">C:\SiliconLabs\SimplicityStudio\&lt;version&gt;\developer\sdks\gecko_sdk_suite\&lt;ver- sion&gt;\platform\bootloader\sample-apps\bootloader-storage-spiflash-single</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Open the folder that corresponds to your board and part number and select the .s37 file, for example:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">\\efr32mg12p332f1024gl125-brd4162a\bootloader-storage-spiflash-single-combined.s37</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Check <b>Erase Chip</b>, to make sure that the main flash block is erased before your new image is uploaded. New users will typically always check this.</p><ul id="l23"><li><p style="padding-top: 3pt;padding-left: 51pt;text-indent: -14pt;text-align: left;">The <b>After uploading </b>options are <b>Run </b>(begin executing the code immediately) and <b>Halt </b>(wait for an event, such as a debugger to connect or manual initiation of a boot sequence). During initial development you will typically leave this set to <b>Run</b>.</p></li><li><p style="padding-bottom: 4pt;padding-left: 37pt;text-indent: 0pt;line-height: 177%;text-align: left;">The Flash options determine the storage location, and are <b>Internal </b>and <b>External SPI</b>. Leave the option set to <b>Internal</b>. Your completed dialog should resemble the following:</p><p style="padding-left: 85pt;text-indent: 0pt;text-align: left;"><span><img width="547" height="360" alt="image" src="qsg106-efr32-zigbee-pro/Image_036.jpg"/></span></p></li></ul></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Click <b>OK. </b>Load progress is shown in the lower right. When the load progress clears, on the WSTK you know that the application has loaded if LED1 is blinking slowly on and off.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="716" height="413" alt="image" src="qsg106-efr32-zigbee-pro/Image_037.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: justify;">You can also right-click on the device and select <b>Launch Console</b>. In the console window, you will see four tabs: Serial 0 (the Virtual UART interface), Serial 1 (the physical UART interface), Admin (where you can configure the debug adapter such as the WSTK for EFR32), and Debug (where you see raw binary data over the debug interface). Click the Serial 1 tab, and press enter. You should see a prompt that corresponds to the project name. Note that the icons next to the device are now green, indicating a serial connection to the console.</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="718" height="461" alt="image" src="qsg106-efr32-zigbee-pro/Image_038.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Note: <span class="p">Before you can load a different application, you must disconnect from the console. Right-click the device and select </span>Disconnect<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><a href="#bookmark37" class="s10">Now repeat the procedure for the Z3Light example, by clicking Launcher in the upper right, and following the steps beginning in section </a>Starting an Example in SSv5 <a href="#bookmark38" class="s10">or </a><a href="#bookmark38">Starting an Example in SSv4</a></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Since Simplicity Studio remembers your last download location and you are using identical parts for the light and switch devices, it is more efficient to check and select the bootloader image first, and then browse to your application.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 48pt;text-indent: 0pt;text-align: left;"><span><img width="656" height="373" alt="image" src="qsg106-efr32-zigbee-pro/Image_039.jpg"/></span></p><p style="padding-top: 5pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Z3Light also blinks LED1, and after you launch the console you can see the name of the project in a prompt on the Serial1 tab of a connected console.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 44pt;text-indent: 0pt;text-align: left;"><span><img width="651" height="418" alt="image" src="qsg106-efr32-zigbee-pro/Image_040.jpg"/></span></p></li></ol></li></ol></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark41">Creating a Network</a><a name="bookmark42">&zwnj;</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Once you have downloaded both the light and switch applications to different devices, you can create a network. Make sure that the switch device is close to the light device.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the light application boots it immediately forms its own distributed network and advertises itself as a find-and-bind target. Go back to the switch console so you can observe the events. On the switch device, press button 1 to initiate commissioning. You will see the process occur and then an indicator that commissioning has been successful. The results should indicate 0x00 (success), not 0x01 (failure).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="459" alt="image" src="qsg106-efr32-zigbee-pro/Image_041.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">The light only advertises for a three-minute window, so if you got interrupted and then commissioning fails, try pressing any button on the light device to re-start advertising.</span></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Now, if you press button 0 on the switch, LED0 on the light toggles on and off, and you can see the activity on both the switch console and the light console.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><span><img width="710" height="450" alt="image" src="qsg106-efr32-zigbee-pro/Image_042.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="438" alt="image" src="qsg106-efr32-zigbee-pro/Image_043.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 4pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">You can see a message such as the following, indicating you are sending an On/Off toggle command to the light:</p><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">T00000000:RX len 5, ep 01, clus 0x0006 (On/off) FC 08 seq 0C cmd 0B payload[02 00 ]</p></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark43">Using the Network Analyzer</a><a name="bookmark44">&zwnj;</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Now that your network is set up, you can evaluate the data being transmitted using the Network Analyzer tool. Network Analyzer helps you debug network connectivity by displaying radio packets and certain debug interface events in a format that is easy to visualize and analyze.</p><ol id="l24"><li><p class="s14" style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: justify;">	<span class="p">Click the Launcher button in the upper right and select Network Analyzer from the Tools menu. The Network Analyzer opens with your console window(s) still displaying data.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="718" height="461" alt="image" src="qsg106-efr32-zigbee-pro/Image_044.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Make sure that Network Analyzer is set to decode the correct protocol. Select <b>Window &gt; Preferences &gt; Network Analyzer &gt; Decoding &gt; Stack Versions</b>, and verify it is set correctly. If you need to change it, click the correct stack, click <b>Apply</b>, and then <b>OK</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Note: <span class="p">If you are working with a Zigbee+Bluetooth Dynamic Multiprotocol application, </span>Auto-detecting decoder stack <span class="p">must be selected.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 166pt;text-indent: 0pt;text-align: left;"><span><img width="341" height="374" alt="image" src="qsg106-efr32-zigbee-pro/Image_045.jpg"/></span></p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">To make sure that packets decode correctly, manually enter the NWK key. In either the Switch or Light console window, type the following, being sure to include the ‘s’ in ‘keys’:</p><p class="s11" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Keys print</p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">In the information returned, find the network key and copy it:</p><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">NWK Key: EF DE 0C 69 5B 72 6E C4 41 27 C6 E6 F1 36 26 26</p></li><li><p style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">In Window &gt; Preferences, open Network Analyzer &gt; Decoding &gt; Security Keys, click <b>New</b>, name the new entry, and paste the copied key into it. Click <b>Apply</b>. Click <b>OK </b>to leave.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 155pt;text-indent: 0pt;text-align: left;"><span><img width="367" height="321" alt="image" src="qsg106-efr32-zigbee-pro/Image_046.jpg"/></span></p></li><li><p style="padding-top: 6pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Right-click on the light or the switch device, and select <b>Start Capture</b>. Do the same for the other device.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">If you are in an environment with a number of wireless devices, you may have a very noisy Network Analyzer environment, as reflected both in the event traffic and in the map. To show additional information in the map, click on the map.</p><p style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">On the toolbar, click the PAN ID button, circled in the following image.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="168" alt="image" src="qsg106-efr32-zigbee-pro/Image_047.jpg"/></span></p></li><li><p style="padding-top: 8pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Right-click on the representation of your Switch device (the dot that has the same ISA3 adapter name or WSTK name or J-Link serial number as the device) and select <b>Show only this PAN</b>.</p></li></ol><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">To filter transactions:</p><ol id="l25"><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">Press button 0 on the switch to get a complete transaction (in blue).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="720" height="462" alt="image" src="qsg106-efr32-zigbee-pro/Image_048.png"/></span></p></li><li><p style="padding-top: 5pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Click on one of the blue transactions.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">In the Event Detail, expand IEEE802.15.4 and scroll down until you see the Destination PAN ID</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Right-click on it, and select <b>Add to filter</b>.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Apply the filter by clicking the icon next to the green filter expression field, circled in the following image.</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="180" alt="image" src="qsg106-efr32-zigbee-pro/Image_049.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Now when you press button 0 you can clearly see each event associated with the transaction.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><span><img width="678" height="435" alt="image" src="qsg106-efr32-zigbee-pro/Image_050.jpg"/></span></p><p style="padding-top: 5pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">When analyzing more complex networks, you can drag and reposition the items shown in the map. By right-clicking on a device, you can also show connectivity and add labels. Labelling is useful not only in map, but also in the log. To label the full log, click <b>From beginning</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 166pt;text-indent: 0pt;text-align: left;"><span><img width="337" height="143" alt="image" src="qsg106-efr32-zigbee-pro/Image_051.jpg"/></span></p></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark45">Next Steps</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l26"><li><p class="s7" style="padding-top: 10pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark46">Example Applications</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Explore configuring the example application to meet your needs. Much of the software configuration can be done through plugins. Select a plugin to see more information about it and its configuration options, if any.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="404" alt="image" src="qsg106-efr32-zigbee-pro/Image_052.jpg"/></span></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark47">Hardware Configurator</a><a name="bookmark49">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Simplicity Studio offers a Hardware Configurator tool that allows you to easily configure new peripherals or change the properties of existing ones. Hardware Configurator options are available on many of the HAL and I/O plugins.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="716" height="408" alt="image" src="qsg106-efr32-zigbee-pro/Image_053.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 59pt;text-indent: -36pt;text-align: left;">Note<span class="p">: If you change hardware configuration options your changes are saved to a temporary file. In order to have the changes included in the project, you must check the Overwrite checkbox in the following dialog, displayed at the end of file generation.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 94pt;text-indent: 0pt;text-align: left;"><span><img width="523" height="151" alt="image" src="qsg106-efr32-zigbee-pro/Image_054.gif"/></span></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">You can also open the Hardware Configurator tool by double-clicking on the .hwconf file that was generated along with your other project files or by clicking <b>Open Hardware Configurator </b>on the HAL tab (scroll down to the bottom of the tab). Some configuration options are only available through the Hardware Configurator tool. Click <b>DefaultMode Peripherals </b>under the pin graphic to change to a peripherals view.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="721" height="435" alt="image" src="qsg106-efr32-zigbee-pro/Image_055.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">See <i>AN1115: Configuring Peripherals for 32-Bit Devices in Simplicity Studio </i>for more information about the Hardware Configurator both within the Simplicity IDE and as a separate tool.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark48">Energy Profiler</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You may also want to explore using the Energy Profiler tool. Energy Profiler provides energy debugging capability by displaying graphical real-time energy consumption information. This can be particularly useful for developing a low-power application. See <i>UG343: Multi-Node Energy Profiler User’s Guide </i>for more information.</p></li></ol></li><li><h4 style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: left;"><a name="bookmark50">APPENDIX: SSv4 Installation and Overview</a><a name="bookmark57">&zwnj;</a></h4><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l27"><li><p class="s7" style="padding-top: 10pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark51">Install Simplicity Studio and the EmberZNet PRO Stack</a></p><ol id="l28"><li><p style="padding-top: 5pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Run the Simplicity Studio installation application.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">When the Simplicity Studio installer first launches, it presents a License Agreement dialog. Accept the terms of the agreement and click <b>Nex</b>t &gt;.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 144pt;text-indent: 0pt;text-align: left;"><span><img width="393" height="300" alt="image" src="qsg106-efr32-zigbee-pro/Image_056.gif"/></span></p></li><li><p style="padding-top: 6pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Choose a destination location, click <b>Next &gt; </b>and then click <b>Install</b>.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">When the application launches, you are invited to log in. Log in using your support account username and password. Although you can skip log in here, you must be logged in and have registered your development kit to download a protected stack such as Em- berZNet PRO.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 141pt;text-indent: 0pt;text-align: left;"><span><img width="397" height="372" alt="image" src="qsg106-efr32-zigbee-pro/Image_057.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">After login, Simplicity Studio adds software information. Once initial software installation is complete, Simplicity Studio checks for connected hardware. If you have the WSTK connected by USB cable, Simplicity Studio will detect the USB cable and prompt you to download a Device Inspector. Click <b>Yes</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 131pt;text-indent: 0pt;text-align: left;"><span><img width="429" height="123" alt="image" src="qsg106-efr32-zigbee-pro/Image_058.jpg"/></span></p></li><li><p style="padding-top: 6pt;padding-left: 41pt;text-indent: -18pt;text-align: justify;">After some additional items are installed, you are offered the option of installing by product group (step 7) or installing by device (step 8). <b>Install by Product Group </b>gives you a more targeted set of installation options.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 93pt;text-indent: 0pt;text-align: left;"><span><img width="536" height="282" alt="image" src="qsg106-efr32-zigbee-pro/Image_059.jpg"/></span></p><p style="padding-top: 6pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Throughout these procedures at any time you can click Home (<span><img width="12" height="11" alt="image" src="qsg106-efr32-zigbee-pro/Image_060.gif"/></span>) to return to this dialog.</p></li><li><p style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: justify;">If you click <b>Install by Product Group </b>you are offered a list of product groups. Click the SDKs you want to install, or click Wireless &amp; RF to check all. Note that if you plan to work on Dynamic Multiprotocol examples you must install both the Zigbee and Bluetooth product groups. Click <b>Next </b>and go to step 9.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="716" height="397" alt="image" src="qsg106-efr32-zigbee-pro/Image_061.jpg"/></span></p></li><li><p style="padding-top: 8pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">If you click <b>Install by Device</b>, an Install Device Support dialog appears. After a short delay, it shows your connected device. If the connected device does not show, click <b>Refresh</b>. Select either a connected device, or search for a product and select it. When a product is selected click <b>&gt;&gt; </b>to add it to the Selected Device pane. Simplicity Studio calculates available space required for installation. You can also click a selected device and click <b>&lt;&lt; </b>to remove it. Click <b>Next </b>to continue.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="718" height="323" alt="image" src="qsg106-efr32-zigbee-pro/Image_062.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 41pt;text-indent: -18pt;text-align: left;">The next dialog varies depending on whether you have signed in and registered your kit. If you have not signed in, you have no access to restricted content and must sign in first</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 173pt;text-indent: 0pt;text-align: left;"><span><img width="323" height="361" alt="image" src="qsg106-efr32-zigbee-pro/Image_063.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">If you have signed in but not registered the kit, you can see some restricted content but not EmberZNet. Click <b>Register Kit</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 175pt;text-indent: 0pt;text-align: left;"><span><img width="315" height="352" alt="image" src="qsg106-efr32-zigbee-pro/Image_064.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">If you have already signed in and registered your kit, and see EmberZNet on the list of accessible components, click <b>Next</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 170pt;text-indent: 0pt;text-align: left;"><span><img width="326" height="365" alt="image" src="qsg106-efr32-zigbee-pro/Image_065.png"/></span></p><p style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">The <b>Installation Options </b>dialog shows the tools and software packages that can be installed (your versions may be different). The following figure shows Installation options after selecting the Zigbee product group.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 182pt;text-indent: 0pt;text-align: left;"><span><img width="292" height="327" alt="image" src="qsg106-efr32-zigbee-pro/Image_066.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">The following figure show Installation Options after selecting an EFR32MG device.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: center;">b) <span><img width="369" height="336" alt="image" src="qsg106-efr32-zigbee-pro/Image_067.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 37pt;text-indent: 0pt;text-align: justify;">In both views you can uncheck anything you don’t want to install. If you have installed by Product Group, the selection is filtered more specifically to your needs than if you have installed by device, and installing all checked options is recommended. If you have installed by device, and are unchecking items:</p><ul id="l29"><li><p style="padding-top: 3pt;padding-left: 51pt;text-indent: -14pt;text-align: justify;">If you plan to use GCC, leave GNU ARM Toolchain checked.</p></li><li><p style="padding-left: 51pt;text-indent: -14pt;text-align: justify;">If you plan to work on Dynamic Multiprotocol examples, leave Bluetooth SDK checked.</p><p style="padding-top: 8pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Click <b>Next &gt;</b>.</p><p class="s7" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">Note: <span class="p">Previous stack versions are shown under </span>Other Options<span class="p">.</span></p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -18pt;text-align: left;">Studio displays a Review Licenses dialog. Accept the licenses shown and click <b>Finish</b>. Note that this dialog will present again if in the future you install a component with a separate license.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 141pt;text-indent: 0pt;text-align: left;"><span><img width="397" height="325" alt="image" src="qsg106-efr32-zigbee-pro/Image_068.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 37pt;text-indent: 0pt;text-align: left;">Installation takes several minutes. During installation, Simplicity Studio offers you viewing and reading options to learn more about the environment.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 146pt;text-indent: 0pt;text-align: left;"><span><img width="391" height="272" alt="image" src="qsg106-efr32-zigbee-pro/Image_069.jpg"/></span></p></li><li><p style="padding-top: 6pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">After installation is complete, restart Simplicity Studio.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">When Simplicity Studio restarts, you are invited to take a tour. To clear this option now or at any time during or after the tour, click</p><p class="s7" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">Exit tour<span class="p">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 189pt;text-indent: 0pt;text-align: left;"><span><img width="278" height="102" alt="image" src="qsg106-efr32-zigbee-pro/Image_070.jpg"/></span></p></li><li><p style="padding-top: 7pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">The Launcher perspective opens, but it is not yet fully populated. Click a device in the Debug Adapters tab or find and select a part in the My Products tab. Note that USB-connected WSTK devices are identified as J-Link devices as shown.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="705" height="470" alt="image" src="qsg106-efr32-zigbee-pro/Image_071.png"/></span></p></li><li><p class="s9" style="padding-top: 7pt;padding-left: 40pt;text-indent: -18pt;text-align: justify;"><a href="#bookmark59" class="s10">The Launcher perspective then is populated with the software components and functionality associated with your hardware and stack. Note if you see Stackless applications, click the link to change the preferred SDK, as described in section </a><a href="#bookmark59" class="a">8.4 Changing the Preferred </a>SDK. <a href="#bookmark60" class="s10">Update your device firmware as described in section </a><a href="#bookmark60" class="a">8.5 Updating Adapter Firmware</a><a href="#bookmark60" class="s10">.</a></p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="475" alt="image" src="qsg106-efr32-zigbee-pro/Image_072.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark52">Functionality in the Launcher Perspective</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Perspectives are made up of a number of tiles or panes, called views, as well as the content in those views. You can perform a number of functions in the Launcher Perspective, shown in the following figure. Additional information on some of these is provided later in the section. Note: Your installed version may be different than the version shown in the graphics in this section.</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">On the toolbar (1) you can:</p><ul id="l30"><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Sign in or out</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Open application settings (cog icon)</p></li><li><p class="s9" style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;"><a href="#bookmark58" class="s10">Update your software and firmware (down-arrow icon, see section </a><a href="#bookmark58" class="a">8.3 </a>Updating Software/New Elements <span style=" color: #000;">for more information)</span></p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Open the Tools menu (wrench icon) to access tools such as Simplicity Commander or Energy Profiler.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Search for information online, including entries in the Community forums.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Change perspectives (2). As you open the Simplicity IDE or other tools, buttons for their perspectives are displayed in the upper right. Use those buttons to easily navigate back to the Launcher perspective or to other perspectives. You can change the layouts of various perspectives by expanding or relocating views, or adding or removing views. To return to the default layout, right-click the active perspective button in the upper right and select <b>Reset</b>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In the main view you can:</p></li><li><p class="s9" style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;"><a href="#bookmark59" class="s10">Change your preferred SDK (3, see section </a><a href="#bookmark59" class="a">8.4 Changing the Preferred SDK</a> <span style=" color: #000;">for more information - legacy functionality, rarely used).</span></p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;">Change debug mode (4).</p></li><li><p class="s9" style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: left;"><a href="#bookmark60" class="s10">Update adapter firmware (5, see section </a><a href="#bookmark60" class="a">8.5 </a>Updating Adapter Firmware <span style=" color: #000;">for more information).</span></p></li><li><p style="padding-top: 7pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Create solutions of multiple parts (6). If you are developing for complex networks with a number of different parts involved, you can add them all to the solution and then select the one you are working on from the list. You do not need to have the hardware connected to your computer.</p></li><li><p style="padding-top: 3pt;padding-left: 37pt;text-indent: -14pt;text-align: justify;">Access demos, examples, documentation, and other resources from the Getting Started and other tabs (7).</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;line-height: 6pt;text-align: left;"><span><img width="45" height="8" alt="image" src="qsg106-efr32-zigbee-pro/Image_073.gif"/></span></p><p class="s9" style="padding-top: 2pt;padding-left: 37pt;text-indent: 0pt;text-align: left;"><a href="#bookmark61" class="s10">Use the above controls to manage groups of items (Collapse All, Expand All, Customize, and Show All, respectively). See section </a><a href="#bookmark61" class="a">8.6 </a>Accessing Documentation and Other Resources <span style=" color: #000;">for more information.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="717" height="411" alt="image" src="qsg106-efr32-zigbee-pro/Image_074.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: justify;"><a name="bookmark53">Updating Software/New Elements</a><a name="bookmark58">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The Update Software icon will be red if updates to installed components are available. If Simplicity Studio detects an available update, and you are in another perspective, you will be notified that an update is available.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">To download a new or updated component, click the Update Software icon. Click Package Manager. Note: If you are installing based on a new device, or want to install a new product group, you can do so through this dialog as well. In subsequent dialogs, click Home ( <span><img width="12" height="11" alt="image" src="qsg106-efr32-zigbee-pro/Image_075.gif"/></span>)</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">to return to this dialog. Note that Simplicity Studio does not show you options, such as the GNU ARM Toolchain, that have already been installed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 137pt;text-indent: 0pt;text-align: left;"><span><img width="412" height="301" alt="image" src="qsg106-efr32-zigbee-pro/Image_076.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Simplicity Studio shows you available updates or SDKs in the Package Manager dialog. You can update all or select individual updates for installation. Click the tabs in the Package Manager dialog to see other components available for installation. Use the filters to reduce long lists.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 132pt;text-indent: 0pt;text-align: left;"><span><img width="427" height="385" alt="image" src="qsg106-efr32-zigbee-pro/Image_077.jpg"/></span></p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark54">Changing the Preferred SDK</a><a name="bookmark59">&zwnj;</a></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Use this function if on startup Simplicity Studio defaults to Stackless applications. Otherwise, most Silicon Labs protocol stack users will have one SDK available to them, the Gecko SDK Suite.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><span><img width="642" height="307" alt="image" src="qsg106-efr32-zigbee-pro/Image_078.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Within that suite you can have multiple protocols installed. The protocol used in any given instance is controlled either by the example you select, or the stack you select if you go through the ‘New Project’ interface. In general, you should add or remove protocol stacks through the Simplicity Studio update manager. If you need to install a stack or the Gecko SDK Suite outside of the normal installation process, you will receive separate instructions.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s7" style="padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark55">Updating Adapter Firmware</a><a name="bookmark60">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Initially the Launcher perspective may display “No local adapter firmware available.” Click <b>Download </b>to download any updates.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="142" alt="image" src="qsg106-efr32-zigbee-pro/Image_079.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">If an update is available, click <b>Install </b>to install the firmware.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="710" height="146" alt="image" src="qsg106-efr32-zigbee-pro/Image_080.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">Once you have installed a current update, the version is displayed. Simplicity Studio will notify you if another firmware update is available.</p></li><li><p class="s7" style="padding-top: 7pt;padding-left: 51pt;text-indent: -28pt;text-align: left;"><a name="bookmark56">Accessing Documentation and Other Resources</a><a name="bookmark61">&zwnj;</a></p></li></ol></li></ol><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The <b>Getting Started </b>tab provides access to demos, example applications, and stack-related documentation. To show/hide specific cat- egories, click the checkbox. Select or deselect categories, then click <b>OK</b>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 163pt;text-indent: 0pt;text-align: left;"><span><img width="343" height="321" alt="image" src="qsg106-efr32-zigbee-pro/Image_081.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The <b>Documentation </b>tab lists all documentation on the right, including documents on the hardware platform you are using as well as the SDK documents. Documents you select as favorites are shown on the left. Click the star icon on any document to move it to the My Favorite Documents list.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"><span><img width="609" height="374" alt="image" src="qsg106-efr32-zigbee-pro/Image_082.jpg"/></span></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The <b>Compatible Tools </b>tab is an alternative way to access the tools available through the Tools dropdown.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 74pt;text-indent: 0pt;text-align: left;"><span><img width="577" height="355" alt="image" src="qsg106-efr32-zigbee-pro/Image_083.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The <b>Resources </b>tab provides access to support, marketing collateral, and the Silicon Labs community.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 71pt;text-indent: 0pt;text-align: left;"><span><img width="577" height="355" alt="image" src="qsg106-efr32-zigbee-pro/Image_084.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 36pt;text-indent: 0pt;text-align: left;">Simplicity Studio</h2><p class="s15" style="padding-top: 14pt;padding-left: 36pt;text-indent: 0pt;line-height: 122%;text-align: left;">One-click access to MCU and wireless tools, documentation, software, source code libraries &amp; more. Available for Windows, Mac and Linux!</p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="768" height="432" alt="image" src="qsg106-efr32-zigbee-pro/Image_085.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:63.94pt" cellspacing="0"><tr style="height:99pt"><td style="width:98pt" bgcolor="#231F20"><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;"><span><img width="66" height="66" alt="image" src="qsg106-efr32-zigbee-pro/Image_086.png"/></span></p><p style="padding-top: 10pt;padding-left: 1pt;padding-right: 19pt;text-indent: 0pt;text-align: center;"><a href="https://www.silabs.com/solutions/iot" class="s16">IoT Portfolio</a></p><p style="padding-top: 1pt;padding-left: 1pt;padding-right: 19pt;text-indent: 0pt;line-height: 8pt;text-align: center;"><a href="http://www.silabs.com/IoT" class="s17">www.silabs.com/IoT</a></p></td><td style="width:126pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 18pt;padding-right: 8pt;text-indent: 0pt;text-align: center;"><a href="https://www.silabs.com/simplicity" class="s16">SW/HW</a></p><p style="padding-top: 1pt;padding-left: 18pt;padding-right: 8pt;text-indent: 0pt;line-height: 8pt;text-align: center;"><a href="http://www.silabs.com/simplicity" class="s17">www.silabs.com/simplicity</a></p></td><td style="width:126pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 18pt;padding-right: 8pt;text-indent: 0pt;text-align: center;"><a href="https://www.silabs.com/about-us/corporate-responsibility/commitment-to-quality" class="s16">Quality</a></p><p style="padding-top: 1pt;padding-left: 18pt;padding-right: 8pt;text-indent: 0pt;line-height: 8pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s17">www.silabs.com/quality</a></p></td><td style="width:126pt"><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 12pt;text-indent: 0pt;text-align: left;"><a href="https://www.silabs.com/community" class="s16" target="_blank">Support &amp; Community</a></p><p style="padding-top: 1pt;padding-left: 13pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><a href="http://www.silabs.com/community" class="s17">www.silabs.com/community</a></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="qsg106-efr32-zigbee-pro/Image_087.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="qsg106-efr32-zigbee-pro/Image_088.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="qsg106-efr32-zigbee-pro/Image_089.png"/></span></p><p class="s18" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s19" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software imple- menters using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each <span class="s20">specific device, and “Typical” parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the infor</span>- mation supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or <span class="s20">authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required or Life Support Systems without the specific written consent of Silicon Labs. A “Life Support System” is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used </span>in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims <span class="s20">all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications. </span><b>Note: This content may contain offensive terminology that is now obsolete. Silicon Labs is replacing these terms with inclusive language wherever possible. For more </b><span class="s22">information, visit </span><a href="https://www.silabs.com/about-us/inclusive-lexicon-project" class="s24" target="_blank">www.silabs.com/about-us/inclusive-lexicon-project</a></p><p class="s22" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Trademark Information</p><p class="s25" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 117%;text-align: justify;"><span class="s19">Silicon Laboratories Inc.</span>®<span class="s19">, Silicon Laboratories</span>®<span class="s19">, Silicon Labs</span>®<span class="s19">, SiLabs</span>® <span class="s19">and the Silicon Labs logo</span>®<span class="s19">, Bluegiga</span>®<span class="s19">, Bluegiga Logo</span>®<span class="s19">, Clockbuilder</span>®<span class="s19">, CMEMS</span>®<span class="s19">, DSPLL</span>®<span class="s19">, EFM</span>®<span class="s19">, EFM32</span>®<span class="s19">, EFR, Ember</span>®<span class="s20">, Energy Micro, Energy Micro logo and combinations thereof, “the world’s most energy friendly microcontrollers”, Ember</span>®<span class="s19">, EZLink</span>®<span class="s19">, EZRadio</span>®<span class="s19">, EZRadioPRO</span>®<span class="s19">, Gecko</span>®<span class="s19">, Gecko OS, Gecko OS Studio, ISOmodem</span>®<span class="s19">, Precision32</span>®<span class="s19">, ProSLIC</span>®<span class="s19">, Simplicity Studio</span>®<span class="s19">, SiPHY</span>®<span class="s19">, Telegesis, the Telegesis Logo</span>®<span class="s19">, USBXpress</span>® <span class="s19">, Zentri, the Zentri logo and Zentri DMS, Z-Wave</span>®<span class="s19">, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Hold- ings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="148" height="73" alt="image" src="qsg106-efr32-zigbee-pro/Image_090.png"/></span></p><p class="s22" style="padding-top: 5pt;padding-left: 149pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s22" style="padding-left: 149pt;text-indent: 0pt;line-height: 8pt;text-align: left;">USA</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><h3 href="http://www.silabs.com/">www.silabs.com</h3></p></body></html>
