<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>ug101-uart-gateway-protocol-reference</title><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 18pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11.5pt; }
 .a, a { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s7 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s8 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s11 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s12 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s13 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s14 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s15 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s16 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s17 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s18 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s19 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 h2 { color: #FFF; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s20 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s21 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s22 { color: #424242; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s23 { color: #424242; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s24 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s25 { color: #4C4D4F; font-family:"Arial Black", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s27 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s28 { color: #0086DD; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s29 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 4pt; vertical-align: 2pt; }
 h4 { color: #FB1725; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11.5pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt;counter-reset: d2 1; }
 #l3> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l4 {padding-left: 0pt;counter-reset: d2 1; }
 #l4> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l5 {padding-left: 0pt;counter-reset: d2 1; }
 #l5> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l6 {padding-left: 0pt;counter-reset: d2 1; }
 #l6> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 li {display: block; }
 #l7 {padding-left: 0pt;counter-reset: e1 1; }
 #l7> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 #l8 {padding-left: 0pt; }
 #l8> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l9 {padding-left: 0pt;counter-reset: e2 1; }
 #l9> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l10 {padding-left: 0pt; }
 #l10> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l11 {padding-left: 0pt; }
 #l11> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l12 {padding-left: 0pt;counter-reset: e2 1; }
 #l12> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l12> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l13 {padding-left: 0pt; }
 #l13> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l14 {padding-left: 0pt; }
 #l14> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l15 {padding-left: 0pt; }
 #l15> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l16 {padding-left: 0pt; }
 #l16> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l17 {padding-left: 0pt; }
 #l17> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l18 {padding-left: 0pt; }
 #l18> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l19 {padding-left: 0pt; }
 #l19> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l20 {padding-left: 0pt; }
 #l20> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l21 {padding-left: 0pt; }
 #l21> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l22 {padding-left: 0pt; }
 #l22> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l23 {padding-left: 0pt; }
 #l23> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l24 {padding-left: 0pt; }
 #l24> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l25 {padding-left: 0pt; }
 #l25> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l26 {padding-left: 0pt; }
 #l26> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l27 {padding-left: 0pt; }
 #l27> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l28 {padding-left: 0pt; }
 #l28> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l29 {padding-left: 0pt; }
 #l29> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l30 {padding-left: 0pt; }
 #l30> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l31 {padding-left: 0pt;counter-reset: e2 1; }
 #l31> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l31> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l32 {padding-left: 0pt;counter-reset: e3 1; }
 #l32> li>*:first-child:before {counter-increment: e3; content: counter(e3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l32> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l33 {padding-left: 0pt; }
 #l33> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l34 {padding-left: 0pt; }
 #l34> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l35 {padding-left: 0pt; }
 #l35> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l36 {padding-left: 0pt; }
 #l36> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l37 {padding-left: 0pt;counter-reset: e2 1; }
 #l37> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l37> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l38 {padding-left: 0pt;counter-reset: e3 1; }
 #l38> li>*:first-child:before {counter-increment: e3; content: counter(e3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l38> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l39 {padding-left: 0pt; }
 #l39> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l40 {padding-left: 0pt; }
 #l40> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l41 {padding-left: 0pt; }
 #l41> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="ug101-uart-gateway-protocol-reference/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">UG101: UART-EZSP Gateway Protocol Reference</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="ug101-uart-gateway-protocol-reference/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="211" height="1" alt="image" src="ug101-uart-gateway-protocol-reference/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">KEY FEATURES</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="212" height="1" alt="image" src="ug101-uart-gateway-protocol-reference/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Compares the benefits of communications using UART and SPI.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes the EZSP-UART general frame format.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Discusses the various types of frames.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes ASH protocol operations.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Reviews the characteristics of the CONNECTED and FAILED states.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Summarizes configuration parameters.</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;">This document describes the protocol used by the UART-based EmberZNet Serial Pro- tocol (UART-EZSP) to reliably carry commands and responses between a host process- or and a Network Co-Processor (NCP).</p><h3 style="padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><a name="bookmark0">Table of Contents</a></h3><ol id="l2"><li><p style="padding-top: 12pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark2" class="s3">Overview 3</a></p></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark10" class="s3">Frames 4</a></p><ol id="l3"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark11" class="a">Control Byte </a><a href="#bookmark11">4</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark12" class="a">Data Field </a><a href="#bookmark12">4</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark13" class="a">CRC </a><a href="#bookmark13">4</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark14" class="a">Flag Byte </a><a href="#bookmark14">5</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark15" class="a">Frame Lengths </a><a href="#bookmark15">5</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark16" class="a">Frame Numbers </a><a href="#bookmark16">5</a></p></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark24" class="s3">Frame Formats 6</a></p><ol id="l4"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark25" class="a">RST Frame Format </a><a href="#bookmark25">6</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark26" class="a">RSTACK Frame Format </a><a href="#bookmark26">6</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark27" class="a">ERROR Frame Format </a><a href="#bookmark27">7</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark28" class="a">DATA Frame Format </a><a href="#bookmark28">7</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark29" class="a">ACK Frame Format </a><a href="#bookmark29">8</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark30" class="a">NAK Frame Format </a><a href="#bookmark30">8</a></p></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark36" class="s3">Protocol Operations 9</a></p><ol id="l5"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark37" class="a">Sending Frames </a><a href="#bookmark37">9</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:34.6687pt" cellspacing="0"><tr style="height:16pt"><td style="width:195pt"><p style="padding-left: 2pt;text-indent: 0pt;line-height: 12pt;text-align: left;"><a href="#bookmark38" class="s6">4.2 Reserved Bytes and Byte Stuffing</a></p></td><td style="width:312pt"><p class="s7" style="padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: left;">. . . . . . . . . . . . . . . . . . . . . .</p></td><td style="width:24pt"><p style="padding-left: 4pt;padding-right: 1pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><a href="#bookmark38" class="s6">.10</a></p></td></tr><tr style="height:19pt"><td style="width:195pt"><p class="s7" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">4.3 Data Randomization . . . . .</p></td><td style="width:312pt"><p class="s7" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">. . . . . . . . . . . . . . . . . . . . . .</p></td><td style="width:24pt"><p style="padding-top: 2pt;padding-left: 4pt;padding-right: 1pt;text-indent: 0pt;text-align: center;"><a href="#bookmark39" class="s6">.10</a></p></td></tr><tr style="height:16pt"><td style="width:195pt"><p class="s7" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;line-height: 12pt;text-align: left;">4.4 Receiving Frames . . . . . .</p></td><td style="width:312pt"><p class="s7" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: left;">. . . . . . . . . . . . . . . . . . . . . .</p></td><td style="width:24pt"><p style="padding-top: 2pt;padding-left: 4pt;padding-right: 1pt;text-indent: 0pt;line-height: 12pt;text-align: center;"><a href="#bookmark40" class="s6">.11</a></p></td></tr></table></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark52" class="s3">CONNECTED State 12</a></p><ol id="l6"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark53" class="a">Frame Numbers </a><a href="#bookmark53">12</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark54" class="a">Acknowledgements and Frame Numbers </a><a href="#bookmark54">12</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark55" class="a">Piggybacked Acknowledgements </a><a href="#bookmark55">12</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark56" class="a">Sending DATA Frames </a><a href="#bookmark56">12</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark57" class="a">Receiving DATA Frames </a><a href="#bookmark57">13</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark58" class="a">DATA frame Acknowledgement timing </a><a href="#bookmark58">13</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark59" class="a">DATA Frame Flow Control </a><a href="#bookmark59">13</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark60" class="a">Data Exchange Example </a><a href="#bookmark60">14</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark61" class="a">Reject Condition and NAK Frames </a><a href="#bookmark61">15</a></p></li><li><p style="padding-top: 6pt;padding-left: 64pt;text-indent: -27pt;text-align: left;"><a href="#bookmark62" class="a">Retransmitting </a><a href="#bookmark62">16</a></p></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark64" class="s3">FAILED State 18</a></p></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark67" class="s3">Configuration Parameters 19</a></p></li></ol><p class="s8" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Overview</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug101-uart-gateway-protocol-reference/Image_005.png"/></span></p><ol id="l7"><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Overview</a><a name="bookmark2">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Silicon Labs designed the Asynchronous Serial Host (ASH) protocol for network gateway systems in which the host processor is run- ning a standard operating system such as embedded Linux or Windows. This document describes ASH version 2. For information on ASH v3, refer to <i>UG115: ASH v3 Protocol Reference</i>.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The host communicates with a Network Co-Processor (NCP) that runs EmberZNet PRO. The NCP is a chip from the Silicon Labs port- folio of wireless mesh chips which is programmed with Silicon Labs-supplied EmberZNet Serial Protocol (EZSP) UART or SPI NCP firmware.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">EZSP-UART using ASH may be a better choice than the SPI protocol if:</p><ul id="l8"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The Host processor is running a large-scale multi-tasking operating system that can benefit from the protocol’s tolerance for Host response delays.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The serial connection between the Host and the Network Co-Processor is slightly noisy due to a long or unshielded cable.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The Host does not have enough GPIO pins available to implement the SPI interface.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">ASH may not be a good choice in other systems for the following reasons:</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">On some platforms, ASH does not allow the Network Co-Processor to sleep and thus cannot be used on sleepy devices.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Command execution may take longer due to the lower UART speed and the need for messages to be acknowledged.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The Host processor must supply more RAM and program memory, and perform more processing.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The ASH protocol is a data-link layer protocol below EZSP and above the serial device (or UART) driver. The following figure shows the ASH layer’s relationship to other software layers in the Host and Network Co-Processor.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 43pt;text-indent: 0pt;text-align: left;"><span><img width="662" height="281" alt="image" src="ug101-uart-gateway-protocol-reference/Image_006.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 1.1.  ASH Layer Diagram</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The ASH protocol includes features for reliable and efficient communication between the host processor and the Network Co-Process- or:</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Frame-based protocol with only four (4) bytes overhead per message</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">All frames are validated using a 16-bit cyclical redundancy check (CRC)</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Byte stuffing provides binary transparency, so any binary data can be sent and received</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Sliding window acknowledgement performs better than simple stop and wait protocols</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Command responses can be given priority over callbacks to prevent host receive queue overflow</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Acknowledgement timeouts adapt to actual timings</p></li></ul><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Silicon Labs supplies EZSP-UART for the NCP as a program image, and for the host as C-language software in source form that is compatible with both Linux and Windows. The ASH host software is ready to compile and run on most PCs, and can usually be adapted to a particular embedded host processor with a few simple edits.</p></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark3">Frames</a><a name="bookmark10">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">A <i>frame </i>is the smallest unit transmitted between the Host and the NCP. A frame is composed of a Control Byte, possibly a Data Field (depending on the frame type), a 2-byte CRC, and a Flag Byte.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The following figure illustrates the general format used by all ASH frame types.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="719" height="137" alt="image" src="ug101-uart-gateway-protocol-reference/Image_007.jpg"/></span></p><p class="s11" style="padding-top: 7pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 2.1.  General ASH Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l9"><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark4">Control Byte</a><a name="bookmark11">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Control Byte identifies the type of frame and contains various bit fields as shown in the following table. Subsequent sections pro- vide detailed information on the different frame Control Bytes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 160pt;text-indent: 0pt;text-align: center;">Table 2.1.  Frame Control Bytes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:30pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Frame Type</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: left;">Data Field Size (Bytes)</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Sent By</p></td><td style="width:367pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="8" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Control Byte Value (Bit Field)</p></td></tr><tr style="height:19pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b7</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b6</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b5</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b4</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b3</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b2</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">b0</p></td></tr><tr style="height:30pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">DATA</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 27pt;text-indent: 0pt;text-align: left;">varies: 3-128</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NCP, Host</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:137pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">frmNum</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">reTx</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ackNum</p></td></tr><tr style="height:19pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ACK</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NCP, Host</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">res</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">nRdy</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ackNum</p></td></tr><tr style="height:19pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NAK</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NCP, Host</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">res</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">nRdy</p></td><td style="width:138pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" colspan="3"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ackNum</p></td></tr><tr style="height:19pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">RST</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Host</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td></tr><tr style="height:19pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">RSTACK</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NCP</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td></tr><tr style="height:19pt"><td style="width:69pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ERROR</p></td><td style="width:57pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">2</p></td><td style="width:58pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NCP</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:45pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1</p></td><td style="width:46pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0</p></td></tr></table><ul id="l10"><li><p class="s16" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">frmNum <span class="p">- DATA frame’s 3-bit sequence number</span></p></li><li><p class="s16" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">ackNum <span class="p">- acknowledges receipt of DATA frames up to, but not including, ackNum</span></p></li><li><p class="s16" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">reTx <span class="p">- set to 1 in a retransmitted DATA frame; 0 otherwise</span></p></li><li><p class="s16" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">nRdy <span class="p">– host sets to 1 if to inhibit the NCP from sending callbacks frames to the host (always 0 in frames sent by the NCP)</span></p></li><li><p class="s16" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">res <span class="p">- reserved for future use: may be either 0 or 1</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark5">Data Field</a><a name="bookmark12">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Data Field carries information for DATA, RSTACK, and ERROR frame types. The length of the Data Field is two (2) bytes for RSTACK and ERROR frame types. For DATA frames, the length of the Data Field is variable and sized to fit the EZSP frame being sent.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark6">CRC</a><a name="bookmark13">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A 16-bit CRC is computed on all bytes in a frame preceding the CRC, excluding bytes added by byte stuffing. The standard CRC- CCITT (g(x) = x16 + x12 + x5 + 1) is initialized to 0xFFFF. The most significant byte precedes the least significant byte (big-endian mode).</p></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark7">Flag Byte</a><a name="bookmark14">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A Flag Byte, 0x7E, marks the end of a frame. Consecutive Flag Bytes after the first Flag Byte are ignored.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-top: 5pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark8">Frame Lengths</a><a name="bookmark15">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The length of a frame is at least four bytes—Control Byte, two CRC bytes, and a Flag Byte—plus the length of the Data Field, if any:</p><ul id="l11"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RST, ACK, and NAK frames are 4 bytes long (no Data Field).</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">RSTACK and ERROR frames are 6 bytes long (2-byte Data Field).</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">DATA frames range from 7 through 132 bytes long (3- to 128-byte Data Field).</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-top: 5pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark9">Frame Numbers</a><a name="bookmark16">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">DATA frames are numbered using 3-bit sequence numbers that count up from 0 to 7 and then wrap back to 0. They are used to ac- knowledge properly received frames and allow detection of a missing frame. The frame number is assigned when a frame is first sent, and stays the same if the frame is retransmitted.</p></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark17">Frame Formats</a><a name="bookmark24">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">This section describes each type of ASH frame, including its format and purpose, the notation used in documentation, and some exam- ples.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l12"><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark18">RST Frame Format</a><a name="bookmark25">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The following figure illustrates the format of the RST frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 180pt;text-indent: 0pt;text-align: left;"><span><img width="300" height="121" alt="image" src="ug101-uart-gateway-protocol-reference/Image_008.jpg"/></span></p><p class="s11" style="padding-top: 7pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 3.1.  RST Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l13"><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">Purpose: Requests the NCP to perform a software reset (valid even if the NCP is in the FAILED state).</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Notation used in documentation: RST()</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Example: <span class="s16">C0 38 BC 7E</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark19">RSTACK Frame Format</a><a name="bookmark26">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The following figure illustrates the format of the RSTACK frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 138pt;text-indent: 0pt;text-align: left;"><span><img width="412" height="120" alt="image" src="ug101-uart-gateway-protocol-reference/Image_009.jpg"/></span></p><p class="s11" style="padding-top: 7pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 3.2.  RSTACK Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l14"><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">Purpose: Informs the Host that the NCP has reset and the reason for the reset.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Data field:</p><ul id="l15"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">Version: Fixed at 0x02 in this version of ASH</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;"><a href="#bookmark65" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Reset Code: See </a><a href="#bookmark65" class="s17">Table 6.1 Reset and Error Codes on page 18</a></p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">Notation used in documentation: RSTACK(V, C)</p><ul id="l16"><li><p style="padding-top: 3pt;padding-left: 59pt;text-indent: -9pt;text-align: left;">V: version</p></li><li><p style="padding-top: 3pt;padding-left: 59pt;text-indent: -9pt;text-align: left;">C: reset code</p></li></ul></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Example: <span class="s16">C1 02 02 9B 7B 7E</span></p></li></ul></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark20">ERROR Frame Format</a><a name="bookmark27">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following figure illustrates the format of the ERROR frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 126pt;text-indent: 0pt;text-align: left;"><span><img width="442" height="128" alt="image" src="ug101-uart-gateway-protocol-reference/Image_010.jpg"/></span></p><p class="s11" style="padding-top: 8pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 3.3.  ERROR Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l17"><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">Purpose: Informs the Host that the NCP detected a fatal error and is in the FAILED state.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Data field:</p><ul id="l18"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">Version: Fixed at 0x02 in this version of ASH</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;"><a href="#bookmark65" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Error Code: See </a><a href="#bookmark65" class="s17">Table 6.1 Reset and Error Codes on page 18</a></p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">Notation used in documentation: ERROR(V, C )</p><ul id="l19"><li><p style="padding-top: 3pt;padding-left: 59pt;text-indent: -9pt;text-align: left;">V: version</p></li><li><p style="padding-top: 3pt;padding-left: 59pt;text-indent: -9pt;text-align: left;">C: reset code</p></li></ul></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Example: <span class="s16">C2 01 52 FA BD 7E</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark21">DATA Frame Format</a><a name="bookmark28">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The following figure illustrates the format of the DATA frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 96pt;text-indent: 0pt;text-align: left;"><span><img width="524" height="108" alt="image" src="ug101-uart-gateway-protocol-reference/Image_011.jpg"/></span></p><p class="s11" style="padding-top: 6pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 3.4.  DATA Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l20"><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">Purpose: Carries all EZSP frames.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Data Field:</p><ul id="l21"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">EZSP frame: exclusive-OR’ed with a pseudo-random sequence (see the section Sending frames)</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Notation used in documentation: DATA(F, A, R)</p><ul id="l22"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">F: frame number (frmNum)</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">A: acknowledge number (ackNum)</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">R: retransmit flag (reTx)</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Examples — without pseudo-random sequence applied to Data Field:</p><ul id="l23"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">EZSP “version” command: 00 00 00 02</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">DATA(2, 5, 0) = 25 00 00 00 02 1A AD 7E</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">EZSP “version” response: 00 80 00 02 02 11 30</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">DATA(5, 3, 0) = 53 00 80 00 02 02 11 30 63 16 7E</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Examples — with pseudo-random sequence applied to Data Field:</p><ul id="l24"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">EZSP “version” command: 00 00 00 02</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">DATA(2, 5, 0) = 25 42 21 A8 56 A6 09 7E</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">EZSP “version” response: 00 80 00 02 02 11 30</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">DATA(5, 3, 0) = 53 42 A1 A8 56 28 04 82 96 23 7E</p></li></ul></li></ul></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark22">ACK Frame Format</a><a name="bookmark29">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following figure illustrates the format of the ACK frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 176pt;text-indent: 0pt;text-align: left;"><span><img width="308" height="124" alt="image" src="ug101-uart-gateway-protocol-reference/Image_012.jpg"/></span></p><p class="s11" style="padding-top: 8pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 3.5.  ACK Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l25"><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">Purpose: Acknowledges receipt of a valid DATA frame.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Notation used in documentation: ACK(A)+/-</p><ul id="l26"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">A: acknowledge number (ackNum)</p><p style="padding-top: 3pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">• +/-: not ready flag (nRdy); “+” = “0” = “ready”; “-” = “1” = “not ready”</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Examples:</p><ul id="l27"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">ACK(1)+ :81 60 59 7E</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">ACK(6)– : 8E 91 B6 7E</p></li></ul></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-top: 5pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark23">NAK Frame Format</a><a name="bookmark30">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following figure illustrates the format of the NAK frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 184pt;text-indent: 0pt;text-align: left;"><span><img width="290" height="117" alt="image" src="ug101-uart-gateway-protocol-reference/Image_013.jpg"/></span></p><p class="s11" style="padding-top: 7pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 3.6.  NAK Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l28"><li><p style="padding-left: 35pt;text-indent: -9pt;text-align: left;">Purpose: Indicates receipt of a DATA frame with an error or that was discarded due to lack of memory.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Notation used in documentation: NAK(A)+/-</p><ul id="l29"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">A: acknowledge number (ackNum)</p><p style="padding-top: 3pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">• +/-: not ready flag (nRdy); “+” = “0” = “ready”; “-” = “1” = “not ready”</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Examples:</p><ul id="l30"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">ACK(6)+ : A6 34 DC 7E</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">ACK(5)- : AD 85 B7 7E</p></li></ul></li></ul></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark31">Protocol Operations</a><a name="bookmark36">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">This section describes how the ASH protocol sends and receives frames, including the method used to achieve binary data transparen- cy.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l31"><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark32">Sending Frames</a><a name="bookmark37">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Before ASH sends a DATA frame, it performs this series of steps:</p><ol id="l32"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The Control Byte is added before the Data Field. The frmNum field is set to the last frame transmitted plus one, and the ackNum field is set to the number of the next frame expected to be received. The reTx flag is clear.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;"><a href="#bookmark39" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">The Data Field is exclusive-OR’ed with a pseudo-random sequence (see </a><a href="#bookmark39" class="s17">Data </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Randomization</span>).</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The two-byte CRC of the Control Byte plus the Data Field is computed and appended after the Data Field.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;"><a href="#bookmark38" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">The frame is byte stuffed to remove reserved byte values (see </a><a href="#bookmark38" class="s17">Reserved Bytes and Byte </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Stuffing</span>).</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">A Flag Byte is added after the CRC.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">If a DATA frame is retransmitted, the process is the same except for step 1. The frmNum field retains the same value as when the frame was first transmitted, and the reTx bit is set. The ackNum is the current value as in normal transmission.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Other frame types omit step 2 and have differently formatted Control Bytes, but otherwise they use the same process.</p></li></ol></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark33">Reserved Bytes and Byte Stuffing</a><a name="bookmark38">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">ASH reserves certain byte values for special functions. If bytes with these values happen to occur within a frame, ASH uses a process known as byte stuffing to replace those bytes so they have non-reserved values. Byte stuffing is performed on the entire ASH frame except for the Flag Byte. The receiver reverses the process to recover the original frame contents.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The following table lists the byte values that are reserved in ASH.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 159pt;text-indent: 0pt;text-align: center;">Table 4.1.  ASH Reserved Byte Values</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Value</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Special Function</p></td></tr><tr style="height:30pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x7E</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 16pt;text-indent: 0pt;text-align: left;">Flag Byte: Marks the end of a frame. When a Flag Byte is received, the data received since the last Flag Byte or Cancel Byte is tested to see whether it is a valid frame.</p></td></tr><tr style="height:40pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x7D</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 12pt;text-indent: 0pt;text-align: left;">Escape Byte: Indicates that the following byte is escaped. If the byte after the Escape Byte is not a reserved byte, bit 5 of the byte is complemented to restore its original value. If the byte after the Escape Byte is a reserved value, the Escape Byte has no effect.</p></td></tr><tr style="height:19pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x11</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">XON: Resume transmission. Used in XON/XOFF flow control. Always ignored if received by the NCP.</p></td></tr><tr style="height:19pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x13</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">XOFF: Stop transmission. Used in XON/XOFF flow control. Always ignored if received by the NCP.</p></td></tr><tr style="height:30pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x18</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;text-align: left;">Substitute Byte: Replaces a byte received with a low-level communication error (e.g., framing error) from the UART. When a Substitute Byte is processed, the data between the previous and the next Flag Bytes is ignored.</p></td></tr><tr style="height:40pt"><td style="width:54pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s15" style="padding-top: 5pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x1A</p></td><td style="width:497pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 15pt;text-indent: 0pt;text-align: justify;">Cancel Byte: Terminates a frame in progress. A Cancel Byte causes all data received since the previous Flag Byte to be ignored. Note that as a special case, RST and RSTACK frames are preceded by Cancel Bytes to ignore any link startup noise.</p></td></tr></table><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">To byte stuff, an Escape Byte is sent first, followed by the reserved byte being escaped with bit 5 of the reserved byte inverted. When a frame is received, byte stuffing is reversed to restore the original data.</p><p class="s11" style="padding-top: 6pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Note: <span class="p">The Escape, Substitute, and Cancel Bytes are not the same as the ESC, SUB, and CAN ASCII control characters.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The following list illustrates some examples of possible byte stuffing:</p><ul id="l33"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Flag Byte <span class="s16">7E </span>is sent as <span class="s16">7D 5E</span></p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">XON Byte <span class="s16">11 </span>is sent as <span class="s16">7D 31</span></p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">XOFF Byte <span class="s16">13 </span>is sent as <span class="s16">7D 33</span></p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Substitute Byte <span class="s16">18 </span>is sent as <span class="s16">7D 38</span></p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Cancel Byte <span class="s16">1A </span>is sent as <span class="s16">7D 3A</span></p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Escape Byte <span class="s16">7D </span>is sent as <span class="s16">7D 5D</span></p></li></ul><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The byte value 0xFF has a special meaning when it occurs between ASH frames in ASH versions that allow sleeping by the NCP. (Within a frame, 0xFF is not special and does not need to be escaped.) 0xFF is sent by the Host to wake the NCP, and is echoed back when the NCP wakes up. The NCP can also wake the Host by sending 0xFF, although the Host does not echo it back to the NCP.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">EmberZNet Serial Protocol (EZSP) on the NCP may also send a 0xFF byte to inform the host that it has a callback pending while it is operating in the synchronous (polled) callback mode.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark34">Data Randomization</a><a name="bookmark39">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If a DATA frame contains many reserved bytes, byte stuffing can nearly double the length of the frame. To make this less likely, a DA- TA frame’s Data Field is exclusive-OR’ed with the output of a pseudo-random sequence before byte stuffing. The Data Field is restored by exclusive-OR’ing again at the receiver.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The pseudo-random sequence is reinitialized at the start of every Data Field and is generated by an 8-bit linear feedback shift register described by the following bitwise equations:</p><ul id="l34"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">rand0 = 0x42</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">if bit 0 of randi is 0, randi+1 = randi &gt;&gt; 1</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">if bit 0 of randi is 1, randi+1 = (randi &gt;&gt; 1) ^ 0xB8</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The sequence starts {<span class="s16">0x42, 0x21, 0xA8, 0x54, 0x2A, …</span>}.</p></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark35">Receiving Frames</a><a name="bookmark40">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When data is received, first any byte stuffing is reversed by inverting bit 5 of bytes following Escape Bytes. The Control Byte, the first byte received in a frame, is saved, and if the buffer memory is available, the following Data Field bytes are stored. Regardless of buffer availability, the frame’s length and CRC are computed as data is input. If a Cancel Byte or Substitute Byte is received, the bytes re- ceived so far are discarded. In the case of a Substitute Byte, subsequent bytes will also be discarded until the next Flag Byte.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Normally, a Flag Byte marks the end of a frame, which is then validated. To be valid, a frame must:</p><ul id="l35"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Have a correct CRC.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Have a Control Byte corresponding to a valid frame type:</p><ul id="l36"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">On the Host: DATA, ACK, NAK, RSTACK, or ERROR</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">On the NCP: DATA, ACK, NAK, or RST</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Have a valid Data Field length for the frame type.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Have a valid ackNum if in the CONNECTED state and the frame type is DATA, ACK, or NAK.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A frame that fails any of these criteria is discarded. If ASH is in the CONNECTED state and the Reject Condition is not already set, the Reject Condition is set and a NAK is sent. This is also done if a Substitute Byte was received within a frame.</p></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark41">CONNECTED State</a><a name="bookmark52">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Host initializes the ASH protocol by resetting the NCP through either the nRESET pin or sending the RST frame. When the NCP is fully booted and ready to interact with the Host, the NCP will send the RSTACK frame to the Host.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Due to possible I/O buffering, it is important to note that the Host could receive several valid or invalid frames after triggering a reset of the NCP. The Host must discard all frames and errors until a valid RSTACK frame is received. The Host must also allow a certain amount of time to receive the RSTACK frame; the parameter T_RSTACK_MAX defines this timeout. If the Host does not receive the RSTACK frame within the timeout period, the Host should retry the reset process up to five times in case of noise interfering with the RST or RSTACK frames.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When a RSTACK frame is received, the Host must perform a final verification of the Version number provided in the RSTACK’s Data Field. If the Version number being supplied by the NCP is compatible with the Host’s version number for ASH, the Host and the NCP have successfully transitioned into the CONNECTED state and can begin to exchange EZSP messages.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l37"><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark42">Frame Numbers</a><a name="bookmark53">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">ASH uses 3-bit frame numbers to track reception of DATA frames and detect when a frame is lost in transmission. The bit fields labeled frmNum in the Control Byte of DATA frames are numbered sequentially by the sender, 0 through 7 and back to 0, and the receiver expects to get consecutively numbered frames.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Both the NCP and the Host maintain two frame numbers, because the frame numbers for data sent from the Host to the NCP are inde- pendent of those sent from the NCP to the Host. Thus the frmNum field in a DATA frame belongs to the sequence number in one direc- tion, and the ackNum field in a DATA, ACK, or NAK frame belongs to the sequence number in the reverse direction.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Host and the NCP maintain a sliding window for DATA frames, and this window must be smaller than the 8 frames allowed by the 3-bit frame number field. The effect of the sliding window is that a sender may transmit multiple frames before receiving an acknowl- edgement, and the window’s smaller size means that neither side has to worry about the frame numbers wrapping and mistakenly ac- knowledging the wrong frame.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark43">Acknowledgements and Frame Numbers</a><a name="bookmark54">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The ackNum field in DATA, ACK, and NAK frames acknowledges received DATA frames. Note that ackNum is the number of the next frame the receiver expects and it is one greater than the last frame received.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The NCP discards any frames it receives that have an invalid ackNum value. A valid ackNum is a number between the last received ackNum and the last transmitted frmNum plus one, where both limits are inclusive.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The maximum number of frames a sender can transmit without them being acknowledged is the window size, which is specified by the parameter TX_K. When a sender has TX_K unacknowledged frames, it may not send any more, although it may retransmit frames if needed.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark44">Piggybacked Acknowledgements</a><a name="bookmark55">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The NCP, but not the Host, may “piggyback” acknowledgements on a DATA frame. This is more efficient than sending a separate ACK frame, but if there is no DATA frame ready to send, the NCP will send an ACK frame instead. The NCP delays sending an ACK after it receives a DATA frame. This delay increases the likelihood that an acknowledgement is piggybacked on a DATA frame or multiple ac- knowledgements are sent with one ACK frame. The ACK delay parameter, T_TX_ACK_DELAY, is the artificial delay that specifies how long to wait before sending an ACK frame when there is no DATA frame to send.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Host may not piggyback acknowledgments and should promptly send an ACK frame when it receives a DATA frame. The NCP will normally reject DATA frames received with piggybacked ACKs because it is not able to buffer them.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark45">Sending DATA Frames</a><a name="bookmark56">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A given DATA frame can be sent if there is no higher priority ACK or NAK frame to be transmitted, the number of frames already trans- mitted without being acknowledged is not at the window size limit, and the receiver is ready to accept the frame. When first sent, the frmNum bit field is assigned the next consecutive frame number, and its ackNum bit field is set to the frame number of the next frame expected to be received. The Data Field is then exclusive-OR’ed with a pseudo-random sequence. Finally, the entire frame, excluding the Flag Byte, is byte stuffed.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">After the DATA frame has been written to the UART buffer, it is saved on an ASH queue so that it can be retransmitted if required. When a frame is acknowledged, it is deleted from the queue. If an acknowledgement is not received in time, the frame will be retrans- mitted.</p></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark46">Receiving DATA Frames</a><a name="bookmark57">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Data Field of a DATA frame is only passed up to EZSP if it is valid, in sequence, and there is enough memory to buffer the data. Before passing the data to EZSP, the data is exclusive-OR’ed with the pseudo-random sequence to restore the original contents. The ackNum field is always processed, because this information is separate from the Data Field or frmNum. Even if the DATA frame is discarded due to being a duplicate, out of sequence, or lack of memory, the ackNum field is still valid and will be processed to update the acknowledged frames.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark47">DATA frame Acknowledgement timing</a><a name="bookmark58">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The NCP adjusts the time allowed to receive an acknowledgement for a DATA frame based on how long it has taken to receive previ- ous acknowledgements. In general, the NCP waits four times the rolling average of measured acknowledgement times before timing out. Note that a DATA frame may be acknowledged by the ackNum bit field in an ACK, NAK, or DATA frame.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Three parameters govern computing the DATA frame acknowledgement timeout: t_rx_ack: T_RX_ACKINIT, T_RX_ACK_MIN, and T_RX_ACK_MAX. These are the initial, the minimum, and the maximum values, respectively, that are assigned to t_rx_ack.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">At startup, t_rx_ack is set to T_RX_ACK_INIT. Whenever an acknowledgement is received, t_rx_ack is set to 7/8 of its current value plus 1/2 of the measured time for the acknowledgement. Therefore, over time t_rx_ack equals four times the time-weighted average of actual acknowledgement times. If a DATA frame acknowledgement is not received within the current timeout value, then t_rx_ack is doubled. The value of t_rx_ack is always limited to the range from T_RX_ACK_MIN to T_RX_ACK_MAX.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If a frame is not acknowledged within t_rx_ack, it times out and the NCP will retransmit the frame. If there are enough consecutive timeouts, the NCP enters the ERROR state. The maximum number of consecutive timeouts is given by the parameter ACK_TIME- OUTS.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s11" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark48">DATA Frame Flow Control</a><a name="bookmark59">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Host uses DATA frame flow control to throttle the transmission of DATA frames from the NCP, but the NCP does not control Host transmissions to it. NCP DATA frames are either responses to EZSP commands or callbacks that are sent without being requested by the Host. DATA frame flow control applies only to callback DATA frames, and does not stop the NCP from sending command response DATA frames.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the Host is not ready to accept additional callback DATA frames because it does not have enough free buffers to store them, it instructs the NCP to pause callback DATA frame transmission by sending an ACK or NAK frame with the nRdy (not ready) flag set to 1. When callback DATA frame transmissions are paused, the NCP is still allowed to transmit ACK and NAK frames, transmit command response DATA frames, and retransmit callback DATA frames if required to recover from errors. When the Host is ready again, it sends an ACK or NAK with nRdy set to 0.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">After it receives an ACK or NAK with nRdy set, the NCP may not transmit a callback DATA frame for a period of time defined by the parameter T_REMOTE_NOTRDY. As long as the Host remains in the not ready state, the Host sends an ACK or NAK frame with the nRdy flag set at intervals of time defined by the parameter T_LOCAL_NOTRDY. The NCP may resume sending callback DATA frames if it does not receive another ACK or NAK with the nRdy flag set after the period T_REMOTE_NOTRDY has elapsed. This prevents the NCP being held off indefinitely if an ACK or NAK with the nRdy flag cleared is lost.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">DATA frame flow control does not eliminate the need for low-level (RTS/CTS or XON/XOFF) flow control. Low-level flow control helps ensure that serial data is not lost at the UART due to overruns or overflows, while DATA frame flow control operates at the ASH level and prevents loss of DATA frames due to lack of buffer memory.</p></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark49">Data Exchange Example</a><a name="bookmark60">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><span><img width="578" height="463" alt="image" src="ug101-uart-gateway-protocol-reference/Image_014.png"/></span></p><p class="s18" style="text-indent: 0pt;text-align: left;">ACK(1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">No Data Ready to Send</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">Data(0, 2, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">Data Ready to Send</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">ACK(1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">Data(1, 0, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">No Data Ready to Send</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">Data Ready to Send</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">Data(0, 0, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">Data Ready to Send</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">NCP</p><p style="text-indent: 0pt;text-align: left;"/><p class="s18" style="text-indent: 0pt;text-align: left;">HOST</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following figure illustrates a simple timeline providing an example of basic DATA and ACK frame usage and the sequence number- ing involved.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 4pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">Figure 5.1.  Two-Way Data Exchange with Acknowledgements</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l38"><li><p style="padding-left: 40pt;text-indent: -8pt;text-align: left;">The Host sends a DATA frame with frmNum 0 to the NCP.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The NCP has no data ready to send, so it replies with an ACK frame with ackNum 1, the next frame the NCP expects to receive.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The Host has more data to send, so it sends DATA frame with frmNum 1 before it receives the ACK frame. The Host now has two unacknowledged frames outstanding.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The NCP has data to send, so it sends its DATA frame with frmNum 0 and ackNum 2 piggybacked on the DATA frame as an acknowledgement of the Host’s DATA frame 1.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The Host has no further data to send, so it sends just an ACK for the frame the Host just received.</p></li></ol></li><li><p class="s11" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark50">Reject Condition and NAK Frames</a><a name="bookmark61">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">ASH sets the Reject Condition after receiving a DATA frame with any of the following attributes:</p><ul id="l39"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Has an incorrect CRC.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Has an invalid control byte.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Is an invalid length for the frame type.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Contains a low-level communication error (e.g., framing, overrun, or overflow).</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Has an invalid ackNum.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Is out of sequence.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Was valid, but had to be discarded due to lack of memory to store it.</p></li></ul><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A frame is out of sequence if its frmNum is not one greater than the last (non-retransmitted) frame received. (Remember that sequence numbers are 3 bits and the modulo 8 operation means 0 is the number after 7.) Retransmitted frames are never considered out of se- quence.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If the Reject Condition is set when it is currently clear, a NAK frame is sent. The Reject Condition is cleared as soon as a valid, in- sequence DATA frame is received and can be buffered.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When a NAK is received, the receiver of the NAK begins retransmitting if it is not already doing so, assuming it has transmitted any frames that have not been acknowledged. If a new DATA frame is in the process of being sent, the new DATA frame transmission is cancelled by sending a Cancel Byte because it would be discarded as out of sequence anyway, and retransmission is started more quickly this way.</p></li><li><p class="s11" style="padding-top: 8pt;padding-left: 45pt;text-indent: -22pt;text-align: left;"><a name="bookmark51">Retransmitting</a><a name="bookmark62">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A DATA frame can be retransmitted for one of two reasons:</p><ul id="l40"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">The DATA frame was not acknowledged within the allowed time.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">A NAK was received indicating that the DATA frame was not received correctly.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Retransmission begins with the oldest unacknowledged frame, and all retransmitted frames are flagged by setting the reTx flag in the Control Byte. A retransmitted frame keeps the same frmNum as when first transmitted, but the ackNum bit field may differ if the sender has received more DATA frames since it was first transmitted.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If the sender receives an acknowledgement for a frame due to be retransmitted, that frame will not be retransmitted. When done re- transmitting, the sender resumes sending new DATA frames again.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Upon receiving a retransmitted frame, the receiver sends an immediate ACK. The receiver does not set the Reject Condition or send a NAK when a retransmitted frame is received. If the retransmitted frame was previously received correctly, the Data Field is discarded and the ackNum is processed as usual.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In the example shown in the following figure, the second DATA frame sent by the NCP is lost, and this is detected by the Host when it receives an out-of-sequence frame. At this point the Host sends a NAK and sets its Reject Condition. Meanwhile, another DATA frame is being sent by the NCP, and when the Host receives this, it is also out of sequence; however, since the Reject Condition is already set, the Host does not send another NAK.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the NCP receives the NAK, the NCP begins retransmitting starting from its oldest unacknowledged frame. When the Host re- ceives the first in-sequence frame, it clears the Reject Condition and sends an ACK. Finally, the NCP finishes sending all of the unac- knowledged frames and the NCP clears the Retransmit Condition, resuming transmission of new data frames.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In the simple example illustrated in the following figure, the Host did not send any DATA frames to the NCP, but it could have been sending DATA frames throughout the error recovery process. ASH data transfer, error detection, and error recovery operate independ- ently and simultaneously in both directions.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 5pt;padding-left: 160pt;text-indent: 0pt;text-align: center;">HOS T                                                                                                                      NCP</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="163" height="665" alt="image" src="ug101-uart-gateway-protocol-reference/Image_015.png"/></span></p><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(1, 1, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">ACK(1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(2, 1, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">NAK(1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(3, 1, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(1, 1, 1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">ACK(2)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(2, 1, 1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">ACK(3)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(3, 1, 1)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">ACK(4)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: left;">Data(4, 1, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">Data(0, 1, 0)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="padding-top: 5pt;padding-left: 367pt;text-indent: 0pt;text-align: left;">Data frame is lost</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-left: 147pt;text-indent: -1pt;text-align: left;">Out of sequence frame - Condition is already set</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-left: 120pt;text-indent: 24pt;text-align: right;">Out of sequence frame is ignored since Reject Condition is</p><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: right;">already set</p><p class="s19" style="padding-top: 5pt;padding-left: 120pt;text-indent: 0pt;text-align: left;">Set Retransmit Condition - retransmit starting with the oldest unacknowledged frame</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 5pt;text-indent: 0pt;line-height: 10pt;text-align: right;">In sequence frame - clear</p><p class="s19" style="text-indent: 0pt;line-height: 10pt;text-align: right;">Reject Condition</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 5pt;padding-left: 363pt;text-indent: 0pt;text-align: left;">Continue retransmitting until all unacknowledged frames have been sent</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 7pt;padding-left: 362pt;text-indent: 0pt;text-align: left;">Clear Retransmit Condition - resume sending new Data frames</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 159pt;text-indent: 0pt;text-align: center;">Figure 5.2.  NAK Error Recovery</p><p class="s8" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">FAILED State</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug101-uart-gateway-protocol-reference/Image_016.png"/></span></p></li></ul></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark63">FAILED State</a><a name="bookmark64">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The NCP enters the FAILED state if it detects one of the following errors:</p><ul id="l41"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">An abnormal internal reset due to an error, failed assertion, or fault.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Exceeding the maximum number of consecutive acknowledgement timeouts.</p></li></ul><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the NCP enters the FAILED state, the NCP sends an ERROR frame containing a reset or error code and will reply to all subse- quent frames received, except RST, with an ERROR frame. To reinitialize the ASH protocol, the Host must reset the NCP by either asserting the nRESET pin or sending the RST frame. The following table lists the codes returned by the NCP in the Reset Code byte of a RSTACK frame or in the Error Code byte of an ERROR frame. Silicon Labs wireless mesh chips can detect numerous reset fault causes beyond those in the table. When sent to the host, these new reset codes have 0x80 added to the value returned by their HAL’s reset code.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 159pt;text-indent: 0pt;text-align: center;"><a name="bookmark65">Table 6.1.  Reset and Error Codes</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Code</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Meaning</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x00</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: Unknown reason</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x01</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: External</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x02</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: Power-on</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x03</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: Watchdog</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x06</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: Assert</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x09</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: Boot loader</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0B</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Reset: Software</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x51</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Error: Exceeded maximum ACK timeout count</p></td></tr><tr style="height:19pt"><td style="width:97pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x80</p></td><td style="width:454pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Chip-specific error reset code</p></td></tr></table><p class="s8" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Configuration Parameters</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug101-uart-gateway-protocol-reference/Image_017.png"/></span></p></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark66">Configuration Parameters</a><a name="bookmark67">&zwnj;</a></p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Several parameters stored as manufacturing tokens control the operation of the ASH protocol. The values are optimized for operation at 115,200 bps using RTS/CTS flow control, or 57,600 bps when using XON/XOFF software flow control.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="https://www.silabs.com/community" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">Silicon Labs has tuned the ASH protocol to operate best with the configurations listed in the following two tables. While you can change these configurations through manufacturing tokens, doing so may degrade performance. To learn how to change the configurations, contact customer support at </a><span style=" color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">https://www.silabs.com/community</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 160pt;text-indent: 0pt;text-align: center;">Table 7.1.  Timing Parameters</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Parameter</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Value</p></td><td style="width:51pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Units</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:30pt"><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">T_RX_ACK_INIT</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1.6</p></td><td style="width:51pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">sec</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;padding-right: 15pt;text-indent: 0pt;text-align: left;">Initial value of t_rx_ack, the maximum time the NCP waits to receive acknowledgement of a DATA frame</p></td></tr><tr style="height:19pt"><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">T_RX_ACK_MIN</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0.4</p></td><td style="width:51pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">sec</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Minimum value of t_rx_ack</p></td></tr><tr style="height:19pt"><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">T_RX_ACK_MAX</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">3.2</p></td><td style="width:51pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">sec</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Maximum value of t_rx_ack</p></td></tr><tr style="height:19pt"><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">T_TX_ACK_DELAY</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">20</p></td><td style="width:51pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">msec</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">Delay before sending a non-piggybacked acknowledgement</p></td></tr><tr style="height:40pt"><td style="width:148pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">T_REMOTE_NOTRDY</p></td><td style="width:52pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">1.0</p></td><td style="width:51pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;text-indent: 0pt;text-align: left;">sec</p></td><td style="width:290pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: left;">Time from receiving an ACK or NAK with the nRdy flag set after which the NCP resumes sending callback frames to the host without requiring an ACK or NAK with the nRdy flag clear</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 160pt;text-indent: 0pt;text-align: center;">Table 7.2.  Other Parameters</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:81pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Parameter</p></td><td style="width:93pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Value</p></td><td style="width:228pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s12" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:56pt"><td style="width:81pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">BAUD_RATE</p></td><td style="width:93pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">115200 (RST/CTS) /</p><p class="s13" style="padding-left: 2pt;padding-right: 36pt;text-indent: 0pt;line-height: 19pt;text-align: left;">57600 (XON/XOFF)</p></td><td style="width:228pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Transmit and receive baud rate</p></td></tr><tr style="height:30pt"><td style="width:81pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">TX_K</p></td><td style="width:93pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">5</p></td><td style="width:228pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;text-align: left;">Maximum number of DATA frames the NCP can trans- mit without having received acknowledgements</p></td></tr><tr style="height:51pt"><td style="width:81pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ACK_TIMEOUTS</p></td><td style="width:93pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">4</p></td><td style="width:228pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 8pt;text-indent: 0pt;text-align: left;">Maximum number of consecutive timeouts allowed while waiting to receive an ACK before going to the FAILED state. The value 0 prevents the NCP from en- tering the error state due to timeouts.</p></td></tr><tr style="height:30pt"><td style="width:81pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">RANDOMIZE</p></td><td style="width:93pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">enabled</p></td><td style="width:228pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: left;">Enables randomization of received and transmitted DA- TA frame Data Fields; can be disabled for debugging</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 36pt;text-indent: 0pt;text-align: left;">Smart. Connected. <span class="s20">Energy-Friendly.</span></h2><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="769" height="433" alt="image" src="ug101-uart-gateway-protocol-reference/Image_018.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="ug101-uart-gateway-protocol-reference/Image_019.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="padding-left: 1pt;text-indent: 0pt;text-align: center;">IoT Portfolio</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products" class="s22">www.silabs.com/products</a></p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="ug101-uart-gateway-protocol-reference/Image_020.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="ug101-uart-gateway-protocol-reference/Image_021.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s21" style="text-indent: 0pt;text-align: left;">Support &amp; Community</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/community" class="s22">www.silabs.com/community</a></p><p style="text-indent: 0pt;text-align: left;"/><p class="s21" style="padding-top: 5pt;padding-left: 159pt;text-indent: 0pt;text-align: center;">Quality</p><p style="padding-top: 1pt;padding-left: 159pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s22">www.silabs.com/quality</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s23" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s24" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software imple- menters using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each <span class="s25">specific device, and “Typical” parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the infor</span>- mation supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or <span class="s25">authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required or Life Support Systems without the specific written consent of Silicon Labs. A “Life Support System” is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used </span>in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims <span class="s25">all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications. </span><b>Note: This content may contain offensive terminology that is now obsolete. Silicon Labs is replacing these terms with inclusive language wherever possible. For more </b><a href="http://www.silabs.com/about-us/inclusive-lexicon-project" style=" color: #4C4D4F; font-family:&quot;Lucida Sans&quot;, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt;" target="_blank">information, visit </a><a href="http://www.silabs.com/about-us/inclusive-lexicon-project" class="s28" target="_blank">www.silabs.com/about-us/inclusive-lexicon-project</a></p><p class="s27" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Trademark Information</p><p class="s29" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 117%;text-align: justify;"><span class="s24">Silicon Laboratories Inc.</span>®<span class="s24">, Silicon Laboratories</span>®<span class="s24">, Silicon Labs</span>®<span class="s24">, SiLabs</span>® <span class="s24">and the Silicon Labs logo</span>®<span class="s24">, Bluegiga</span>®<span class="s24">, Bluegiga Logo</span>®<span class="s24">, Clockbuilder</span>®<span class="s24">, CMEMS</span>®<span class="s24">, DSPLL</span>®<span class="s24">, EFM</span>®<span class="s24">, EFM32</span>®<span class="s24">, EFR, Ember</span>®<span class="s25">, Energy Micro, Energy Micro logo and combinations thereof, “the world’s most energy friendly microcontrollers”, Ember</span>®<span class="s24">, EZLink</span>®<span class="s24">, EZRadio</span>®<span class="s24">, EZRadioPRO</span>®<span class="s24">, Gecko</span>®<span class="s24">, Gecko OS, Gecko OS Studio, ISOmodem</span>®<span class="s24">, Precision32</span>®<span class="s24">, ProSLIC</span>®<span class="s24">, Simplicity Studio</span>®<span class="s24">, SiPHY</span>®<span class="s24">, Telegesis, the Telegesis Logo</span>®<span class="s24">, USBXpress</span>® <span class="s24">, Zentri, the Zentri logo and Zentri DMS, Z-Wave</span>®<span class="s24">, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Hold- ings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="148" height="73" alt="image" src="ug101-uart-gateway-protocol-reference/Image_022.png"/></span></p><p class="s27" style="padding-top: 5pt;padding-left: 149pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s27" style="padding-left: 149pt;text-indent: 0pt;line-height: 8pt;text-align: left;">USA</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><h4 href="http://www.silabs.com/">www.silabs.com</h4></p></body></html>
