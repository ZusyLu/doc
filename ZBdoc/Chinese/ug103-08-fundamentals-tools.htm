<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>UG103.8: Silicon Labs Tools Fundamentals</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s5 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s7 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s8 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 .s10 { color: black; font-family:Calibri, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7.5pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s12 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 .s13 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s14 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s15 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s16 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt; }
 #l3> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l4 {padding-left: 0pt; }
 #l4> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt; }
 #l6> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="ug103-08-fundamentals-tools/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">UG103.8: Silicon Labs Tools Fundamentals</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="ug103-08-fundamentals-tools/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="211" height="1" alt="image" src="ug103-08-fundamentals-tools/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="212" height="1" alt="image" src="ug103-08-fundamentals-tools/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes Silicon Labs stack software and development environment</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Reviews additional tools for use during different development phases.</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">This document provides an overview of the toolchain used to de- velop, build, and deploy EmberZNet applications, and discusses some additional tools and utilities. It also provides references to more detailed information about each item, where applicable.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Silicon Labs’ <i>Fundamentals </i>series covers topics that project managers, application de- signers, and developers should understand before beginning to work on an embedded networking solution using Silicon Labs chips, networking stacks such as EmberZNet PRO or Silicon Labs <i>Bluetooth®</i>, and associated development tools. The documents can be used as a starting place for anyone needing an introduction to developing wire- less networking applications, or who is new to the Silicon Labs development environ- ment.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Introduction</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_005.png"/></span></p><ol id="l2"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Introduction</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">As with most embedded development technologies, Silicon Labs provides a set of tools to allow developers to create a product using Silicon Labs wireless networking products. This document provides an overview of the toolchain that used to develop, build and deploy EmberZNet applications. The document does not provide a step-by-step guide. If you are just getting started with Silicon Labs develop- ment kits, see the Quick Start Guide in your kit as a starting point.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The tools in the toolchain fall into one of three categories:</p><ul id="l3"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Stack Software</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Compiler Toolchain</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Application Development and Debugging Toolchain</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The actual toolchain that you will use is device- and processor model-dependent. For this discussion, the processor model is either System-on-Chip (SoC) or Network Coprocessor (NCP). The SoC model requires that the customer application to be co-resident with the stack. The NCP model requires that the customer application be on a separate host processor and the stack run on the NCP. The following table summarizes the major tools for each device.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 152pt;text-indent: 0pt;text-align: center;">Table 1.1.  Toolchain Summary</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:30pt"><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s7" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Stack Software</p></td><td style="width:239pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s7" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Compiler</p></td><td style="width:109pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s7" style="padding-top: 3pt;padding-left: 2pt;padding-right: 15pt;text-indent: 0pt;text-align: left;">Application Develop- ment and Debugging</p></td></tr><tr style="height:19pt"><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SoC</p></td><td style="width:239pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:109pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:40pt"><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;padding-right: 5pt;text-indent: 0pt;text-align: left;">Stack Libraries, HAL source, API Documenta- tion, Sample Applications, Development Kit</p></td><td style="width:239pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;padding-right: 4pt;text-indent: 0pt;text-align: left;">IAR EWARM (required for parts with less than 512 kB, such as the EFR32xG1, and any of the Dynamic Multipro- tocol examples) or GCC</p></td><td style="width:109pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Simplicity Studio</p></td></tr><tr style="height:19pt"><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">NCP</p></td><td style="width:239pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:109pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:30pt"><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;padding-right: 5pt;text-indent: 0pt;text-align: left;">Stack Libraries, HAL source, API Documenta- tion, Sample Applications, Utilities</p></td><td style="width:239pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;text-align: left;">3rd Party Compiler Toolchain (depends on Host Process- or Selection)</p></td><td style="width:109pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s8" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Simplicity Studio</p></td></tr></table><p style="padding-top: 7pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">In addition to the major tools above, Silicon Labs also supplies a number of single function tools and utilities such as</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Bootloaders</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Programming Support Tools</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following sections provide more detail about the most important elements of the toolchain.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Stack Software</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_006.png"/></span></p></li></ul></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Stack Software</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">The network stack software is a collection of libraries, source code, tools, sample applications, and product documentation. The net- work stack API is documented in an online API reference as well as other documents installed with the stack installer, or available through the development environment. The network stack is delivered as a collection of libraries that you can link to your applications. A description of each library is provided in the development environment.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In addition to the <i>Fundamentals </i>document family, other resources are available for learning more about your stack software. See the documentation list on Simplicity Studio&#39;s Launcher perspective for more information about available documentation.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="9" height="33" alt="image" src="ug103-08-fundamentals-tools/Image_007.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="9" height="34" alt="image" src="ug103-08-fundamentals-tools/Image_008.png"/></span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">This document applies to the EmberZNet stack. EmberZNet is the Silicon Labs implementation of the Zigbee protocol supporting the Zigbee PRO feature set. All EmberZNet PRO applications must be linked with the stack library. The following figure illustrates how cus- tomer and Silicon Labs stack software interact.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-top: 4pt;padding-left: 71pt;text-indent: 0pt;text-align: left;">Customer Application</p><p style="padding-left: 160pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-top: 4pt;padding-left: 68pt;text-indent: 0pt;text-align: left;">Application Framework</p><p style="padding-left: 161pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:180.958pt" cellspacing="0"><tr style="height:18pt"><td style="width:187pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt" colspan="3"><p class="s10" style="padding-top: 3pt;padding-left: 75pt;padding-right: 79pt;text-indent: 0pt;text-align: center;">Stack API</p></td></tr><tr style="height:18pt"><td style="width:150pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt"><p class="s10" style="padding-top: 3pt;padding-left: 56pt;padding-right: 58pt;text-indent: 0pt;text-align: center;">Transport</p></td><td style="width:18pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt" rowspan="5"><p class="s10" style="padding-top: 4pt;padding-left: 30pt;padding-right: 33pt;text-indent: 0pt;text-align: center;">Security</p></td><td style="width:19pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt" rowspan="5"><p class="s10" style="padding-top: 4pt;padding-left: 11pt;text-indent: 0pt;text-align: left;">Power Management</p></td></tr><tr style="height:18pt"><td style="width:150pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt"><p class="s10" style="padding-top: 3pt;padding-right: 28pt;text-indent: 0pt;text-align: right;">Application Support (APS )</p></td></tr><tr style="height:18pt"><td style="width:150pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt"><p class="s10" style="padding-top: 3pt;padding-right: 28pt;text-indent: 0pt;text-align: right;">Network Routing and Discovery</p></td></tr><tr style="height:18pt"><td style="width:150pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt"><p class="s10" style="padding-top: 3pt;padding-left: 56pt;padding-right: 57pt;text-indent: 0pt;text-align: center;">MAC</p></td></tr><tr style="height:18pt"><td style="width:150pt;border-top-style:solid;border-top-width:2pt;border-left-style:solid;border-left-width:2pt;border-bottom-style:solid;border-bottom-width:2pt;border-right-style:solid;border-right-width:2pt"><p class="s10" style="padding-top: 3pt;padding-left: 43pt;text-indent: 0pt;text-align: left;">Radio Abstraction</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-top: 4pt;padding-left: 71pt;text-indent: 0pt;text-align: left;">Hardware Abstraction</p><p style="padding-left: 161pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="14" height="35" alt="image" src="ug103-08-fundamentals-tools/Image_009.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="9" height="33" alt="image" src="ug103-08-fundamentals-tools/Image_010.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="9" height="216" alt="image" src="ug103-08-fundamentals-tools/Image_011.png"/></span></p><p class="s9" style="padding-top: 5pt;padding-left: 174pt;text-indent: 0pt;line-height: 158%;text-align: left;">Silicon Labs Software Customer Software</p><p class="s6" style="padding-top: 2pt;padding-left: 152pt;text-indent: 0pt;text-align: center;">Figure 2.1.  Silicon Labs Stack and Customer Software Interaction</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Compiler Toolchain</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_012.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark2">Compiler Toolchain</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The compiler toolchain is different based upon which platform and processor model you are using. EFR32 devices can use the IAR toolchain and must do so when compiling dynamic multiprotocol applications and when building applications for devices with less than 512 kb of flash. Otherwise developers have the option of using GCC (The GNU Compiler Collection), provided with Simplicity Studio.</p><p class="s6" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Application images created with GCC are larger than those created with IAR. If GCC is used to compile the example applications in EmberZNet SDK, the target must be a part with at least 512 kB of flash.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">The IAR toolchain is licensed through IAR, and the version of the compiler must be compatible with the stack version. Specific information is supplied with the development kit and stack release notes.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The EFR32, when acting as a Network Co-Processor, is designed to be a coprocessor to whatever host developers are using. The network coprocessor software for a number of parts is shipped as a binary image, so there is no need to recompile it. These can be found in the <i>SimplicityStudio\v5\developer\sdks\gecko_sdk_suite\v3.0\protocol\zigbee\ncp-images </i><a href="http://www.silabs.com/support/Pages/default.aspx" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">folder. One of the most commonly selected hosts is an ARM processor, though many others can be used. Additional information is available at the Silicon Labs Support Portal (</a><span style=" color: #049;">http://www.silabs.com/support/Pages/default.aspx</span>).</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Development Environment</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_013.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark3">Development Environment</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="https://docs.silabs.com/" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">Along with the stack, Silicon Labs provides the Simplicity Studio development environment. Simplicity Studio 5 (SSv5) (for Zigbee stack version 6.8.x ) and Simplicity Studio 4 (SSv4) (for Zigbee stack version 6.7.x) provide access to target device-specific web and SDK resources; software and hardware configuration tools; an integrated development environment (IDE); and advanced, value-add tools for network analysis and code-correlated energy profiling. For information on using Simplicity Studio 5 see the online Simplicity Studio 5 User’s Guide, available on </a><span style=" color: #049;">https://docs.silabs.com/ </span>and through the SSv5 help menu. For an overview of Simplicity Studio 4 see <i>AN0822: Simplicity Studio User&#39;s Guide</i>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The following are some of the more important development tools also provided with Simplicity Studio:</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The <b>Hardware Configurator </b>tool (for EFR32 platforms only) allows you to easily configure new peripherals or change the properties of existing ones. Hardware Configurator options are available on many of the HAL and I/O plugins. See <i>AN1115: Configuring Peripherals for 32-Bit Devices in Simplicity Studio </i>for more information about the Hardware Configurator both within the Simplicity IDE and as a separate tool.</p><p class="s6" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Simplicity Commander <span class="p">is a single, all-purpose tool to be used in a production environment. It is invoked using a simple Command Line Interface (CLI) that is also scriptable. Simplicity Commander enables customers to complete these essential tasks:</span></p><ul id="l4"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Flash their own applications.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Configure their own applications.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Create binaries for production.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">See <i>UG162: Simplicity Commander Reference Guide </i>for more information.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The <b>Network Analyzer </b>tool helps debug network connectivity by displaying radio packets and certain debug interface events in a for- mat that is easy to visualize and analyze.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The <b>Energy Profiler </b>provides energy debugging capability by displaying graphical real-time energy consumption information. This can be particularly useful for developing a low-power application. See <i>UG343: Multi-Node Energy Profiler User’s Guide </i>for more informa- tion.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Peripheral Drivers</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_014.png"/></span></p></li></ul></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark4">Peripheral Drivers</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Embedded source C code is provided for drivers of peripherals such as the serial controller and analog-to-digital converter (ADC). These drivers let you incorporate standard functionality into custom applications. For more information on these drivers, see the stack API reference and, if applicable, Platform API reference for your platform.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Bootloaders</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_015.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark5">Bootloaders</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">A bootloader is a program stored in reserved flash memory that allows a node to update its image on demand, either by serial commu- nication or over the air. Production-level programming is typically done during the product manufacturing process, yet it is desirable to be able to reprogram the system after production is complete. More importantly, it is valuable to be able to update the device&#39;s firmware with new features and bug fixes after deployment. The bootloading capability makes that possible. See <i>UG103.6: Bootloader Funda- mentals </i>for more details.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Manufacturing Library</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_016.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark6">Manufacturing Library</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Silicon Labs supplies a library called the manufacturing library, which is meant to be linked with your production application and provide a means of doing end-of-line manufacturing testing with a light weight library that provides similar functionality to the Node Test applica- tion (described in section 8). It can be used to characterize radio performance and validate proper functionality of your device. You can use a token to indicate which mode the application should boot into, either production or test mode. Once done testing, the token will indicate that the application should boot into production mode. See <i>AN1162: Using the Manufacturing Test Library </i>for more information.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">NodeTest</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_017.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark7">NodeTest</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">The NodeTest applications provide low-level control of the radio and can be used to perform these tasks:</p><ul id="l5"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Characterize radio performance.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Set manufacturing and stack parameters (tokens).</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Verify proper functionality after manufacturing.</p></li><li><p style="padding-top: 3pt;padding-left: 24pt;text-indent: 3pt;line-height: 182%;text-align: left;">Control the radio properly for the certification process required by many countries. For more information about nodetest, see <i>AN1019: Using the NodeTest Application</i>.</p></li></ul><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Most customers have standard product manufacturing test flows, but some do not incorporate RF testing. To address this issue, see <i>AN700.1: Manufacturing Test Guidelines for the EFR32</i>. This document describes the different options available for integrating RF test- ing and characterization into your standard test flows. It is intended for test engineers who are moving from the early prototype develop- ment stage to the manufacturing production environment and need assistance with manufacturing test process development.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Development Hardware</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_018.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark8">Development Hardware</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s6" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Wireless Starter Kit Mainboard for the EFR32</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Wireless Starter Kit (WSTK) includes software stacks, sample code, radio boards, and mainboards. The Wireless Starter Kit Main- board contains an on-board J-Link USB connector that provides access to most of the kit&#39;s development features when the kit is con- nected to a host computer. Features include:</p><ul id="l6"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Debugging and programming the target device using the on-board J-Link debugger. The debugger supports three different debug interfaces: Serial Wire Debug, JTAG, and C2 Debug.</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Communication with the target device over the virtual COM port using USB-CDC.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Accurate current profiling using the Advanced Energy Monitor.</p></li></ul><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">In addition to providing access to development features of the kit, the USB connector is also the main power source for the kit. USB 5V from the connector powers the board controller and the Advanced Energy Monitor.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;line-height: 182%;text-align: left;">The WSTK Mainboard also contains sensors and peripherals for easy demonstration of some of the EFR32&#39;s many capabilities. See the documentation set for the specific WSTK for more information about the mainboard.</p><p class="s5" style="padding-bottom: 3pt;padding-left: 282pt;text-indent: 0pt;text-align: left;">Zigbee Over-the-air Bootload Image Generation (image-builder)</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug103-08-fundamentals-tools/Image_019.png"/></span></p></li><li><h3 style="padding-top: 7pt;padding-left: 45pt;text-indent: -21pt;text-align: left;"><a name="bookmark9">Zigbee Over-the-air Bootload Image Generation (image-builder)</a></h3></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Zigbee Over-the-air bootload specification describes a universal container format for transporting bootload images. Silicon Labs provides a tool known as image-builder that can generate, parse, and manipulate those images. Detailed information on this tool can be found in <i>AN716: Instructions for using Image Builder</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Smart. Connected. Energy-Friendly.</h4><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Products</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products" class="s13">www.silabs.com/products</a></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s13">www.silabs.com/quality</a></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s14" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 64pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="767" height="695" alt="image" src="ug103-08-fundamentals-tools/Image_020.png"/></span></p><p class="s15" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s16" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s16" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z- Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="ug103-08-fundamentals-tools/Image_021.png"/></span></p><p class="s15" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s15" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
