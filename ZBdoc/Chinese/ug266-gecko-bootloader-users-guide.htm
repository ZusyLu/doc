<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>UG266: Silicon Labs Gecko Bootloader User’s Guide for GSDK 3.1 and Lower</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s5 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 18pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11.5pt; }
 .a, a { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .s10 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s11 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s12 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s13 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s14 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s15 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s16 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 .s18 { color: black; font-family:"Courier New", monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 h2 { color: #FFF; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s19 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 20pt; }
 .s20 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s21 { color: #424242; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s22 { color: #424242; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s23 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s24 { color: #4C4D4F; font-family:"Arial Black", sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s26 { color: #4C4D4F; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s27 { color: #0086DD; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s28 { color: #4C4D4F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 4pt; vertical-align: 2pt; }
 h4 { color: #FB1725; font-family:"Lucida Sans", sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt; }
 #l2> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l3 {padding-left: 0pt;counter-reset: e1 1; }
 #l3> li>*:first-child:before {counter-increment: e1; content: counter(e1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11.5pt; }
 #l3> li:first-child>*:first-child:before {counter-increment: e1 0;  }
 #l4 {padding-left: 0pt;counter-reset: e2 1; }
 #l4> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l4> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l5 {padding-left: 0pt;counter-reset: e3 1; }
 #l5> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l5> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l6 {padding-left: 0pt;counter-reset: e3 1; }
 #l6> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l6> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l7 {padding-left: 0pt;counter-reset: e2 1; }
 #l7> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l7> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l8 {padding-left: 0pt;counter-reset: e2 1; }
 #l8> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l8> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l9 {padding-left: 0pt;counter-reset: e3 1; }
 #l9> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l10 {padding-left: 0pt;counter-reset: e3 1; }
 #l10> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l10> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l11 {padding-left: 0pt;counter-reset: e2 1; }
 #l11> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l11> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l12 {padding-left: 0pt;counter-reset: e3 1; }
 #l12> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l12> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l13 {padding-left: 0pt;counter-reset: e3 1; }
 #l13> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l13> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l14 {padding-left: 0pt;counter-reset: e2 1; }
 #l14> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l14> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l15 {padding-left: 0pt;counter-reset: e3 1; }
 #l15> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l15> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l16 {padding-left: 0pt;counter-reset: e3 1; }
 #l16> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l16> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l17 {padding-left: 0pt;counter-reset: e2 1; }
 #l17> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l17> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l18 {padding-left: 0pt;counter-reset: e3 1; }
 #l18> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l18> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l19 {padding-left: 0pt;counter-reset: e3 1; }
 #l19> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l19> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l20 {padding-left: 0pt;counter-reset: e3 1; }
 #l20> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l20> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l21 {padding-left: 0pt;counter-reset: e3 1; }
 #l21> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l21> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l22 {padding-left: 0pt;counter-reset: e2 1; }
 #l22> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l22> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l23 {padding-left: 0pt;counter-reset: e2 1; }
 #l23> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l23> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 #l24 {padding-left: 0pt;counter-reset: e3 1; }
 #l24> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l24> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l25 {padding-left: 0pt;counter-reset: e3 1; }
 #l25> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l25> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l26 {padding-left: 0pt;counter-reset: e3 1; }
 #l26> li>*:first-child:before {counter-increment: e3; content: counter(e1, decimal)"."counter(e2, decimal)"."counter(e3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l26> li:first-child>*:first-child:before {counter-increment: e3 0;  }
 #l27 {padding-left: 0pt;counter-reset: e2 1; }
 #l27> li>*:first-child:before {counter-increment: e2; content: counter(e1, decimal)"."counter(e2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 11pt; }
 #l27> li:first-child>*:first-child:before {counter-increment: e2 0;  }
 li {display: block; }
 #l28 {padding-left: 0pt;counter-reset: f1 1; }
 #l28> li>*:first-child:before {counter-increment: f1; content: counter(f1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l28> li:first-child>*:first-child:before {counter-increment: f1 0;  }
 #l29 {padding-left: 0pt; }
 #l29> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l30 {padding-left: 0pt; }
 #l30> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l31 {padding-left: 0pt;counter-reset: f2 1; }
 #l31> li>*:first-child:before {counter-increment: f2; content: counter(f1, decimal)"."counter(f2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l31> li:first-child>*:first-child:before {counter-increment: f2 0;  }
 #l32 {padding-left: 0pt;counter-reset: f3 1; }
 #l32> li>*:first-child:before {counter-increment: f3; content: counter(f1, decimal)"."counter(f2, decimal)"."counter(f3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l32> li:first-child>*:first-child:before {counter-increment: f3 0;  }
 #l33 {padding-left: 0pt; }
 #l33> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l34 {padding-left: 0pt; }
 #l34> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l35 {padding-left: 0pt; }
 #l35> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l36 {padding-left: 0pt; }
 #l36> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l37 {padding-left: 0pt;counter-reset: f3 1; }
 #l37> li>*:first-child:before {counter-increment: f3; content: counter(f1, decimal)"."counter(f2, decimal)"."counter(f3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l37> li:first-child>*:first-child:before {counter-increment: f3 0;  }
 #l38 {padding-left: 0pt; }
 #l38> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l39 {padding-left: 0pt; }
 #l39> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l40 {padding-left: 0pt; }
 #l40> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l41 {padding-left: 0pt; }
 #l41> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l42 {padding-left: 0pt;counter-reset: f2 1; }
 #l42> li>*:first-child:before {counter-increment: f2; content: counter(f1, decimal)"."counter(f2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l42> li:first-child>*:first-child:before {counter-increment: f2 0;  }
 #l43 {padding-left: 0pt;counter-reset: f2 1; }
 #l43> li>*:first-child:before {counter-increment: f2; content: counter(f1, decimal)"."counter(f2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l43> li:first-child>*:first-child:before {counter-increment: f2 0;  }
 #l44 {padding-left: 0pt;counter-reset: n1 1; }
 #l44> li>*:first-child:before {counter-increment: n1; content: counter(n1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l44> li:first-child>*:first-child:before {counter-increment: n1 0;  }
 #l45 {padding-left: 0pt;counter-reset: f3 1; }
 #l45> li>*:first-child:before {counter-increment: f3; content: counter(f1, decimal)"."counter(f2, decimal)"."counter(f3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l45> li:first-child>*:first-child:before {counter-increment: f3 0;  }
 #l46 {padding-left: 0pt;counter-reset: o1 1; }
 #l46> li>*:first-child:before {counter-increment: o1; content: counter(o1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l46> li:first-child>*:first-child:before {counter-increment: o1 0;  }
 #l47 {padding-left: 0pt;counter-reset: f3 1; }
 #l47> li>*:first-child:before {counter-increment: f3; content: counter(f1, decimal)"."counter(f2, decimal)"."counter(f3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l47> li:first-child>*:first-child:before {counter-increment: f3 0;  }
 li {display: block; }
 #l48 {padding-left: 0pt;counter-reset: p1 4; }
 #l48> li>*:first-child:before {counter-increment: p1; content: counter(p1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l48> li:first-child>*:first-child:before {counter-increment: p1 0;  }
 #l49 {padding-left: 0pt; }
 #l49> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l50 {padding-left: 0pt;counter-reset: p2 1; }
 #l50> li>*:first-child:before {counter-increment: p2; content: counter(p1, decimal)"."counter(p2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l50> li:first-child>*:first-child:before {counter-increment: p2 0;  }
 #l51 {padding-left: 0pt;counter-reset: p3 1; }
 #l51> li>*:first-child:before {counter-increment: p3; content: counter(p3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l51> li:first-child>*:first-child:before {counter-increment: p3 0;  }
 #l52 {padding-left: 0pt;counter-reset: r1 4; }
 #l52> li>*:first-child:before {counter-increment: r1; content: counter(r1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l52> li:first-child>*:first-child:before {counter-increment: r1 0;  }
 #l53 {padding-left: 0pt;counter-reset: r2 1; }
 #l53> li>*:first-child:before {counter-increment: r2; content: counter(r1, decimal)"."counter(r2, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l53> li:first-child>*:first-child:before {counter-increment: r2 0;  }
 #l54 {padding-left: 0pt;counter-reset: r3 1; }
 #l54> li>*:first-child:before {counter-increment: r3; content: counter(r1, decimal)"."counter(r2, decimal)"."counter(r3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l54> li:first-child>*:first-child:before {counter-increment: r3 0;  }
 #l55 {padding-left: 0pt; }
 #l55> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l56 {padding-left: 0pt;counter-reset: r4 1; }
 #l56> li>*:first-child:before {counter-increment: r4; content: counter(r4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l56> li:first-child>*:first-child:before {counter-increment: r4 0;  }
 #l57 {padding-left: 0pt; }
 #l57> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l58 {padding-left: 0pt;counter-reset: r4 1; }
 #l58> li>*:first-child:before {counter-increment: r4; content: counter(r4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l58> li:first-child>*:first-child:before {counter-increment: r4 0;  }
 #l59 {padding-left: 0pt; }
 #l59> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l60 {padding-left: 0pt;counter-reset: p3 1; }
 #l60> li>*:first-child:before {counter-increment: p3; content: counter(p3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l60> li:first-child>*:first-child:before {counter-increment: p3 0;  }
 li {display: block; }
 #l61 {padding-left: 0pt;counter-reset: t1 4; }
 #l61> li>*:first-child:before {counter-increment: t1; content: counter(t1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l61> li:first-child>*:first-child:before {counter-increment: t1 0;  }
 #l62 {padding-left: 0pt;counter-reset: t2 2; }
 #l62> li>*:first-child:before {counter-increment: t2; content: counter(t1, decimal)"."counter(t2, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l62> li:first-child>*:first-child:before {counter-increment: t2 0;  }
 #l63 {padding-left: 0pt;counter-reset: t3 1; }
 #l63> li>*:first-child:before {counter-increment: t3; content: counter(t1, decimal)"."counter(t2, decimal)"."counter(t3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l63> li:first-child>*:first-child:before {counter-increment: t3 0;  }
 #l64 {padding-left: 0pt;counter-reset: t4 1; }
 #l64> li>*:first-child:before {counter-increment: t4; content: counter(t4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l64> li:first-child>*:first-child:before {counter-increment: t4 0;  }
 #l65 {padding-left: 0pt; }
 #l65> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l66 {padding-left: 0pt;counter-reset: t4 1; }
 #l66> li>*:first-child:before {counter-increment: t4; content: counter(t4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l66> li:first-child>*:first-child:before {counter-increment: t4 0;  }
 #l67 {padding-left: 0pt; }
 #l67> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l68 {padding-left: 0pt;counter-reset: u1 5; }
 #l68> li>*:first-child:before {counter-increment: u1; content: counter(u1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l68> li:first-child>*:first-child:before {counter-increment: u1 0;  }
 #l69 {padding-left: 0pt; }
 #l69> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l70 {padding-left: 0pt;counter-reset: u2 1; }
 #l70> li>*:first-child:before {counter-increment: u2; content: counter(u1, decimal)"."counter(u2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l70> li:first-child>*:first-child:before {counter-increment: u2 0;  }
 #l71 {padding-left: 0pt;counter-reset: u3 1; }
 #l71> li>*:first-child:before {counter-increment: u3; content: counter(u3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l71> li:first-child>*:first-child:before {counter-increment: u3 0;  }
 #l72 {padding-left: 0pt;counter-reset: w1 5; }
 #l72> li>*:first-child:before {counter-increment: w1; content: counter(w1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l72> li:first-child>*:first-child:before {counter-increment: w1 0;  }
 #l73 {padding-left: 0pt;counter-reset: w2 1; }
 #l73> li>*:first-child:before {counter-increment: w2; content: counter(w1, decimal)"."counter(w2, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l73> li:first-child>*:first-child:before {counter-increment: w2 0;  }
 #l74 {padding-left: 0pt;counter-reset: w3 1; }
 #l74> li>*:first-child:before {counter-increment: w3; content: counter(w1, decimal)"."counter(w2, decimal)"."counter(w3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l74> li:first-child>*:first-child:before {counter-increment: w3 0;  }
 #l75 {padding-left: 0pt;counter-reset: u3 1; }
 #l75> li>*:first-child:before {counter-increment: u3; content: counter(u3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l75> li:first-child>*:first-child:before {counter-increment: u3 0;  }
 li {display: block; }
 #l76 {padding-left: 0pt; }
 #l76> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l77 {padding-left: 0pt;counter-reset: y1 1; }
 #l77> li>*:first-child:before {counter-increment: y1; content: counter(y1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l77> li:first-child>*:first-child:before {counter-increment: y1 0;  }
 li {display: block; }
 #l78 {padding-left: 0pt;counter-reset: z1 7; }
 #l78> li>*:first-child:before {counter-increment: z1; content: counter(z1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l78> li:first-child>*:first-child:before {counter-increment: z1 0;  }
 #l79 {padding-left: 0pt;counter-reset: z2 1; }
 #l79> li>*:first-child:before {counter-increment: z2; content: counter(z1, decimal)"."counter(z2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l79> li:first-child>*:first-child:before {counter-increment: z2 0;  }
 #l80 {padding-left: 0pt;counter-reset: z3 1; }
 #l80> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l80> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l81 {padding-left: 0pt;counter-reset: z3 1; }
 #l81> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l81> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l82 {padding-left: 0pt; }
 #l82> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l83 {padding-left: 0pt;counter-reset: z3 1; }
 #l83> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l83> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l84 {padding-left: 0pt;counter-reset: z3 1; }
 #l84> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l84> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l85 {padding-left: 0pt; }
 #l85> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l86 {padding-left: 0pt; }
 #l86> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l87 {padding-left: 0pt;counter-reset: z2 1; }
 #l87> li>*:first-child:before {counter-increment: z2; content: counter(z1, decimal)"."counter(z2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l87> li:first-child>*:first-child:before {counter-increment: z2 0;  }
 #l88 {padding-left: 0pt;counter-reset: z2 1; }
 #l88> li>*:first-child:before {counter-increment: z2; content: counter(z1, decimal)"."counter(z2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l88> li:first-child>*:first-child:before {counter-increment: z2 0;  }
 #l89 {padding-left: 0pt; }
 #l89> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l90 {padding-left: 0pt;counter-reset: z3 1; }
 #l90> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l90> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l91 {padding-left: 0pt;counter-reset: z4 1; }
 #l91> li>*:first-child:before {counter-increment: z4; content: counter(z4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l91> li:first-child>*:first-child:before {counter-increment: z4 0;  }
 #l92 {padding-left: 0pt; }
 #l92> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l93 {padding-left: 0pt; }
 #l93> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l94 {padding-left: 0pt;counter-reset: z3 1; }
 #l94> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l94> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l95 {padding-left: 0pt; }
 #l95> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l96 {padding-left: 0pt;counter-reset: z3 1; }
 #l96> li>*:first-child:before {counter-increment: z3; content: counter(z1, decimal)"."counter(z2, decimal)"."counter(z3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l96> li:first-child>*:first-child:before {counter-increment: z3 0;  }
 #l97 {padding-left: 0pt; }
 #l97> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l98 {padding-left: 0pt;counter-reset: z2 1; }
 #l98> li>*:first-child:before {counter-increment: z2; content: counter(z1, decimal)"."counter(z2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l98> li:first-child>*:first-child:before {counter-increment: z2 0;  }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="ug266-gecko-bootloader-users-guide/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">UG266: Silicon Labs Gecko Bootloader User’s Guide for GSDK 3.1 and Lower</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="ug266-gecko-bootloader-users-guide/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="205" height="1" alt="image" src="ug266-gecko-bootloader-users-guide/Image_003.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 8pt;text-indent: 0pt;text-align: left;">KEY POINTS</p><p style="padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="206" height="1" alt="image" src="ug266-gecko-bootloader-users-guide/Image_004.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-top: 4pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes the Gecko Bootloader components.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Summarizes how the Gecko Bootloader performs application upgrades and bootloader upgrades.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Reviews how to create customized bootloaders in Simplicity Studio.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Discusses the key configuration changes for various bootloader types.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes Gecko Bootloader security features and discusses how to use them.</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">This document describes the high-level implementation of the Sil- icon Labs Gecko Bootloader for EFM32 and EFR32 Series 1 and Series 2 microcontrollers, SoCs (System on Chips) and NCPs (Network Co-Processors), and provides information on different aspects of configuring the Gecko Bootloader. If you are not famil- iar with the basic principles of performing a firmware upgrade or want more information about upgrade image files, refer to <i>UG103.6: Bootloader Fundamentals</i>.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Beginning with Gecko SDK Suite (GSDK) 3.2, the Gecko Bootloader was implemented on a component architecture. If you are working with GSDK 3.2 or higher, see UG489: Silicon Labs Gecko Bootloader User&#39;s Guide for GSDK 3.2 and Higher. This document applies to the Gecko Bootloader delivered in GSDK 3.1 and lower.</p><p class="s3" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">For more information on using the Gecko Bootloader with differ- ent wireless stacks, see the following:</p><ul id="l2"><li><p class="s5" style="padding-top: 8pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">AN1084: Using the Gecko Bootloader with EmberZNet</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">UG235.06: Bootloading and OTA with Silicon Labs Connect v2.x</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">UG435.06: Bootloading and OTA with Silicon Labs Connect v3.x</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">AN1086: Using the Gecko Bootloader with Silicon Labs Bluetooth Applications</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">For more information on Series 2 device security, see:</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">AN1218: Series 2 Secure Boot with RTSL</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">AN1190: EFR32xG21 Secure Debug</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">AN1222: Production Programming of Series 2 Devices</p></li></ul><h3 style="padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><a name="bookmark0">Table of Contents</a></h3><ol id="l3"><li><p style="padding-top: 12pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark12" class="s6">Overview 4</a></p><ol id="l4"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark13" class="a">Core </a><a href="#bookmark13">5</a></p><ol id="l5"><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark14" class="a">Shared Memory </a><a href="#bookmark14">6</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark15" class="a">Drivers </a><a href="#bookmark15">6</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark16" class="a">Plugins </a><a href="#bookmark16">6</a></p><ol id="l6"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark17" class="a">Communication </a><a href="#bookmark17">7</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark18" class="a">Compression </a><a href="#bookmark18">7</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark19" class="a">Debug </a><a href="#bookmark19">7</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark20" class="a">GPIO Activation </a><a href="#bookmark20">7</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark21" class="a">Security </a><a href="#bookmark21">7</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark22" class="a">Storage </a><a href="#bookmark22">8</a></p></li></ol></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark27" class="s6">Gecko Bootloader File Format 9</a></p><ol id="l7"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark28" class="a">File Structures </a><a href="#bookmark28">9</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark29" class="a">Plaintext Tag Description </a><a href="#bookmark29">10</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark30" class="a">Encrypted Tag Descriptions </a><a href="#bookmark30">11</a></p></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark41" class="s6">Gecko Bootloader Operation - Application Upgrade 12</a></p><ol id="l8"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark42" class="a">Standalone Bootloader Operation </a><a href="#bookmark42">12</a></p><ol id="l9"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark43" class="a">Rebooting Into the Bootloader </a><a href="#bookmark43">12</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark44" class="a">Downloading and Applying a GBL Upgrade File </a><a href="#bookmark44">13</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark45" class="a">Booting Into the Application </a><a href="#bookmark45">13</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark46" class="a">Error handling </a><a href="#bookmark46">13</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark47" class="a">Application Bootloader Operation </a><a href="#bookmark47">14</a></p><ol id="l10"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark48" class="a">Downloading and Storing a GBL Upgrade Image File </a><a href="#bookmark48">15</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark49" class="a">Rebooting and Applying a GBL Upgrade File </a><a href="#bookmark49">15</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark50" class="a">Booting Into the Application </a><a href="#bookmark50">15</a></p></li></ol></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark61" class="s6">Gecko Bootloader Operation - Bootloader Upgrade 16</a></p><ol id="l11"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark62" class="a">Bootloader Upgrade on Bootloaders With Communication Interface (Standalone Bootloaders) </a><a href="#bookmark62">16</a></p><ol id="l12"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark63" class="a">Downloading and Applying a Bootloader GBL Upgrade File </a><a href="#bookmark63">17</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark64" class="a">Upgrading Bootloaders Without Secure Boot to Bootloaders With Secure Boot </a><a href="#bookmark64">17</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark65" class="a">Enabling Secure Boot RTSL on Series 2 Devices </a><a href="#bookmark65">18</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark66" class="a">Downloading and Applying an Application GBL Upgrade File </a><a href="#bookmark66">18</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark67" class="a">Bootloader Upgrade on Application Bootloaders With Storage </a><a href="#bookmark67">19</a></p><ol id="l13"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark68" class="a">Storage Space Size Configuration </a><a href="#bookmark68">20</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark69" class="a">Upgrading Bootloaders without Secure Boot to Bootloaders with Secure Boot </a><a href="#bookmark69">20</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark70" class="a">Enabling Secure Boot RTSL on Series 2 Devices </a><a href="#bookmark70">21</a></p></li></ol></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark77" class="s6">Gecko Bootloader Operation - Secure Engine Upgrade 22</a></p><ol id="l14"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark78" class="a">Secure Engine Upgrade on Bootloaders with Communication Interface (Standalone Bootloaders) </a><a href="#bookmark78">23</a></p><ol id="l15"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark79" class="a">Downloading and Applying a Secure Engine GBL Upgrade File </a><a href="#bookmark79">23</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark80" class="a">Downloading and Applying an Application GBL Upgrade File </a><a href="#bookmark80">24</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark81" class="a">Secure Engine Upgrade on Application Bootloaders with Storage </a><a href="#bookmark81">24</a></p><ol id="l16"><li><p style="padding-top: 3pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark82" class="a">Storage Space Size Configuration </a><a href="#bookmark82">25</a></p></li></ol></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark84" class="s6">Getting Started with the Gecko Bootloader 26</a></p></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark103" class="s6">Configuring the Gecko Bootloader 29</a></p><ol id="l17"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark104" class="a">Configuring Storage </a><a href="#bookmark104">29</a></p><ol id="l18"><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark105" class="a">SPI Flash Storage Configuration </a><a href="#bookmark105">29</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark106" class="a">Internal Storage Configuration </a><a href="#bookmark106">30</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark107" class="a">Compressed Upgrade Images </a><a href="#bookmark107">31</a></p><ol id="l19"><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark108" class="a">LZMA Compression Settings </a><a href="#bookmark108">31</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark109" class="a">Bootloader Example Configurations </a><a href="#bookmark109">31</a></p><ol id="l20"><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark110" class="a">UART XMODEM Bootloader </a><a href="#bookmark110">32</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark111" class="a">BGAPI UART DFU Bootloader </a><a href="#bookmark111">32</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark112" class="a">EZSP SPI Bootloader </a><a href="#bookmark112">32</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark113" class="a">SPI Flash Storage Bootloader </a><a href="#bookmark113">32</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark114" class="a">Internal Storage Bootloader </a><a href="#bookmark114">33</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark115" class="a">Image Acquisition Application Example Configuration </a><a href="#bookmark115">33</a></p><ol id="l21"><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark116" class="a">USB Device Loader </a><a href="#bookmark116">33</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark117" class="a">USB Host Loader </a><a href="#bookmark117">34</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark118" class="a">Setting a Version Number </a><a href="#bookmark118">34</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark119" class="a">Hardware Configuration </a><a href="#bookmark119">35</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark120" class="a">Size Requirements for Different Bootloader Configurations for Series 1 Devices </a><a href="#bookmark120">36</a></p></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark123" class="s6">Simplicity Commander and the Gecko Bootloader 37</a></p><ol id="l22"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark124" class="a">Creating GBL Files Using Simplicity Commander </a><a href="#bookmark124">37</a></p></li></ol></li><li><p style="padding-top: 9pt;padding-left: 38pt;text-indent: -16pt;text-align: left;"><a href="#bookmark139" class="s6">Gecko Bootloader Security Features 38</a></p><ol id="l23"><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark140" class="a">About Bootloader Image Security </a><a href="#bookmark140">38</a></p></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark141" class="a">About Application Image Security </a><a href="#bookmark141">38</a></p><ol id="l24"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark142" class="a">Secure Boot Procedure </a><a href="#bookmark142">39</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark143" class="a">Secure Firmware Upgrade </a><a href="#bookmark143">41</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark144" class="a">Using Application Image Security Features </a><a href="#bookmark144">41</a></p><ol id="l25"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark145" class="a">Generating Keys </a><a href="#bookmark145">42</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark146" class="a">Signing an Application Image for Secure Boot </a><a href="#bookmark146">42</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark147" class="a">Creating a Signed and Encrypted GBL Upgrade Image File From an Application </a><a href="#bookmark147">43</a></p></li></ol></li><li><p style="padding-top: 6pt;padding-left: 58pt;text-indent: -21pt;text-align: left;"><a href="#bookmark148" class="a">System Security Considerations </a><a href="#bookmark148">43</a></p><ol id="l26"><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark149" class="a">Key Storage </a><a href="#bookmark149">43</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark150" class="a">Write-Protecting the Bootloader </a><a href="#bookmark150">44</a></p></li><li><p style="padding-top: 2pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark151" class="a">Write-Protecting the Application </a><a href="#bookmark151">44</a></p></li><li><p style="padding-top: 1pt;padding-left: 79pt;text-indent: -30pt;text-align: left;"><a href="#bookmark152" class="a">Debug Access </a><a href="#bookmark152">44</a></p></li></ol></li></ol></li><li><p style="padding-top: 9pt;padding-left: 45pt;text-indent: -22pt;text-align: left;"><a href="#bookmark156" class="s6">Application Interface 45</a></p><ol id="l27"><li><p style="padding-top: 6pt;padding-left: 65pt;text-indent: -27pt;text-align: left;"><a href="#bookmark157" class="a">Application Properties </a><a href="#bookmark157">45</a></p></li><li><p style="padding-top: 6pt;padding-left: 65pt;text-indent: -27pt;text-align: left;"><a href="#bookmark158" class="a">Error Codes </a><a href="#bookmark158">46</a></p></li></ol></li></ol><ol id="l28"><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Overview</a><a name="bookmark12">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Silicon Labs Gecko Bootloader is a common bootloader for all the newer MCUs and wireless MCUs from Silicon Labs. The Gecko Bootloader can be configured to perform a variety of functions, from device initialization to firmware upgrades. Key features of the boot- loader are:</p><ul id="l29"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Useable across Silicon Labs Gecko microcontroller and wireless microcontroller families</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">In-field upgradeable</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Configurable</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Enhanced security features, including:</p><ul id="l30"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: justify;">Secure Boot: When Secure Boot is enabled, the bootloader enforces cryptographic signature verification of the application image on every boot, using asymmetric cryptography. This ensures that the application was created and signed by a trusted party.</p></li><li><p style="padding-top: 2pt;padding-left: 47pt;text-indent: -9pt;text-align: justify;">Signed upgrade image file: The Gecko Bootloader supports enforcing cryptographic signature verification of the upgrade image file. This allows the bootloader and application to verify that the application or bootloader upgrade comes from a trusted source before starting the upgrade process, ensuring that the image file was created and signed by a trusted party.</p></li><li><p style="padding-top: 2pt;padding-left: 47pt;text-indent: -9pt;text-align: justify;">Encrypted upgrade image file: The image file can also be encrypted to prevent eavesdroppers from acquiring the plaintext firm- ware image.</p><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark27" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">The Gecko Bootloader uses a proprietary format for its upgrade images, called GBL (Gecko Bootloader file). These files have the file extension “.gbl”. See section </a>2. Gecko Bootloader File Format <span style=" color: #000;">for more details.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 1 devices, the Gecko Bootloader has a two-stage design, first stage and main stage, where a minimal first stage bootloader is used to upgrade the main bootloader. The first stage bootloader only contains functionality to read from and write to fixed addresses in internal flash. To perform a main bootloader upgrade, the running main bootloader verifies the integrity and authenticity of the boot- loader upgrade image file. The running main bootloader then writes the upgrade image to a fixed location in internal flash and issues a reboot into the first stage bootloader. The first stage bootloader verifies the integrity of the main bootloader firmware upgrade image, by computing a CRC32 checksum before copying the upgrade image to the main bootloader location.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, the Gecko bootloader consists only of the main stage bootloader. The main bootloader is upgradable through the Secure Engine. The Secure Engine may be hardware-based, or virtual (software-based). Throughout this document, the following con- ventions will be used.</p></li></ul></li><li><p style="padding-top: 8pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">HSE - Hardware Secure Engine</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">VSE - Virtual Secure Engine</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">SE - Secure Engine (either HSE or VSE, in general)</p></li></ul><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Secure Engine provides functionality to install an image to address 0x0 in internal flash, by copying from a configurable location in internal flash. This makes it possible to have a 2-stage design, where the main bootloader is not present. However, the presence of a main bootloader is assumed throughout this document.</p><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark77" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">To perform a main bootloader upgrade, the running main bootloader verifies the integrity and authenticity of the bootloader upgrade image file. The running main bootloader then writes the upgrade image to the upgrade location in flash and requests that the Secure Engine installs it. On some devices, the Secure Engine is also capable of verifying the authenticity of the main bootloader update image against a root of trust. The Secure Engine itself is upgradable using the same mechanism. See </a><a href="#bookmark77" class="s10">5. Gecko Bootloader Operation - Se- </a>cure Engine Upgrade <span style=" color: #000;">for more details.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The main bootloader consists of a common core, drivers, and a set of plugins that give the bootloader specific capabilities. The com- mon bootloader core is delivered as a precompiled library, while the plugins are delivered as source code. The common bootloader core contains functionality to parse GBL files and flash their contents to the device.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader can be configured to perform firmware upgrades in standalone mode (also called a standalone bootloader) or in application mode (also called an application bootloader), depending on the plugin configuration. Plugins can be enabled and configured through the Simplicity Studio IDE.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A standalone bootloader uses a communications channel to get a firmware upgrade image. NCP (network co-processor) devices al- ways use standalone bootloaders. Standalone bootloaders perform firmware image upgrades in a single-stage process that allows the application image to be placed into flash memory, overwriting the existing application image, without the participation of the application itself. In general, the only time that the application interacts with a standalone bootloader is when it requests to reboot into the bootload- er. Once the bootloader is running, it receives packets containing the firmware upgrade image by a physical connection such as UART or SPI. To function as a standalone bootloader, a plugin providing a communication interface such as UART or SPI must be configured.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">An application bootloader relies on the application to acquire the firmware upgrade image. The application bootloader performs a firm- ware image upgrade by writing the firmware upgrade image to a region of flash memory referred to as the download space. The appli- cation transfers the firmware upgrade image to the download space in any way that is convenient (UART, over-the-air, Ethernet, USB, and so on). The download space is either an external memory device such as an EEPROM or dataflash or a section of the device’s internal flash. The Gecko Bootloader can partition the download space into multiple storage slots, and store multiple firmware upgrade</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">images simultaneously. To function as an application bootloader, a plugin providing a bootloader storage implementation has to be configured.</p><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark103" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Silicon Labs provides example bootloaders that come with a preconfigured set of plugins for configuration in either standalone or appli- cation mode, as described in section </a>7. Configuring the Gecko Bootloader<span style=" color: #000;">. The Silicon Labs Gecko SDK Suite also includes precom- piled bootloader images for several different EFR32 devices. As of this writing the images shown in the following table are provided.</span></p><p class="s12" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">The bootloader security features are not enabled in these precompiled images.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 8pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Table 1.1.  Prebuilt Bootloader Images</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 29pt;text-indent: 0pt;text-align: left;">Use</p></td><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 61pt;padding-right: 60pt;text-indent: 0pt;text-align: center;">Wireless Stack</p></td><td style="width:134pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Image Name</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 13pt;padding-right: 13pt;text-indent: 0pt;text-align: center;">Mode</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">Interface</p></td></tr><tr style="height:19pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">SoC</p></td><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 61pt;padding-right: 60pt;text-indent: 0pt;text-align: center;">EmberZNet PRO</p></td><td style="width:134pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-right: 7pt;text-indent: 0pt;text-align: right;">SPI Flash Storage Bootloader</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 13pt;padding-right: 13pt;text-indent: 0pt;text-align: center;">Application</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-right: 4pt;text-indent: 0pt;text-align: right;">SPI Serial Flash</p></td></tr><tr style="height:30pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">SoC</p></td><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 61pt;padding-right: 60pt;text-indent: 0pt;text-align: center;">Bluetooth</p></td><td style="width:134pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 45pt;padding-right: 8pt;text-indent: -36pt;text-align: left;">Bluetooth In-Place OTA DFU Bootloader</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 13pt;padding-right: 13pt;text-indent: 0pt;text-align: center;">Application</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 27pt;padding-right: 10pt;text-indent: -15pt;text-align: left;">OTA/internal flash</p></td></tr><tr style="height:19pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">NCP</p></td><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 61pt;padding-right: 60pt;text-indent: 0pt;text-align: center;">EmberZNet PRO</p></td><td style="width:134pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-right: 10pt;text-indent: 0pt;text-align: right;">UART XMODEM Bootloader</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 13pt;padding-right: 13pt;text-indent: 0pt;text-align: center;">Standalone</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 9pt;text-indent: 0pt;text-align: left;">UART (EZSP)</p></td></tr><tr style="height:19pt"><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">NCP</p></td><td style="width:192pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 61pt;padding-right: 60pt;text-indent: 0pt;text-align: center;">Bluetooth</p></td><td style="width:134pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-right: 6pt;text-indent: 0pt;text-align: right;">BGAPI UART DFU Bootloader</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 13pt;padding-right: 13pt;text-indent: 0pt;text-align: center;">Standalone</p></td><td style="width:75pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-right: 6pt;text-indent: 0pt;text-align: right;">UART (BGAPI)</p></td></tr></table><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note that on devices with a dedicated bootloader area (EFR32xG12 and later Series 1 devices), if the device is configured to boot to the bootloader area (that is, if bit 1 of the Config Lock Word 0 CLW0[1] is set), an image always has to be present in the bootloader area. The device is factory-programmed with a dummy bootloader that simply jumps directly to the application in main flash. This means that when flashing a bootloader to a device with a dedicated bootloader area, this dummy bootloader is replaced. If later during development using the bootloader is no longer desired, CLW0[1] has to be cleared or the dummy bootloader needs to be re-flashed. Platform-specific prebuilt dummy bootloader images are located in ./platform/bootloader/util/bin/. Note that since the dummy bootloader only consists of a few instructions and doesn&#39;t pad out the remainder of the bootloader area, only the first flash page (where the first- stage bootloader resides) is overwritten, so the main stage bootloader would likely remain intact after programming the dummy boot- loader. If desired, the rest of the flash pages in the bootloader area can then be erased separately.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On devices that do not have a dedicated bootloader area (EFR32xG1 and EFR32 Series 2), a dummy bootloader is not needed.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The following sections provide an overview of the Gecko Bootloader common core, drivers, and plugins. For details, including details on error codes and conditions, see the Gecko Bootloader API Reference, shipped with the SDK in the platform/bootloader/documentation folder.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader area can be fully erased using the <span class="s15">commander device pageerase --region @bootloader </span><a href="#bookmark123" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">command with Simplicity Commander. In this state, the device will not boot until CLW0[1] is cleared or the dummy bootloader is flashed. Read more about how to use Simplicity Commander with Gecko bootloader in section </a><span style=" color: #049;">8. Simplicity Commander and the Gecko Bootloader</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l31"><li><p class="s12" style="padding-top: 5pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark2">Core</a><a name="bookmark13">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The bootloader core contains the bootloader’s main functions. It also contains functionality to write to the internal flash, an image parser to parse and act upon the contents of GBL upgrade files, and functionality to boot the application in main flash.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The image parser can also optionally support the legacy Ember Bootloader (EBL) file format, but none of the security features offered by the Gecko Bootloader are supported if support for legacy EBL files is enabled.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A version of the GBL image parser without support for encrypted upgrade images is also available. This version can be used in flash space constrained bootloader applications where encryption of the upgrade image is not required.</p><ol id="l32"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark3">Shared Memory</a><a name="bookmark14">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In order to exchange information between the bootloader and application, a section of SRAM is used. The contents of SRAM are pre- served through a software reset, making the SRAM suitable as a communication channel between bootloader and application.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The shared memory has a size of 4 bytes, and is located at the first address of SRAM, 0x20000000. It is used to store a single word containing the reason for a reset. The structure of the reset cause word is defined in the Reset Information part of the Application Inter- face, in the file <b>btl_reset_info.h</b>, as 16 bits containing the reason, and 16 bits of signature indicating if the word is valid or not. If the signature reads 0xF00F, the reset reason is valid.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">All 16-bit reset reasons used by Silicon Labs have the most significant bit set to zero. If custom reset reasons are desired, it is recom- mended to set the most significant bit in order to avoid conflicting definitions.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In addition to the reset causes defined in the Reset Information documentation, the bootloader will enter firmware upgrade mode if the shared memory contains the value 0x00000001. This value is supported for compatibility with certain legacy Bluetooth applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark4">Drivers</a><a name="bookmark15">&zwnj;</a></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 19pt;text-align: left;">Different applications of firmware upgrade require different hardware drivers for use by the other components of the bootloader. Driver modules include:</p><ul id="l33"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Delay: Simple delay routines for use with plugins that require small delays or timeouts.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">SPI: Simple, blocking SPI master implementation for communication with external devices such as SPI flashes.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">SPI Slave: Flexible SPI Slave driver implementation for use in communication plugins implementing SPI protocols. This driver sup- ports both blocking and non-blocking operation, with DMA (Direct Memory Access) backing the background transfers to support non- blocking operation.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">UART: Flexible serial UART driver implementation for use in communication plugins implementing UART protocols. This driver sup- ports both blocking and non-blocking operation, with DMA backing the background transfers to support non-blocking operation. Ad- ditionally, support for hardware flow control (RTS/CTS) is included.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark5">Plugins</a><a name="bookmark16">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">All parts of the bootloader that are either optional or that may be exchanged for different configurations are implemented as plugins. Each plugin has a generic header file, and one or more implementations. Plugins include:</p><ul id="l34"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Communication</p><ul id="l35"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">UART: XMODEM</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">UART: BGAPI</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">SPI: EZSP</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Compression</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Debug</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">GPIO Activation</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Security</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Storage</p><ul id="l36"><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">Internal flash</p></li><li><p style="padding-top: 3pt;padding-left: 47pt;text-indent: -9pt;text-align: left;">External SPI flash</p></li></ul></li></ul><ol id="l37"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark6">Communication</a><a name="bookmark17">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Communication plugins provide an interface for implementing communication with a host device, such as a computer or a micro- controller. Several plugins implement the communication interface, using different transports and protocols.</p><ul id="l38"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">BGAPI UART DFU: By enabling the BGAPI communication plugin, the bootloader communication interface implements the UART DFU protocol using BGAPI commands. This plugin makes the bootloader compatible with the legacy UART bootloader that was pre- viously released with the Silicon Labs Bluetooth SDK versions 2.0.0-2.1.1 See <i>AN1053: Bluetooth® Device Firmware Update over UART for EFR32xG1 and BGM11x Series Products </i>for more information about this legacy bootloader.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">EZSP-SPI: By enabling the EZSP-SPI communication plugin, the bootloader communication interface implements the EZSP proto- col over SPI. This plugin makes the bootloader compatible with the legacy ezsp-spi-bootloader that was previously released with the EmberZNet wireless stack. See <i>AN760: Using the Ember Standalone Bootloader </i>for more information about legacy Ember stand- alone bootloaders.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">UART XMODEM: By enabling the UART XMODEM communication plugin, the bootloader communication interface implements the XMODEM-CRC protocol over UART. This plugin makes the bootloader compatible with the legacy serial-uart-bootloader that was previously released with the EmberZNet wireless stack. See <i>AN760: Using the Ember Standalone Bootloader </i>for more information about legacy Ember standalone bootloaders.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark7">Compression</a><a name="bookmark18">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Compression plugins provide capability for the bootloader GBL file parser to handle compressed GBL upgrade images. Each com- pression plugin provides support for one (de)compression algorithm. At the time of writing, decompression of data compressed with the LZ4 and LZMA algorithms is supported, through the <i>GBL Compression (LZ4) </i>and <i>GBL Compression (LZMA) </i>plugins.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark8">Debug</a><a name="bookmark19">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">This plugin provides the bootloader with support for debugging output. If the plugin is configured to enable debug prints, short debug messages will be printed over Serial Wire Output (SWO), which can be accessed in multiple ways, including using Simplicity Commander, and by connecting to port 4900 of the Wireless Starter Kit TCP/IP interface.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">To turn on debug prints, enable the Debug plugin and select <b>Debug prints</b>. Select <b>Debug asserts </b>to enable assertions in the source code.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">On Series 1 devices, also select the GPIO peripheral in the Hardware Configurator.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-top: 5pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark9">GPIO Activation</a><a name="bookmark20">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">This plugin provides functionality to enter firmware upgrade mode automatically after reset if a GPIO pin is active during boot. The GPIO pin location and polarity are configurable.</p><ul id="l39"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">GPIO: By enabling the GPIO activation plugin, the firmware upgrade mode can be activated by the push buttons.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">EZSP GPIO: The EZSP communication protocol over SPI can be used together with this plugin. By enabling the EZSP GPIO plugin, the firmware upgrade mode can be entered by activating the <i>nWake </i>pin.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark10">Security</a><a name="bookmark21">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Security plugins provide implementations of cryptographic operations as well as functionality to compute checksums and to read crypto- graphic keys from manufacturing tokens.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Modules include:</p><ul id="l40"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">AES: AES decryption functionality</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">CRC16: CRC16 functionality</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">CRC32: CRC32 functionality</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">ECDSA: ECDSA signature verification functionality</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">SHA-256: SHA-256 digest functionality</p></li></ul></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark11">Storage</a><a name="bookmark22">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">These plugins provide the bootloader with multiple storage options for SoCs. All storage implementations have to provide an API to access image files to be upgraded. This API is based on the concept of dividing the download space into storage slots, where each slot has a predefined size and location in memory and can be used to store a single upgrade image. Some storage implementations also support a raw storage API to access the underlying storage medium. This can be used by applications to store other data in parts of the storage medium that are not used for storing firmware upgrade images. Implementations include:</p><ul id="l41"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Internal Flash: The internal flash storage implementation uses the internal flash of the device for upgrade image storage. Note that this storage area is only a download space and is separate from the portion of internal flash used to hold the active application code.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">SPI Flash: The SPI flash storage implementation supports a variety of SPI flash parts. The subset of devices supported can be con- figured at compile time using the checkboxes found in the plugin options area for the SPI Flash Storage plugin in AppBuilder’s Boot- loader framework. (The default configuration if no checkboxes are selected is to include drivers for all supported parts.) Including support for multiple devices requires more flash space in the bootloader. The SPI flash storage implementation does not support any write protection functionality. Supported SPI flash parts are shown in the following table.</p></li></ul><p class="s12" style="padding-top: 6pt;padding-left: 35pt;text-indent: 0pt;text-align: left;">Note: <span class="p">The low power devices are recommended for battery-operated applications. Use of the other listed devices will decrease bat- tery life due to higher quiescent current, but this can be mitigated with external shutdown FET circuitry if desired.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="text-indent: 0pt;text-align: right;">Table 1.2. Supported Serial Dataflash/EEPROM External Memory Parts</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Manufacturer Part Number</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">Size (kB)</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 7pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">Quiescent Current (µA Typical)*</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Macronix MX25R8035F (low power)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1024</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 7pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">0.007</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Macronix MX25R6435SF (low power)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">8192</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 7pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">0.007</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Spansion S25FL208K</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1024</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 7pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">15</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Winbond W25X20BVSNIG (W25X20CVSNJG for high- temperature support)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">256</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">1</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Winbond W25Q80BVSNIG (W25Q80BVSNJG for high- temperature support)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1024</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">1</p></td></tr><tr style="height:30pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 13pt;text-indent: 0pt;text-align: left;">Macronix MX25L2006EM1I-12G (MX25L2006EM1R-12G for high-temperature support)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">256</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">2</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Macronix MX25L4006E</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">512</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">2</p></td></tr><tr style="height:30pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 13pt;text-indent: 0pt;text-align: left;">Macronix MX25L8006EM1I-12G (MX25L8006EM1R-12G for high-temperature support)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1024</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">2</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Macronix MX25L1606E</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">2048</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">2</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Macronix MX25U1635E (2V)</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">2048</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">2</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Atmel/Adesto AT25DF041A</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">512</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 7pt;padding-right: 6pt;text-indent: 0pt;text-align: center;">15</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Atmel/Adesto AT25DF081A</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1024</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">5</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Atmel/Adesto AT25SF041</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">512</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">2</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Micron (Numonyx) M25P20</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">256</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">1</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Micron (Numonyx) M25P40</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">512</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">1</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Micron (Numonyx) M25P80</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">1024</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">1</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Micron (Numonyx) M25P16</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">2048</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">1</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ISSI IS25LQ025B</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">32</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ISSI IS25LQ512B</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">64</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ISSI IS25LQ010B</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">126</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ISSI IS25LQ020B</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">256</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td></tr><tr style="height:19pt"><td style="width:329pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ISSI IS25LQ040B</p></td><td style="width:70pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 14pt;padding-right: 14pt;text-indent: 0pt;text-align: center;">512</p></td><td style="width:152pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;text-indent: 0pt;text-align: center;">8</p></td></tr></table><p style="padding-top: 7pt;text-indent: 0pt;text-align: right;">* Quiescent current values are as of December 2017; check the latest part specifications for any changes.</p></li></ol></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark23">Gecko Bootloader File Format</a><a name="bookmark27">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The GBL file format is used by the Gecko Bootloader. File formats described in this section are generated by Simplicity Commander commands. For more information, see <i>UG162: Simplicity Commander Reference Guide</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l42"><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark24">File Structures</a><a name="bookmark28">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The GBL file format is composed of a number of tags that indicate a format of the subsequent data and the length of the entire tag. The format of a tag is as follows:</p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">Tag ID</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">Tag Length</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">Tag Payload</p></td></tr><tr style="height:19pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">4 bytes</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">4 bytes</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">Variable (according to tag length)</p></td></tr></table></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark25">Plaintext Tag Description</a><a name="bookmark29">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Tag Name</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">ID</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:62pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Header Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x03A617EB</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: left;">This must be the first tag in the file. The header tag contains the version number of the GBL file specification, and flags indicat- ing the type of GBL file – whether it is sign- ed or encrypted.</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Application Info Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xF40A0AF4</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 5pt;text-indent: 0pt;text-align: left;">This tag contains information about the ap- plication update image that is contained in this GBL file</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL SE Upgrade Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x5EA617EB</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: justify;">This tag contains a complete encrypted Se- cure Engine update image. Only applicable on Series 2 devices.</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Bootloader Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xF50909F5</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 16pt;text-indent: 0pt;text-align: left;">This tag contains a complete bootloader update image.</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Program Data Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xFE0101FE / 0xFD0303FD</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 15pt;text-indent: 0pt;text-align: justify;">This tag contains information about what application data to program at a specific address into the main flash memory.</p></td></tr><tr style="height:51pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Program LZ4 Compressed Data Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xFD0505FD</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;text-align: left;">This tag contains LZ4 compressed informa- tion about what application data to program at a specific address into the main flash memory.</p></td></tr><tr style="height:51pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 19pt;text-indent: 0pt;text-align: left;">GBL Program LZMA Compressed Data Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xFD0707FD</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;text-align: left;">This tag contains LZMA compressed infor- mation about what application data to pro- gram at a specific address into the main flash memory.</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Metadata Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xF60808F6</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 5pt;text-indent: 0pt;text-align: left;">This tag contains metadata that the boot- loader does not parse, but can be returned to the application through a callback.</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Certificate Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xF30B0BF3</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 14pt;text-indent: 0pt;text-align: justify;">This tag contains a certificate that will be used to verify the authenticity of the GBL file.</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Signature Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xF70A0AF7</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 8pt;text-indent: 0pt;text-align: left;">This tag contains the ECDSA-P256 signa- ture of all preceding data in the file.</p></td></tr><tr style="height:51pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL End Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xFC0404FC</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: left;">This tag indicates the end of the GBL file. It contains a 32-bit CRC for the entire file as an integrity check. The CRC is a non-cryp- tographic check. This must be the last tag.</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The allowed sequence of GBL tags in a GBL file is shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><span><img width="711" height="90" alt="image" src="ug266-gecko-bootloader-users-guide/Image_005.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 2.1.  GBL Tag Sequence</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark26">Encrypted Tag Descriptions</a><a name="bookmark30">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The encrypted GBL file format is similar to the unencrypted version. It introduces a number of new tags.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Tag Name</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">ID</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Header Tag</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x03A617EB</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 4pt;text-indent: 0pt;text-align: justify;">The GBL header is the same as for a plain- text GBL file, but the flag indicating that the GBL file is encrypted must be set.</p></td></tr><tr style="height:40pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Encryption Init Header</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xFA0606FA</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 8pt;text-indent: 0pt;text-align: left;">This contains information about the image encryption such as the Nonce and the amount of encrypted data.</p></td></tr><tr style="height:62pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Encrypted Program Data</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xF90707F9</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 6pt;text-indent: 0pt;text-align: left;">This contains an encrypted payload con- taining a plaintext GBL tag, one of Applica- tion Info, Bootoader, Metadata or Program Data. The data is encrypted using AES- CTR-128.</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The allowed sequence of GBL tags in an encrypted GBL file is shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 27pt;text-indent: 0pt;text-align: left;"><span><img width="710" height="33" alt="image" src="ug266-gecko-bootloader-users-guide/Image_006.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 2.2.  Encrypted GBL Tag Sequence</p></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark31">Gecko Bootloader Operation - Application Upgrade</a><a name="bookmark41">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark61" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">This section summarizes Gecko Bootloader operation for updating application firmware, first if the Gecko Bootloader is configured in standalone mode and then if it is configured in application mode. Section </a>4. Gecko Bootloader Operation - Bootloader Upgrade <span style=" color: #000;">pro- vides the same information for updating the bootloader firmware.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The figures that illustrate Gecko Bootloader operation in this section do not provide information about the bootloader memory layouts for different devices. For more details refer to the section &quot;Memory Space for Bootloading&quot; in <i>UG103.6: Bootloader Fundamentals</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l43"><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark32">Standalone Bootloader Operation</a><a name="bookmark42">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Standalone bootloader operation is illustrated in the following figure:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 110pt;text-indent: 0pt;text-align: left;"><span><img width="492" height="328" alt="image" src="ug266-gecko-bootloader-users-guide/Image_007.png"/></span></p><p style="padding-top: 6pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Standalone bootloader operation, where green is a running component</p><p class="s12" style="padding-top: 6pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 3.1.  Standalone Bootloader Operation</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l44"><li><p style="padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">A GBL file containing an application image is transmitted from the host to the device. If image encryption is enabled in the main stage bootloader and the image is encrypted, decryption is performed during the process of receiving and parsing the GBL file.</p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The bootloader applies the application upgrade from the GBL upgrade file on-the-fly. If image authentication is enabled in the main stage bootloader and the GBL file contains a signature, the authenticity of the image is verified before completing the process.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the application. Application upgrade is complete.</p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l45"><li><p class="s12" style="padding-top: 5pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark33">Rebooting Into the Bootloader</a><a name="bookmark43">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader supports multiple mechanisms for triggering the bootloader. If the GPIO Activation plugin is enabled, the host device can keep this pin low/high (depending on configuration) through reset to make the device enter the bootloader. The bootloader can also be entered through software. The <span class="s15">bootloader_rebootAndInstall </span>API first signals to the bootloader that it should enter firm- ware upgrade mode by writing a command to the shared memory location at the bottom of SRAM, and then performs a software reset. If the bootloader finds the correct command in shared memory upon boot, it will enter firmware upgrade mode instead of booting the existing application.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark34">Downloading and Applying a GBL Upgrade File</a><a name="bookmark44">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the bootloader enters firmware upgrade mode, it enters a receive loop waiting for data from the host device. The specifics of the receive loop depend on the protocol. Received packets are passed to the image parser, a state machine that parses the data and re- turns a callback containing any data that should be acted upon. The bootloader core implements this callback, and flashes the data to internal flash at the address specified. If GBL file authentication or encryption is enabled, the image parser will enforce this, and abort the image upgrade.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader prevents a newly uploaded image from being bootable by holding back parts of the application vector table until the GBL file CRC and GBL signature (if required) have been verified.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark35">Booting Into the Application</a><a name="bookmark45">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When an application upgrade is completed, the bootloader triggers a reboot with a message in shared memory at the bottom of SRAM signaling that an application upgrade has been successfully completed. The application can use this reset information to learn that an application upgrade was just performed.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Before jumping to the main application, the bootloader verifies that the application is ready to run. This includes verifying that the Pro- gram Counter of the application is valid, and, optionally if Secure Boot is enabled, that the application passes signature verification.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark36">Error handling</a><a name="bookmark46">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If the application upgrade is interrupted at any time, the device will be without a working application. The bootloader then resets the device, and re-enters firmware upgrade mode. The host device can easily restart the application upgrade process, to try loading the upgrade image again.</p></li></ol></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark37">Application Bootloader Operation</a><a name="bookmark47">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following figure illustrates the application bootloader operation both for a single image/single storage slot, and multiple images/ multiple storage slots.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 127pt;text-indent: 0pt;text-align: left;"><span><img width="442" height="326" alt="image" src="ug266-gecko-bootloader-users-guide/Image_008.png"/></span></p><p class="s12" style="padding-top: 6pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 3.2.  Application Bootloader Operation: Single Storage Slot</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 142pt;text-indent: 0pt;text-align: left;"><span><img width="405" height="329" alt="image" src="ug266-gecko-bootloader-users-guide/Image_009.png"/></span></p><p class="s12" style="padding-top: 3pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 3.3.  Application Bootloader Operation: Multiple Storage Slots</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l46"><li><p style="padding-left: 40pt;text-indent: -8pt;text-align: left;">A GBL file is downloaded onto the storage medium of the device (internal flash or external dataflash), as described below, and the presence of an upgrade image is indicated.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the bootloader, and the bootloader enters firmware upgrade mode.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The bootloader applies the application upgrade from the GBL upgrade file.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the application. Application upgrade is complete.</p></li></ol><ol id="l47"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark38">Downloading and Storing a GBL Upgrade Image File</a><a name="bookmark48">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To prepare for receiving an upgrade image, the application finds an available storage slot, or erases an existing one using</p><p class="s15" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">bootloader_eraseStorage<span class="p">. If the bootloader only supports a single storage slot, a value of 0 should be used for the slot ID.</span></p><p style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The application then receives a GBL file using an applicable protocol, such as Ethernet, USB, Zigbee, OpenThread or Bluetooth, and stores it in the slot by calling <span class="s15">bootloader_writeStorage</span>.</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When download is complete, the application can optionally verify the integrity of the GBL file by calling <span class="s15">bootloader_verifyImage</span>. This is also done by the bootloader before applying the image, but can be done from the application in order to avoid rebooting into the bootloader if the received image was corrupt.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If multiple storage slots are supported, the application should write a bootload list by calling <span class="s15">bootloader_setImageToBootload</span><a href="#bookmark47" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">. The list is written to the two bootload info pages as shown in the second figure in section </a><span style=" color: #049;">3.2 Application Bootloader Operation</span>. The bootload list is a prioritized list of slots indicating the order the bootloader should use when attempting to perform a firmware upgrade. The boot- loader attempts to verify the images in these storage slots in sequence, and applies the first image to pass verification. If only a single storage slot is supported, the bootloader treats the entire download space as a single storage slot.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark39">Rebooting and Applying a GBL Upgrade File</a><a name="bookmark49">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader can be entered through software. The <span class="s15">bootloader_rebootAndInstall </span>API signals to the bootloader that it should en- ter firmware upgrade mode by writing a command to the shared memory location at the bottom of SRAM, and then performs a software reset. If the bootloader finds the correct command in shared memory upon boot, it enters firmware upgrade mode instead of booting the existing application.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader iterates over the list of storage slots marked for bootload and attempts to verify the image stored in each. Once it finds a valid GBL upgrade file, firmware upgrade is attempted from this GBL file. If the upgrade fails, the bootloader moves to the next image in the list. If no images pass verification, the bootloader reboots back into the existing application with a message in the shared memory location in SRAM indicating that no good upgrade images were found.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark40">Booting Into the Application</a><a name="bookmark50">&zwnj;</a></p></li></ol></li></ol></li></ol><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When an application upgrade is completed, the bootloader triggers a reboot with a message in shared memory at the bottom of SRAM signaling that an application upgrade has been successfully completed. The application can use this reset information to learn that an application upgrade was just performed.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Before jumping to the main application, the bootloader verifies that the application is ready to run. This includes verifying that the Pro- gram Counter of the application is valid and optionally, if Secure Boot is enabled, that the application passes signature verification.</p><ol id="l48"><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark51">Gecko Bootloader Operation - Bootloader Upgrade</a><a name="bookmark61">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark77" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Bootloader upgrade functionality is provided by the first stage bootloader on Series 1 devices, or the Secure Engine on Series 2 devi- ces. The Secure Engine itself is also upgradable. More details can be found in section </a><a href="#bookmark77" class="s10">5. Gecko Bootloader Operation - Secure Engine </a>Upgrade<span style=" color: #000;">. On Series 1 devices, the first stage bootloader is not upgradable.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Requirements for upgrading the main bootloader vary depending on the bootloader configuration:</p><ul id="l49"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Application bootloader with storage: Upgrading the main bootloader requires a single GBL file containing both bootloader and appli- cation upgrade images.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Standalone bootloader with communication interface: Upgrading the bootloader requires two GBL files, one with only the bootloader upgrade image, and one with only the application upgrade image.</p></li></ul><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark147" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Security of the bootloader upgrade process is provided by signing the GBL file, as described in section </a><a href="#bookmark147" class="s10">9.3.3 Creating a Signed and </a>Encrypted GBL Upgrade Image File From an Application<span style=" color: #000;">.</span></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The figures that illustrate Gecko Bootloader operation in this section do not provide information about the bootloader memory layouts for different devices. For more details refer to the Memory Space For Bootloading section in <i>UG103.6: Bootloader Fundamentals</i>. For convenience, the figures do not distinguish between HSE and VSE.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l50"><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark52">Bootloader Upgrade on Bootloaders With Communication Interface (Standalone Bootloaders)</a><a name="bookmark62">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The process is illustrated in the following figure:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 113pt;text-indent: 0pt;text-align: left;"><span><img width="483" height="504" alt="image" src="ug266-gecko-bootloader-users-guide/Image_010.png"/></span></p><p class="s12" style="padding-top: 3pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 4.1.  Standalone Bootloader: Bootloader Upgrade</p><ol id="l51"><li><p style="padding-top: 8pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">A GBL file containing only a bootloader upgrade image is transmitted from the host to the device.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The contents of the GBL Bootloader tag are written to the bootloader upgrade location in internal flash, overwriting the existing application.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the first stage bootloader / Secure Engine.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The first stage bootloader / Secure Engine replaces the main bootloader with the new version found in the bootloader upgrade location.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the new main bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">A GBL file containing only an application image is transmitted from the host to the device.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The bootloader applies the application image from the GBL upgrade file on-the-fly.</p></li><li><p style="padding-top: 3pt;padding-left: 22pt;text-indent: 9pt;line-height: 182%;text-align: left;">The device boots into the application. Bootloader upgrade is complete. A bootloader upgrade is started in the same way as an application upgrade.</p><ol id="l52"><ol id="l53"><ol id="l54"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark53">Downloading and Applying a Bootloader GBL Upgrade File</a><a name="bookmark63">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When the bootloader has entered the receive loop, a GBL upgrade file containing a bootloader upgrade is transmitted to the bootloader. When a packet is received, it is passed to the image parser. The image parser parses the data, and returns bootloader upgrade data in a callback. The bootloader core implements this callback, and flashes the data to internal flash at the bootloader upgrade location.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader prevents a newly uploaded bootloader upgrade image from being interpreted as valid by holding back parts of the boot- loader upgrade vector table until the GBL file CRC and GBL signature (if required) have been verified.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When a complete bootloader upgrade image is received, the main bootloader signals the first stage bootloader / Secure Engine that it should enter firmware upgrade mode. On Series 1 devices, this is done by writing a command to the shared memory location at the bottom of SRAM, and then performing a software reset. On Series 2 devices, Secure Engine communication is used to signal that boot- loader upgrade is ready to be performed.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 1 devices, the first stage bootloader verifies the CRC on the current main bootloader and verifies the CRC of the bootloader upgrade present in the bootloader upgrade location in internal flash.</p><ul id="l55"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">If the CRC in the upgrade image location and the CRC in the current main bootloader are both valid, then the upgrade image will be copied over the main bootloader if the version number of the upgrade is higher than the current main bootloader version.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">If the CRC in the upgrade image location is valid and the CRC in the current main bootloader location is not valid, the upgrade im- age will be copied over the main bootloader regardless of the version. This is because the version of the main bootloader cannot be relied upon if the main bootloader image is corrupt.</p></li><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">If the CRC in the upgrade location is not valid, the upgrade will not be applied.</p></li></ul><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark118" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">On Series 2 devices, the authenticity of the main bootloader optionally can be verified before applying the bootloader upgrade. See section </a>7.5 Setting a Version Number <span style=" color: #000;">for more information about versioning bootloader images.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: justify;"><a name="bookmark54">Upgrading Bootloaders Without Secure Boot to Bootloaders With Secure Boot</a><a name="bookmark64">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A bootloader without the secure boot feature can be upgraded to a bootloader with the secure boot feature, using the following proce- dure:</p><ol id="l56"><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Prepare a Gecko Bootloader image with secure boot enabled. The version of the bootloader needs to be higher than the bootload- er on the device.</p><ul id="l57"><li><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">Turn on secure boot in AppBuilder by going to the Core plugin and selecting the <b>Enable secure boot </b>option.</p></li><li><p style="padding-top: 3pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">(Optional) In the Core plugin, select the <b>Require signed firmware upgrade files </b>option. This means that the Gecko Bootloader will only accept signed GBL files.</p></li></ul></li><li><p class="s11" style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark145" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Generate a public/private Signing Key pair. See section </a>9.3.1 Generating Keys <span style=" color: #000;">for more information on creating a Signing Key pair.</span></p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Write the public key generated from the previous step to the device. The public key is stored as a manufacturing token in the de- vice by default. This key can be written by application code running on the device as long as the Lock Bits page is configured to allow flash writes. If the Lock Bits page is locked, it can only be erased by the debugger. Therefore, signing/decryption keys resid- ing in the Lock Bits page cannot be erased from firmware. This means that, for devices in the field, those areas in flash cannot be replaced with new ones. However, the Gecko Bootloader prepared from step 1 can be modified to look for the decryption and sig- nature keys in a different location. Key locations are defined in the bootloader project file <span class="s15">btl_security_tokens.c</span>.</p></li><li><p class="s11" style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark147" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Create a GBL file using the Gecko Bootloader image. The GBL file needs to be signed/unsigned depending on the current configu- ration of the Gecko Bootloader running on the device. For more details on creating a GBL file see section </a><a href="#bookmark147" class="s10">9.3.3 Creating a Signed and Encrypted GBL Upgrade Image File From an </a>Application<span style=" color: #000;">.</span></p></li><li><p class="s11" style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark62" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Upload the GBL file. For more details on the upgrade process refer to section </a><a href="#bookmark62" class="s10">4.1 Bootloader Upgrade on Bootloaders With Com- </a>munication Interface (Standalone Bootloaders)<span style=" color: #000;">.</span></p></li></ol></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark55">Enabling Secure Boot RTSL on Series 2 Devices</a><a name="bookmark65">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Secure Boot RTSL (Root of Trust and Secure Loader) can be enabled using the following procedure:</p><ol id="l58"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Prepare a Gecko Bootloader image with secure boot enabled. The version of the Gecko Bootloader needs to be higher than the Gecko Bootloader on the device.</p><ul id="l59"><li><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">Turn on secure boot in AppBuilder by going to the Core plugin and selecting the <b>Enable secure boot </b>option.</p></li><li><p style="padding-top: 3pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">For EFR32xG21, on the Core plugin, disable the <b>Allow use of public key from manufacturing token storage </b>option. This means that the Gecko Bootloader will never make use of the public key stored in the last page of the main flash</p></li><li><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">(Optional) On the Core plugin, select the <b>Require signed firmware upgrade files </b>option from the Core plugin. The means that the Gecko Bootloader will only accept signed GBL files.</p></li></ul></li><li><p class="s11" style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark145" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Generate a public/private Signing Key pair. See section </a>9.3.1 Generating Keys <span style=" color: #000;">for more information on creating a Signing Key pair.</span></p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark147" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Prepare an application that installs the public key generated from step 2 to the Secure Engine One-time Programmable memory. Installing a key in the VSE requires a reset routine. Make sure that the application does not end up in the reset loop. Create an unsigned GBL file from this application and upload it. For more information on installing public keys, see section </a><a href="#bookmark147" class="s10">9.3.3 Creating a Signed and Encrypted GBL Upgrade Image File From an </a>Application<span style=" color: #000;">.</span></p></li><li><p class="s11" style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark146" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Sign the Gecko Bootloader image generated from step 1 using the private key generated in step 2. See section </a><a href="#bookmark146" class="s10">9.3.2 Signing an Application Image for Secure Boot</a> <span style=" color: #000;">for more information on signing binaries.</span></p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">Make a custom application that turns on secure boot on the Secure Engine and sign this application binary with the private key generated from step 2. For more details on how to turn on secure boot on the Secure Engine, see <i>AN1218: Series 2 Secure Boot with RTSL</i>.</p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Create a GBL file using the Gecko Bootloader image from step 4.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Create a GBL file using the application from step 5. The GBL file need to be signed if the Core plugin option <b>Require signed firm- ware upgrade files </b>was selected in step 1.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">Upload the GBL file containing the Gecko Bootloader image.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">Upload the GBL file containing the application.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-top: 5pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark56">Downloading and Applying an Application GBL Upgrade File</a><a name="bookmark66">&zwnj;</a></p></li></ol></ol></ol><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark42" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Once the bootloader upgrade is completed, the existing application is rendered invalid, since the bootloader upgrade location overlaps with the application. A GBL upgrade file containing an application upgrade is transmitted to the bootloader. The application upgrade process follows that in section </a>3.1 Standalone Bootloader Operation<span style=" color: #000;">.</span></p></li></ol></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark57">Bootloader Upgrade on Application Bootloaders With Storage</a><a name="bookmark67">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The process is illustrated in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 95pt;text-indent: 0pt;text-align: left;"><span><img width="531" height="504" alt="image" src="ug266-gecko-bootloader-users-guide/Image_011.png"/></span></p><p class="s12" style="padding-top: 3pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 4.2.  Application Bootloader: Bootloader Upgrade</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l60"><li><p style="padding-left: 41pt;text-indent: -8pt;text-align: left;">A single GBL file containing both a bootloader upgrade image and an application image is downloaded onto the storage medium of the device (internal flash or external SPI flash).</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The main bootloader copies its upgrade image into internal flash at the bootloader upgrade location, overwriting the existing appli- cation.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the first stage bootloader / Secure Engine.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The first stage bootloader / Secure Engine replaces the main bootloader with the new version.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the new main bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The bootloader applies the application image from the GBL upgrade file.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the application. Bootloader upgrade is complete.</p></li></ol></li></ol></li></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">A bootloader upgrade is started in the same way as an Application Upgrade. A single GBL file containing both a bootloader and an application upgrade is written to storage by the application, and the bootloader is entered.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The bootloader iterates over the list of storage slots marked for bootload, and attempts to verify the GBL file stored within. Verification returns information about whether the GBL file contains an application, or both a bootloader and an application. The image parser par- ses the file. If the GBL file contains a bootloader, the bootloader upgrade data is returned in a callback. The bootloader core imple- ments this callback, and flashes the data to internal flash at the bootloader upgrade location.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader prevents a newly uploaded bootloader upgrade image from being interpreted as valid by holding back parts of the boot- loader upgrade vector table until the GBL file CRC and GBL signature (if required) have been verified.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 1 devices, the main bootloader signals the first stage bootloader that it should enter firmware upgrade mode by writing a command to the shared memory location at the bottom of SRAM, and then performing a software reset. On Series 2 devices, Secure Engine communication interface is used to signal the Secure Engine that a bootloader upgrade is ready to be performed.</p><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark118" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">On Series 1 devices, the first stage bootloader verifies the CRC of the bootloader upgrade present in the bootloader upgrade location in internal flash, and copies the bootloader upgrade over the main bootloader if the version number of the upgrade is higher than the ver- sion number of the existing main bootloader. On Series 2 devices, the authenticity of the main bootloader optionally can be verified before applying the bootloader upgrade. See section </a>7.5 Setting a Version Number <span style=" color: #000;">for more information about versioning bootloader images.</span></p><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark47" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">The new main bootloader is entered, and the images in the list of storage slots marked for bootload are verified. When the image parser parses the slot containing the GBL file with the bootloader + application upgrade, the version number of the bootloader upgrade is equal to the running main bootloader version, so another bootloader upgrade will not be performed. Instead, the application upgrade data are returned in a callback. Bootloading of the new application proceeds as described in section </a><a href="#bookmark47" class="s10">3.2 Application Bootloader Opera- </a>tion<span style=" color: #000;">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l61"><ol id="l62"><ol id="l63"><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark58">Storage Space Size Configuration</a><a name="bookmark68">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The storage space size must be configured to have enough space to store the upgrade images.The below table shows the reserved SE upgrade image sizes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Device Family</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">Reserved flash for SE upgrade image</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">EFR32xG21</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">48 kB</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">EFR32xG22</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">24 kB</p></td></tr></table><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark120" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Depending on the configuration, the bootloader size can vary. The size requirements of the bootloader can be found in section </a><a href="#bookmark120" class="s10">7.7 Size </a><span style=" color: #049;">Requirements for Different Bootloader Configurations for Series 1 Devices</span>. The bootloader size for EFR32xG21 devices can be up to 16 kB, and for EFR32xG22 devices, the bootloader size can be up to 24 kB. For more details refer to the section &quot;Memory Space for Bootloading&quot; in <i>UG103.6: Bootloader Fundamentals</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark59">Upgrading Bootloaders without Secure Boot to Bootloaders with Secure Boot</a><a name="bookmark69">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A bootloader without the secure boot feature can be upgraded to a bootloader with the secure boot feature. The procedure is as fol- lows:</p><ol id="l64"><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Prepare a Gecko Bootloader image with secure boot enabled. The version of the bootloader needs to be higher than the bootload- er on the device.</p><ul id="l65"><li><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">Turn on secure boot from the Core plugin in AppBuilder by selecting the <b>Enable secure boot </b>option..</p></li></ul></li><li><p class="s11" style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark145" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Generate a public/private Signing Key pair. See section </a>9.3.1 Generating Keys <span style=" color: #000;">for more information on creating a Signing Key pair.</span></p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Write the public key generated from the previous step to the device. The public key is stored as a manufacturing token in the de- vice by default. This key can be written by application code running on the device as long as the Lock Bits page is configured to allow flash writes. If the Lock Bits page is locked, it can only be erased by the debugger. Therefore, signing/decryption keys resid- ing in the Lock Bits page cannot be erased from firmware. This means that, for devices in the field, those areas in flash cannot be replaced with new ones. However, the Gecko Bootloader prepared from step 1 can be modified to look for the decryption and sig- nature keys in a different location. Key locations are defined in the bootloader project file <span class="s15">btl_security_tokens.c</span>.</p></li><li><p class="s11" style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark146" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Prepare a signed application image using the private key generated in step 2. See section </a><a href="#bookmark146" class="s10">9.3.2 Signing an Application Image for</a> Secure Boot <span style=" color: #000;">for more information on signing an application.</span></p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">Create a GBL file using the Gecko Bootloader image and the signed application image. The GBL file needs to be signed/unsigned depending on the configuration of the Gecko Bootloader running on the device. For more details on creating a GBL file see section</p><p class="s11" style="padding-left: 40pt;text-indent: 0pt;text-align: justify;">9.3.3 Creating a Signed and Encrypted GBL Upgrade Image File From an Application<span style=" color: #000;">.</span></p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark67" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Upload the GBL file. For more details on the upgrade process refer to section </a><a href="#bookmark67" class="s10">4.2 Bootloader Upgrade on Application Bootloaders</a> With Storage<span style=" color: #000;">.</span></p></li></ol></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark60">Enabling Secure Boot RTSL on Series 2 Devices</a><a name="bookmark70">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Secure Boot RTSL can be enabled by using the following procedure:</p><ol id="l66"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Prepare a Gecko Bootloader image with secure boot enabled. The version of the Gecko Bootloader needs to be higher than the Gecko Bootloader on the device.</p><ul id="l67"><li><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">Turn on secure boot from the Core plugin in AppBuilder by selecting the <b>Enable secure boot </b>option..</p></li><li><p style="padding-top: 3pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">For EFR32xG21, on the Core plugin, disable the <b>Allow use of public key from manufacturing token storage </b>option. This means that the Gecko Bootloader will never make use of the public key stored in the last page of the main flash.</p></li><li><p style="padding-top: 2pt;padding-left: 53pt;text-indent: -9pt;text-align: justify;">(Optional) On the Core plugin, select the <b>Require signed firmware upgrade files </b>option from the Core plugin. The means that the Gecko Bootloader will only accept signed GBL files.</p></li></ul></li><li><p class="s11" style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark145" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Generate a public/private Signing Key pair. See section </a>9.3.1 Generating Keys <span style=" color: #000;">for more information on creating a Signing Key pair.</span></p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Prepare an application that installs the public key generated from step 2 to the Secure Engine One-time Programmable memory. Installing a key in VSE requires a reset routine. Make sure that the application does not end up in the reset loop. Create an un- signed GBL file from this application and upload it.. For more information on installing public keys, see <i>AN1218: Series 2 Secure Boot with RTSL</i><a href="#bookmark147" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">. For more details on creating a GBL file see section </a><a href="#bookmark147" class="s10">9.3.3 Creating a Signed and Encrypted GBL Upgrade Image File From an </a><span style=" color: #049;">Application</span>.</p></li><li><p class="s11" style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;"><a href="#bookmark146" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Sign the Gecko Bootloader image generated from step 1 using the private key generated in step 2. See section </a><a href="#bookmark146" class="s10">9.3.2 Signing an Application Image for Secure Boot</a> <span style=" color: #000;">for more information on signing binaries.</span></p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: justify;">Make a custom application that turns on secure boot on the Secure Engine and sign this application binary with the private key generated from step 2. For more details on how to turn on secure boot on the Secure Engine, see <i>AN1218: Series 2 Secure Boot with RTSL</i>.</p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">Create a GBL file using the Gecko Bootloader image from step 4 and the application from step 5. The GBL file must be signed if the Core plugin option <b>Require signed firmware upgrade files </b><a href="#bookmark147" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">was selected in step 1. For more details on creating a GBL file see section </a><a href="#bookmark147" class="s10">9.3.3 Creating a Signed and Encrypted GBL Upgrade Image File From an </a><span style=" color: #049;">Application</span>.</p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -9pt;text-align: justify;">Upload the GBL file containing the Gecko Bootloader image and the application.</p></li></ol></li></ol></ol></ol><ol id="l68"><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark71">Gecko Bootloader Operation - Secure Engine Upgrade</a><a name="bookmark77">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Secure Engine is upgradable and requirements for upgrading the Secure Engine vary depending on the bootloader configuration:</p><ul id="l69"><li><p class="s12" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Application bootloader with storage: <span class="p">Upgrading the Secure Engine requires a single GBL file containing both Secure Engine and application upgrade images.</span></p></li><li><p class="s12" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Standalone bootloader with communication interface: <span class="p">Upgrading the Secure Engine requires two GBL files, one with only the Secure Engine upgrade image, and one with only the application upgrade image and optionally a third image containing only the Main bootloader upgrade.</span></p></li></ul><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">A bootloader upgrade can also be included in the same GBL file in application mode, or as a third GBL file in standalone mode. The figures that illustrate Gecko Bootloader operation in this section do not provide information about the bootloader memory layouts for different devices. For more details refer to the section Memory Space for Bootloading in <i>UG103.6: BootloaderFundamentals</i>.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Signed and encrypted Secure Engine upgrade images are provided by Silicon Labs through Simplicity Studio. Upgrade images with the same or lower version number than the running Secure Engine will be ignored.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">To download Secure Engine firmware images, connect a Series 2 device and select a preferred SDK. The Secure Firmware <b>Update to</b></p><p class="s12" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">x.x.x <span class="p">link appears in the Launcher Perspective, as shown in the following figure.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 151pt;text-indent: 0pt;text-align: left;"><span><img width="377" height="294" alt="image" src="ug266-gecko-bootloader-users-guide/Image_012.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Click <b>Update to x.x.x </b>next to Secure FW: x.x.x. A warning dialog box appears. Click [<b>Yes</b>] to continue.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 69pt;text-indent: 0pt;text-align: left;"><span><img width="587" height="129" alt="image" src="ug266-gecko-bootloader-users-guide/Image_013.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Launcher Perspective is then updated so that the current Secure Fimware version and link version are the same.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 140pt;text-indent: 0pt;text-align: left;"><span><img width="408" height="48" alt="image" src="ug266-gecko-bootloader-users-guide/Image_014.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Secure Engine firmware images can be found in the <i>util/se_release/public </i>directory under the Gecko SDK. Simplicity Studio dis- plays the SE firmware version available in the Gecko SDK selected.</p><ol id="l70"><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark72">Secure Engine Upgrade on Bootloaders with Communication Interface (Standalone Bootloaders)</a><a name="bookmark78">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The process is illustrated in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 131pt;text-indent: 0pt;text-align: left;"><span><img width="433" height="503" alt="image" src="ug266-gecko-bootloader-users-guide/Image_015.png"/></span></p><p class="s12" style="padding-top: 4pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 5.1.  Standalone Bootloader: Secure Engine Bootloader Upgrade</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l71"><li><p style="padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">A GBL file containing only a Secure Engine upgrade image is transmitted from the host to the device.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The contents of the GBL Secure Engine tag are written to the pre-configured upgrade location in internal flash, overwriting the ex- isting application.</p></li><li><p style="padding-top: 2pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The device reboots into the Secure Engine.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The Secure Engine is replaced by the new version found in the pre-configured upgrade location.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The device boots into the main bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">A GBL file containing only an application image is transmitted from the host to the device.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The bootloader applies the application image from the GBL upgrade on the fly.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The device boots into the application. Secure Engine upgrade is complete.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l72"><ol id="l73"><ol id="l74"><li><p class="s12" style="padding-top: 5pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark73">Downloading and Applying a Secure Engine GBL Upgrade File</a><a name="bookmark79">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When the bootloader has entered the receive loop, a GBL upgrade file containing a Secure Engine upgrade is transmitted to the boot- loader. When a packet is received, it is passed to the image parser. The image parser parses the data, and returns Secure Engine upgrade data in a callback. The bootloader core implements this callback, and flashes the data to internal flash at the pre-configured bootloader upgrade location.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When a complete Secure Engine upgrade image is received, the main bootloader signals the Secure Engine that it should enter firm- ware upgrade mode. This is done by the Secure Engine communication interface that is used to signal that bootloader upgrade is ready to be performed.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark74">Downloading and Applying an Application GBL Upgrade File</a><a name="bookmark80">&zwnj;</a></p></li></ol></ol></ol><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark42" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Once the Secure Engine upgrade is completed, the existing application is rendered invalid if the Secure Engine upgrade location over- laps with the application. A GBL upgrade file containing an application upgrade is transmitted to the bootloader. The application up- grade process follows that in section </a>3.1 Standalone Bootloader Operation<span style=" color: #000;">.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark75">Secure Engine Upgrade on Application Bootloaders with Storage</a><a name="bookmark81">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The process is illustrated in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 94pt;text-indent: 0pt;text-align: left;"><span><img width="523" height="495" alt="image" src="ug266-gecko-bootloader-users-guide/Image_016.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 5.2.  Application Bootloader: Secure Engine Upgrade</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l75"><li><p style="padding-left: 41pt;text-indent: -8pt;text-align: left;">A single GBL file containing both a Secure Engine upgrade image and an application image is downloaded onto the storage medi- um of the device (internal flash or external SPI flash).</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The main bootloader copies its upgrade image into internal flash at the pre-configured upgrade location.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device reboots into the Secure Engine.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The Secure Engine is replaced by the new version found in the pre-configured upgrade location.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the main bootloader.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The bootloader applies the application image from the GBL upgrade file.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The device boots into the application. Secure Engine upgrade is complete.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;"><a name="bookmark76">5.2.1 Storage Space Size Configuration</a><a name="bookmark82">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The storage space size must be configured to have enough space to store the upgrade images. The below table shows the reserved SE upgrade image sizes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">Device Family</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">Reserved flash for SE upgrade image</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">EFR32xG21</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">48 kB</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">EFR32xG22</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 54pt;padding-right: 53pt;text-indent: 0pt;text-align: center;">24 kB</p></td></tr></table><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark120" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Depending on the configuration, the bootloader size can vary. The size requirements of the bootloader can be found in section </a><a href="#bookmark120" class="s10">7.7 Size </a><span style=" color: #049;">Requirements for Different Bootloader Configurations for Series 1 Devices</span>. The bootloader size for EFR32xG21 devices can be up to 16 kB, and for EFR32xG22 devices, the bootloader size can be up to 24 kB. For more details, refer to the section &quot;Memory Space for Bootloading&quot; in <i>UG103.6: Bootloader Fundamentals</i>.</p></li></ol></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark83">Getting Started with the Gecko Bootloader</a><a name="bookmark84">&zwnj;</a></p></li></ol><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">This section describes how to build a Gecko Bootloader from one of the provided examples. Simplicity Studio 5, used with Gecko SDK Suite (GSDK) v3.x, differs from Simplicity Studio 4, used with GSDK v2.x, in how sample applications are selected and projects are created. Refer to the documentation provided with your SDK for details. These instructions assume that you have installed Simplicity Studio 5, the protocol SDK, and associated utilities as described in the SDK’s quick start guide, and that you are familiar with generat- ing, compiling, and flashing an example application in th relevant version.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l76"><li><p class="s5" style="padding-left: 35pt;text-indent: -9pt;text-align: left;">QSG106: EmberZNet PRO Quick-Start Guide</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">QSG139: Bluetooth® SDK v2.x Quick-Start Guide</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">QSG169: Bluetooth® SDK v3.x Quick-Start Guide</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">QSG138: Proprietary Flex SDK v2.x Quick-Start Guide</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">QSG168: Proprietary Flex SDK v3.x Quick-Start Guide</p></li><li><p class="s5" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">QSG170: Silicon Labs OpenThread SDK Quick-Start Guide</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l77"><li><p style="padding-left: 40pt;text-indent: -8pt;text-align: left;">Create a project based on the Gecko Bootloader example of your choice.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">On the General tab, optionally enter a description.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 100pt;text-indent: 0pt;text-align: left;"><span><img width="528" height="343" alt="image" src="ug266-gecko-bootloader-users-guide/Image_017.jpg"/></span></p></li><li><p style="padding-top: 8pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The Plugins tab shows the configurations selected for the relevant example.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 114pt;text-indent: 0pt;text-align: left;"><span><img width="497" height="323" alt="image" src="ug266-gecko-bootloader-users-guide/Image_018.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 41pt;text-indent: -8pt;text-align: left;">The Storage tab allows you to configure storage slots to be used if a storage plugin is enabled. The default configuration matches the target part and bootloader type.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 114pt;text-indent: 0pt;text-align: left;"><span><img width="500" height="323" alt="image" src="ug266-gecko-bootloader-users-guide/Image_019.jpg"/></span></p></li><li><p style="padding-top: 4pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">Click [<b>Generate</b>].</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">In the Generation Successful dialog, click [<b>OK</b>].</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">Click the Build (hammer) icon.</p></li></ol><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 1 devices, three bootloader images are generated into the build directory: a main bootloader, a main bootloader with CRC32 checksum, and a combined first stage and main bootloader with CRC32 checksum. The main bootloader image is called <b>&lt;project- name&gt;.s37</b>, the main bootloader with CRC32 checksum is called <b>&lt;projectname&gt;-crc.s37</b>, while the combined first stage image + main bootloader image with a CRC32 checksum is called <b>&lt;projectname&gt;-combined.s37</b>. The first time a device is programmed, whether during development or manufacturing, the combined image needs to be programmed. For subsequent programming, when a first stage bootloader is already present on the device, it is okay to download an image containing just the main bootloader. In this case, the main bootloader with CRC32 should be used.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The requirement is that any main bootloader image that is programmed via serial wire must contain the CRC32 in the image. Files downloaded via serial wire are “s37” files. Most often, the <b>&lt;projectname&gt;-combined.s37 </b>file is the one downloaded during production programming. However, it is possible to download only the main bootloader over serial wire, in which case <b>&lt;projectname&gt;-crc.s37 </b>should be used.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Any main bootloader that is upgraded via OTA or host method should already contain CRC32 because bootloader-initiated upgrades use GBL files (not “s37” files) and Simplicity Commander will add the CRC32 when it constructs the GBL file. The input files to Simplici- ty Commander can (and should) use the non-CRC “s37” file.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, the combined image is not present, since the first stage bootloader does not exist. The image containing only a main bootloader is the image that must be used to create a GBL file for bootloader upgrade.</p><ol id="l78"><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark85">Configuring the Gecko Bootloader</a><a name="bookmark103">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l79"><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark86">Configuring Storage</a><a name="bookmark104">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Gecko Bootloaders configured as application bootloaders must include an API to store and access image files. This API is based on the concept of storage slots, where each slot has a predefined size and location in memory, and can be used to store a single upgrade image. This is done by configuring the Storage plugins in the Bootloader application framework in Simplicity Studio.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When multiple storage slots are configured, a bootload list is used to indicate the order in which the bootloader should access slots to find upgrade images. If multiple storage slots are supported, the application should write the bootload list by calling <span class="s15">bootloader_setImageToBootload </span>before rebooting into the bootloader to initiate a firmware upgrade process. The bootloader at- tempts to verify the images in these storage slots in sequence, and applies the first image to pass verification. If only a single storage slot is supported, the bootloader uses this slot implicitly.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l80"><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark87">SPI Flash Storage Configuration</a><a name="bookmark105">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">When configuring a Gecko Bootloader to obtain images from SPI flash, modify the following.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The <b>base address of the storage area </b>should be configured in the Common Storage plugin. This is the address at which the bootload- er places the bootload list, if more than one storage slot is configured. In the default configuration, this address is set to 0. If only a single storage slot is configured, the bootload list is not used, so configuring it may be omitted.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The <b>location and size of the storage slots </b>can be configured on the Storage tab in AppBuilder. The addresses input here are abso- lute addresses (they are not offsets from the base address). If more than a single slot is configured, space must be reserved between the base address as configured in the Common Storage plugin and the first storage slot configured on the Storage tab. Enough space to fit two copies of the bootload list must be reserved. These two copies need to reside on different flash pages, to provide redundancy in case of power loss during writing. Two full flash pages therefore need to be reserved. In the default example application, a SPI flash part with 4 kB flash sectors is used. This means that 8 kB must be reserved before the first storage slot. The following figure illustrates how the storage area can be partitioned, where the numbers in the top row represent the starting addresses.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 103pt;text-indent: 0pt;text-align: left;"><span><img width="526" height="173" alt="image" src="ug266-gecko-bootloader-users-guide/Image_020.jpg"/></span></p><p class="s12" style="padding-top: 4pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 7.1.  SPI Flash Storage Area Configuration</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark88">Internal Storage Configuration</a><a name="bookmark106">&zwnj;</a></p><p style="padding-top: 8pt;text-indent: 0pt;text-align: right;">When configuring a Gecko Bootloader to obtain images from intenal flash, modify the following.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The <b>base address of the storage area </b>should be configured in the Common Storage plugin. This is the address at which the bootload- er will place the prioritized list of storage slots to attempt to bootload from, if more than one storage slot is configured. In the default configuration, only a single storage slot is configured, so this value is set to 0, and isn’t used. If more than one storage slot is config- ured, this value needs to be configured too.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The <b>location and size of the storage slots </b>can be configured on the Storage tab in AppBuilder. The addresses input here are abso- lute addresses (they are not offsets from the base address). If more than a single slot is configured, enough space must be reserved between the base address as configured in the Common Storage plugin and the first storage slot configured on the Storage tab. Enough space to fit two copies of the bootload list must be reserved. These two copies need to reside on different flash pages, to pro- vide redundancy in case of power loss during writing. Two full flash pages therefore need to be reserved. The following figure illustrates how the storage area can be partitioned.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 103pt;text-indent: 0pt;text-align: left;"><span><img width="526" height="173" alt="image" src="ug266-gecko-bootloader-users-guide/Image_021.jpg"/></span></p><p class="s12" style="padding-top: 4pt;text-indent: 0pt;text-align: right;">Figure 7.2. Internal Storage Area Configurations</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">The storage area partitioning in the example for two storage slots above does not take any NVM system into account. If using an NVM system like SimEE or PS Store, take care to place and size the storage area in such a way that bootloader storage does not overlap with NVM.</span></p></li></ol></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark89">Compressed Upgrade Images</a><a name="bookmark107">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader optionally supports compressed GBL files. In a compressed GBL file, only the application upgrade data is com- pressed, any metadata and bootloader upgrade data (if present) stay uncompressed. This means that a compressed GBL file is identi- cal to a normal (uncompressed) GBL file, except that the GBL Programming Tag containing the application upgrade image (as descri- bed in <i>UG103.6: Bootloader Fundamentals</i>) has been replaced by a GBL LZ4 Compressed Programming Tag or GBL LZMA Com- pressed Programming Tag. Signature and encryption operations on a compressed GBL work identically to on an uncompressed GBL.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">To be able to use compressed upgrade images, a decompressor for the relevant compression algorithm must be added to the Gecko bootloader. The following table shows which compression algorithms are supported by the Gecko Bootloader, and which AppBuilder plugin should be added to enable the feature. The table also shows how much space the decompressor takes up in the bootloader, and how big of a size reduction to expect for the compressed application upgrade image. Be aware of the bootloader size requirement. The bootloader space might be too small to fit the decompressors, depending on the device and enabled plugins.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:30pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Compression Algorithm</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Plugin</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">Bootloader Size Requirement</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 32pt;padding-right: 3pt;text-indent: -28pt;text-align: left;">Application Upgrade Size Re- duction (typical)</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">LZ4</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Compression (LZ4)</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">&lt; 1 kB</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">~ 10%</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">LZMA</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL Compression (LZMA)</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">~5 kB flash, 18 kB RAM</p></td><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 3pt;padding-right: 3pt;text-indent: 0pt;text-align: center;">~ 30%</p></td></tr></table><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">It is important to note that the compressed GBL file stays compressed while being transferred to the device, and while it is stored in the upgrade area. It is decompressed by the bootloader when the upgrade is applied. This means that the running application in main flash will be identical to one that was installed using an uncompressed (normal) GBL file.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Compressed GBL files can only be decompressed by the bootloader when running standalone, not through the Application Interface. This means that upgrade image verification performed by the application prior to reboot will not attempt to decompress the application upgrade, it will only verify the signature of the compressed payload. After rebooting into the bootloader, it will decompress the image as part of the upgrade process.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><b>Note: </b>The above means that Bluetooth in-place application upgrades cannot be compressed, as they are processed by the Bluetooth Supervisor or AppLoader using functionality in the bootloader through the Application Interface. Supervisor/stack and AppLoader up- dates <i>can </i>be compressed, but the user application cannot.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l81"><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark90">LZMA Compression Settings</a><a name="bookmark108">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">LZMA decompression is only supported for images compressed with certain compression settings. Simplicity Commander automatically uses these settings when using the <span class="s15">commander gbl create --compress lzma </span>command.</p><ul id="l82"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Probability model counters: lp + lc &lt;= 2. Simplicity Commander uses lp=1, lc=1.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Dictionary size no greater than 8 kB. Simplicity Commander uses 8 kB.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Together, these settings cause the decompressor to require 18 kB of RAM for decompression – 10 kB for the counters and 8 kB for the dictionary.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The GBL LZMA Compressed Programming Tag contains a full LZMA file, containing the LZMA header, raw stream, and end mark. The Gecko bootloader only supports decompressing payloads that contain the end mark as the last 8 bytes of the compressed stream.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark91">Bootloader Example Configurations</a><a name="bookmark109">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following sections describe the key configuration options for the example bootloader applications.</p><p class="s12" style="padding-top: 6pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <a href="#bookmark144" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Security features are disabled for all example configurations. In development, Silicon Labs strongly recommends enabling securi- ty features to prevent unauthorized parties from uploading untrusted program code. See the section </a><a href="#bookmark144" class="s10">9.3 Using Application Image Secur- </a><span class="s11">ity Features </span><span class="p">to learn how to configure the security features of the Gecko Bootloader.</span></p><ol id="l83"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark92">UART XMODEM Bootloader</a><a name="bookmark110">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Standalone bootloader for EFM32 and EFR32 devices running the EmberZNet PRO and Silicon Labs Connect protocol stacks, using XMODEM-CRC over UART.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In this configuration, the XMODEM UART communication plugin, XMODEM parser plugin, and UART driver plugin are enabled. In order for the example application to run on a custom board, the GPIO ports and pins used for UART need to be configured. This is done by going to the Plugins tab of the AppBuilder project, and selecting the UART driver plugin. Here, Hardware Flow Control can be enabled or disabled, and the baud rate and pinout can be configured.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The GPIO activation plugin is also enabled by default, allowing bootloader entry into firmware upgrade mode by activating a GPIO through reset. This plugin can be disabled if this functionality is not desired, or the GPIO pin used for this can be configured under the GPIO Activation plugin on the Plugins tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark93">BGAPI UART DFU Bootloader</a><a name="bookmark111">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Standalone bootloader for the Bluetooth protocol stack, using the BGAPI protocol for UART DFU. This bootloader should be used for all NCP-mode Bluetooth applications.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In this configuration, the BGAPI UART DFU communication plugin and UART driver plugin are enabled. In order for the example appli- cation to run on a custom board, the GPIO ports and pins used for UART need to be configured. This is done by going to the Plugins tab of the AppBuilder project, and selecting the UART driver plugin. Here, Hardware Flow Control can be enabled or disabled, and the baud rate and pinout can be configured.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The GPIO activation plugin is also enabled by default, allowing bootloader entry by activating a GPIO through reset. This plugin can be disabled if this functionality is not desired, or the GPIO pin used for this can be configured under the GPIO Activation plugin on the Plugins tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark94">EZSP SPI Bootloader</a><a name="bookmark112">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Standalone bootloader for EmberZNet PRO and Silicon Labs Connect protocol stacks using EZSP for SPI.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In this configuration, the EZSP SPI communication plugin, XMODEM parser plugin, and SPI slave driver plugin are enabled. In order for the example application to run on a custom board, the GPIO ports and pins used for SPI and EZSP signaling need to be configured. This is done by going to the Plugins tab of the AppBuilder project, and selecting the SPI slave and EZSP SPI plugins respectively.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The EZSP GPIO activation plugin is also enabled by default, allowing bootloader entry into firmware upgrade mode by activating a GPIO through reset. This plugin can be disabled if this functionality is not desired, or the GPIO pin used for this can be configured under the EZSP GPIO Activation plugin on the Plugins tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark95">SPI Flash Storage Bootloader</a><a name="bookmark113">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Application bootloader for all wireless protocol stacks, using an external SPI flash to store upgrade images received over the air by the application.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In this configuration, the SPI flash and common storage plugins, as well as the SPI driver plugin, are enabled. In order for the example application to run on a custom board, the GPIO ports and pins used for SPI communication with the external flash need to be config- ured in the SPI plugin, and the type of SPI flash needs to be configured in the SPI flash plugin. The base address of the storage area can be configured in the Common Storage plugin. The location and size of the storage slots themselves can be configured on the Stor- age tab in AppBuilder.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The SPI Flash storage bootloader provides customizable callback functions, which can be found in <i>bootloader-callback-stubs.c</i>. The callback functions <i>storage_customInit </i>and <i>storage_customShutdown </i>for example can be used for custom hardware setups. Those call- back functions can be interfaced from the applications using the bootloader interface functions such as <i>bootloader_init </i>and <i>bootload- er_deinit </i>from <i>api/btl_interface.h</i>.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark96">Internal Storage Bootloader</a><a name="bookmark114">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Application bootloader for all wireless protocol stacks, using internal flash to store upgrade images received over the air by the applica- tion. Multiple examples are provided, including configurations for 512 kB flash memory devices like EFR32xG13, 1024 kB flash memory devices like EFR32xG12, and 2048 kB flash memory devices like EFM32GG11. <b>The storage layout should be modified before run- ning the bootloader on any other devices. </b>In this configuration, the internal flash and common storage plugins are enabled. The base address of the storage area is configured in the Common Storage plugin. The location and size of the storage slots can be config- ured on the Storage tab in AppBuilder. Default example applications are provided with configurations for both single storage slot and multiple storage slots.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The default storage slot configurations provided by the Gecko Bootloader <b>must </b>be configured to match the use-case-specific applica- tion configurations.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 139pt;text-indent: 0pt;text-align: center;">Table 7.1.  Internal Storage Bootloader Default Storage Configurations</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-right: 88pt;text-indent: 0pt;text-align: right;">Sample Applications</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">Storage Offset</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">Storage Size</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;text-align: left;">Internal Storage Bootloader (single image on 256 kB device)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x21800 (137216)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">88064</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;text-align: left;">Internal Storage Bootloader (single image on 352 kB device)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x28000 (163840)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">147456</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;text-align: left;">Internal Storage Bootloader (single image on 512 kB device)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 8pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x44000 (278528)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 8pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">196608</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;text-align: left;">Internal Storage Bootloader (single image on 1 MB device)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 8pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x84000 (540672)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 8pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">458752</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;text-align: left;">Internal Storage Bootloader (single image on 2 MB device)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x10000 (1048576)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">1011712</p></td></tr><tr style="height:30pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;padding-right: 14pt;text-indent: 0pt;text-align: left;">Internal Storage Bootloader (multiple im- ages on 1 MB device)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 8pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0x5A000 (368640)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 8pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">337920</p></td></tr><tr style="height:19pt"><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-right: 88pt;text-indent: 0pt;text-align: right;">&quot;</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">0xAC800 (706560)</p></td><td style="width:180pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 22pt;padding-right: 22pt;text-indent: 0pt;text-align: center;">337920</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark97">Image Acquisition Application Example Configuration</a><a name="bookmark115">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">These examples illustrate applications that acquire and store a GBL upload image for an application bootloader. For the running boot- loader to accept an application upgrade, the new application version must be higher than the existing version. The version number can set in AppBuilder by defining the macro “APP_PROPERTIES_VERSION” in the Additional Macros field on the Other tab.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l84"><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark98">USB Device Loader</a><a name="bookmark116">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">USB device loader for devices with a USB interface using the USB device protocol stack to implement a Mass Storage Class device (MSD).</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">For this example to run, the device must have already been flashed with the Internal Storage Bootloader from the Gecko Bootloader Examples.</p><p class="s11" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark67" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Once connected to a PC via USB, the kit appears as an MSD with a FAT12 formatted disk where a gbl file containing the upgrade image can be dragged and dropped. When a valid upgrade file is detected, the application will wait for the file to be fully transferred. As soon as the transfer is complete, the flash memory allocated for the bootloader storage is reprogrammed with the gbl file. After the bootloader storage is reprogrammed, the upgrade proceeds as explained in </a><a href="#bookmark67" class="s10">4.2 Bootloader Upgrade on Application Bootloaders With </a>Storage<span style=" color: #000;">.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The Max file size of the upgrade image can be configured under Options within the USB Device Loader plugin in AppBuilder. If the device must be buspowered, also enable the Build buspowered device option in that plugin.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark99">USB Host Loader</a><a name="bookmark117">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">USB host loader for devices with a USB interface, using USB host and the MSD modules in the Drivers directory to implement support for the Mass Storage Device (MSD).</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">For this example to run, the device must have already been flashed with the Internal Storage Bootloader from the Gecko Bootloader Examples.</p><p class="s11" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark67" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">When an MSD device is connected to the kit, which now acts like the host, it will start look for a valid gbl file containing the upgrade image. Once found, the flash memory allocated for the bootloader storage is reprogrammed with the gbl file. After the bootloader stor- age is reprogrammed, the upgrade procedure explained in </a>4.2 Bootloader Upgrade on Application Bootloaders With Storage<span style=" color: #000;">.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">In this configuration, the FatFs AppBuilder plugin is enabled.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-top: 5pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark100">Setting a Version Number</a><a name="bookmark118">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark63" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">In order to distinguish between different builds of the Gecko Bootloader, it is useful to set a version number. In order to perform a boot- loader upgrade, not only must the running bootloader pass its integrity checks as described in section </a><a href="#bookmark63" class="s10">4.1.1 Downloading and Applying </a><span style=" color: #049;">a Bootloader GBL Upgrade File</span>, the bootloader upgrade image must also have a higher version number than the running bootloader image. A version number can be set in the Application Builder by defining the macro “BOOTLOADER_VERSION_MAIN_CUSTOMER” in the Additional Macros field on the Other tab, and checking the “-D?” checkbox to add the definition to the compiler command line. This macro will be picked up by the config file <b>btl_config.h, </b>where it is combined with the version number of the Gecko Bootloader files provided by Silicon Labs.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark101">Hardware Configuration</a><a name="bookmark119">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader AppBuilder framework integrates with the Hardware Configurator for configuration of pinout and other hardware- related settings. When Hardware Configurator configuration is available for an AppBuilder plugin, the relevant settings are shown in the Hardware Configurator section of the AppBuilder plugin configuration.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;"><span><img width="716" height="216" alt="image" src="ug266-gecko-bootloader-users-guide/Image_022.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 7.3.  Example of USART Configuration for UART Driver</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">The standalone Hardware Configurator User Interface can also be used to configure settings for Gecko Bootloader if desired.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">While Hardware Configurator provides configuration for many different peripherals, the Gecko Bootloader uses only the following Hard- ware Configurator modules:</p><ul id="l85"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">SERIAL is used by the UART Driver plugin to configure baud rate, flow control mode and pinout.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">VCOM is used by the UART Driver plugin to enable the serial interface if necessary (only on Silicon Labs Wireless Starter Kits).</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">EXTFLASH is used by the SPI Driver to configure frequency and pinout.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">SPINCP is used by the SPI Slave Driver to configure pinout.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">BTL_BUTTON is used by the GPIO Activation plugin.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">CMU HFXO frequency setting is used by the delay driver to calibrate timing if the core is running from the HFXO.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Other settings, like CMU oscillator configuration or DCDC configuration, are not taken into consideration by the default bootloader code. If using these configuration settings is desired, the required code must be added in <span class="s15">btl_main.c</span>.</p><p class="s12" style="padding-top: 5pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <a href="#bookmark156" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">While the delay driver uses the HFXO frequency setting from Hardware Configurator, the HFXO enable setting is not used to initialize the HFXO on startup. This setting is only used when calling the bootloader through the Application Interface as described in section </a><span class="s11">10. Application Interface</span><span class="p">, and the application has switched to the HFXO prior to calling the Bootloader Application Interface API.</span></p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark102">Size Requirements for Different Bootloader Configurations for Series 1 Devices</a><a name="bookmark120">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Enabling different configuration options for the Gecko Bootloader changes the size of the resulting image. The following table shows a list of example bootloader configurations and their resulting approximate size of the main bootloader. Note that any size above 14 kB will be too large to fit in the bootloader area of flash of EFR32xG13, and that any size above 16 kB will be too large to fit in the boot- loader area of flash on EFR32xG14 and EFM32TG11. This table was last updated for Gecko SDK Suite 2.5 (Gecko Bootloader 1.8), and no guarantees are made that a configuration of a specific size with one SDK version will maintain that size in future releases.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-left: 139pt;text-indent: 0pt;text-align: center;">Table 7.2.  Bootloader Size Requirements</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Base Configuration</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Enabled Options</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">Size (kB)</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">XMODEM UART</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">17.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Internal storage, single slot</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">11</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">11</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">16</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Internal storage, multiple slots</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">11.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">11.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">16.5</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SPI flash, single slot</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">17</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SPI flash, multiple slots</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">14</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">18</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">BGAPI UART</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">12</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">17</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">EZSP SPI</p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Default configuration</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">13</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZ4 compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">14</p></td></tr><tr style="height:19pt"><td style="width:135pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:315pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Secure boot, signed and encrypted upgrade, LZMA compression</p></td><td style="width:90pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 24pt;padding-right: 24pt;text-indent: 0pt;text-align: center;">18</p></td></tr></table><p class="s16" style="padding-bottom: 3pt;padding-left: 344pt;text-indent: 0pt;text-align: left;">Simplicity Commander and the Gecko Bootloader</p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug266-gecko-bootloader-users-guide/Image_023.png"/></span></p></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark121">Simplicity Commander and the Gecko Bootloader</a><a name="bookmark123">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Simplicity Commander is a single, all-purpose tool to be used in a production environment. It is invoked using a simple CLI (Command Line Interface that is also scriptable. You can use Simplicity Commander to perform these essential tasks:</p><ul id="l86"><li><p style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Generating key files for signing and encryption</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Signing application images for Secure Boot</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Creating GBL images (encrypted or unencrypted, signed or unsigned)</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Parsing GBL images</p></li></ul><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Simplicity Commander is used throughout the examples in the following sections. For more information on executing the commands to complete these tasks, refer to <i>UG162: Simplicity Commander Reference Guide</i>.</p><p class="s12" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Note: <span class="p">Simplicity Commander also offers a GUI (Graphical User Interface) that can be used in the lab for typical tasks such as flashing device images. The functions described in this User Guide are performed from the CLI.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l87"><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark122">Creating GBL Files Using Simplicity Commander</a><a name="bookmark124">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To create an unsigned GBL file from an application <b>myapp.s37</b>, execute <span class="s15">commander gbl create myapp.gbl --app myapp.s37</span>.</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">To create an unsigned GBL file from a main bootloader upgrade <b>mybootloader.s37</b>, execute <span class="s15">commander gbl create mybootloader.gbl --bootloader mybootloader.s37. </span>This file can be used with the standalone bootloader configurations of the Gecko Bootloader.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">To create an unsigned GBL file from a Secure Engine, upgrade <b>mySecureEngine.seu</b>, and execute <span class="s15">commander gbl create mySecureEngine.gbl --seupgrade mySecureEngine.seu</span>. The Secure Engine images, .seu, are provided by Silicon Labs and can be found through Simplicity Studio. See section .</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">These commands can also be combined to create a single upgrade image, suitable for use with application bootloader configurations of the Gecko Bootloader: <span class="s15">commander gbl create myupgrade.gbl --app myapp.s37 --bootloader mybootloader.s37 --seupgrade mySecureEngine.seu</span>.</p></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: -15pt;text-align: left;"><a name="bookmark125">Gecko Bootloader Security Features</a><a name="bookmark139">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l88"><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark126">About Bootloader Image Security</a><a name="bookmark140">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Secure Boot and Secure Firmware Upgrade, discussed in the following sections, enable Gecko Bootloader to provide authenticity and integrity checks on the Application image, which provides a sufficient level of security for many applications. However, in systems with- out a hardware root of trust, no process checks the authenticity or integrity of the Gecko Bootloader itself. Its security is provided solely by the device hardware and the robustness of the software running on the device.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The native behavior of Firmware Upgrade will prevent accidental version rollback of Gecko Bootloader under normal usage conditions. However, without a hardware root of trust, intentional downgrade attacks may be feasible. If a higher level of security assurance is re- quired by the application, using a Series 2 device with hardware root of trust and anti-rollback protection is recommended. For more information, refer to <i>AN1218: Series 2 Secure Boot with RTSL</i>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark127">About Application Image Security</a><a name="bookmark141">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The Gecko Bootloader can enforce security on two levels:</p><ul id="l89"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Secure Boot refers to the verification of the authenticity of the application image in main flash on every boot of the device.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Secure Firmware Upgrade refers to the verification of the authenticity of an upgrade image before performing a bootload, and op- tionally enforcing that upgrade images are encrypted.</p></li></ul><ol id="l90"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark128">Secure Boot Procedure</a><a name="bookmark142">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When Secure Boot is enabled, the cryptographic signature of the application image in flash is verified on every boot, before the applica- tion is allowed to run. Secure Boot is not enabled by default in the example configurations provided by Silicon Labs, but enabling it is highly recommended to ensure the validity and integrity of firmware images.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Signature Algorithms</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader supports the ECDSA-P256-SHA256 cryptographic signature algorithm. This is the ECDSA (elliptical curve digital signature algorithm) of the SHA-256 digest of the application firmware image, using the NIST P-256 (secp256r1) curve.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Summary of Operation</p><ol id="l91"><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">On boot, the bootloader checks the application image for information about whether it is signed.</p></li><li><p style="padding-top: 3pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">The type of signature and signature location is determined.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">If the type of signature does not match the requirements of the bootloader, the bootloader enters device firmware upgrade mode and prevents the application from running.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">According to the chosen signature algorithm, the signature of the contents of flash from the beginning of the application to the loca- tion of the signature is compared to the signature at the signature location.</p></li><li><p style="padding-top: 2pt;padding-left: 40pt;text-indent: -8pt;text-align: left;">If the signatures do not match, the bootloader enters device firmware upgrade mode and prevents the application from running.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Secure Boot using ECDSA-P256-SHA256</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">For an image to be signed for Secure Boot, the application needs to contain a copy of the <b>ApplicationProperties_t </b>struct. This struct contains information about which signature algorithm is used, and where to find the signature.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">On every boot, the bootloader calculates the SHA-256 digest of the application image, from the beginning of the application to the start of the signature. The signature of the SHA-256 digest is then verified using ECDSA-P256.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If the signature is valid, the application is allowed to boot. Else, the bootloader is entered, and an application upgrade is attempted if one is available.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The public key used for signature verification is stored as a manufacturing token on Series 1 and EFR32xG22 devices. On EFR32xG21 devices, the public key can either be stored as a manufacturing token or stored in the Secure Engine One-time Programmable memory (OTP). Simplicity Commander can be used to generate a key pair and write the public key to the device. See <i>UG162: Simplicity Commander Reference Guide </i>for more information.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Secure Boot with Application Rollback Protection</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On every boot, the application version in the <b>ApplicationData_t </b>struct is stored at the end of the bootloader area in flash, which is used to prevent applications from being downgraded. The application version can remain the same for upgrades. The bootloader will only allow applications to increment its version 6 times by default. The bootloader can be upgraded after that to reset the stored application versions and to allow application upgrades again. The allowed number of upgrades can be increased by modifying linkerfiles to reserve an extra 4 bytes for each version and by increasing SL_GBL_APPLICATION_VERSION_STORAGE_CAPACITY from <i><b>btl_bootload.c </b></i>. <b>For Series 2 devices, this option is not applicable on devices with Secure Engine configured to perform full page lock. </b>If the bootloader area in flash is locked by Secure Engine, the bootloader will not be able to store the application versions in flash, and it would continue without performing that function.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The application rollback prevention feature can be enabled in AppBuilder&#39;s Core plugin by selecting the <b>Enable application rollback protection </b>option. The <b>Minimum application version allowed </b>option can be used to configure the minimum application version that should be allowed to boot.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The application versions are stored in the bootloader area in flash. To properly protect the stored application versions, it is recommen- ded to lock the bootloader flash by selecting the <b>Prevent bootloader write/erase </b>option in AppBuilder&#39;s Core plugin.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Secure Boot Using a Certificate</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">On Series 2 devices, a certificate-based secure boot operation is supported. The Certificate contains:</p><ul id="l92"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Struct version: The version of the certificate structure.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Public key: ECDSA-P256 public key, X and Y coordinates concatenated, used to validate the image.</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Certificate version: The version of the running certificate.</p></li><li><p style="padding-top: 3pt;padding-left: 23pt;text-indent: 3pt;line-height: 182%;text-align: left;">Signature: ECDSA-P256 signature, used for the authentication of the public key and the certificate version. The definition of the certificate struct can be found in <span class="s15">api/application_properties.h</span>.</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">To utilize certificate-based secure boot, configure Secure Engine to authenticate the bootloader image by configuring the certificate- based secure boot option in the Secure Engine OTP. Configure the Gecko Bootloader to enable certificate-based secure boot in App- Builder&#39;s Core plugin by selecting the <b>Enable certificate support </b><a href="#bookmark149" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">option. The Gecko Bootloader certificate must be signed by the pri- vate key pair of the public key stored in the Secure Engine OTP. For more information on the key storage, refer to section </a><a href="#bookmark149" class="s10">9.4.1 Key </a><span style=" color: #049;">Storage</span>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The certificate-based secure boot procedure is illustrated in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 65pt;text-indent: 0pt;text-align: left;"><span><img width="603" height="199" alt="image" src="ug266-gecko-bootloader-users-guide/Image_024.png"/></span></p><p class="s12" style="padding-top: 7pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 9.1.  Certificate-Based Secure Boot Procedure</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">Once the certificate-based secure boot option on Secure Engine is turned on, Secure Engine verifies the Gecko Bootloader certificate. The public key stored in the certificate is used to validate the signature of the Gecko Bootloader. Secure Engine will not accept boot- loader images without a certificate.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If only the secure boot option is enabled (not certificate-based) on Secure Engine, and Secure Engine identifies a certificate, the certifi- cate will be used to validate the bootloader image. If the certificate version from the bootloader image is higher than 0 and it gets veri- fied once, Secure Engine will never again accept direct signed bootloader images without a certificate.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;line-height: 182%;text-align: justify;">The Gecko Bootloader will authenticate the direct signed application using the public key stored in the Gecko Bootloader certificate. If the application contains a certificate, Gecko Bootloader will authenticate it. The procedure is illustrated in the following figure.</p><p style="padding-left: 56pt;text-indent: 0pt;text-align: left;"><span><img width="632" height="201" alt="image" src="ug266-gecko-bootloader-users-guide/Image_025.png"/></span></p><p class="s12" style="padding-top: 5pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Figure 9.2.  Advanced Certificate-Based Secure Boot Procedure</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">After authentication of the application certificate, Gecko Bootloader verifies the signature of the application using the public key from the application certificate. In addition, Gecko Bootloader compares the Gecko Bootloader certificate version against the application certifi- cate version. All application images with a certificate version lower than the certificate version of the Gecko Bootloader will be rejected. Gecko Bootloader can be configured to only allow applications with certificate to boot in AppBuilder&#39;s Core plugin by selecting the <b>Re- ject direct signed images </b>option.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The <b>ApplicationProperties_t </b>struct contains the certificate struct <b>ApplicationCertificate_t</b>. The certificate struct can be injected to im- ages that contain an <b>ApplicationProperties_t </b>with <b>ApplicationCertificate_t</b>. To inject a certificate to an image, issue the following command from Simplicity Commander:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander convert &lt;image file&gt; --secureboot --keyfile &lt;signing key&gt; --certificate &lt;certificate&gt;</p><p class="s15" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">--outfile &lt;signed image file with certificate&gt;</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/></li></ol></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark129">Secure Firmware Upgrade</a><a name="bookmark143">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader supports a secure firmware upgrade process. This is achieved by using symmetric encryption to encrypt the upgrade image, and asymmetric cryptography to sign the upgrade image in order to ensure its integrity and authenticity.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Encryption Algorithms</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader supports the AES-CTR-128 encryption algorithm. The GBL upgrade file is encrypted using 128-bit AES in Coun- ter mode with a random nonce as the initial counter value.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The AES-128 key used for decryption, more commonly called the OTA decryption key, is stored as a manufacturing token on Series 1 and EFR32xG22 devices. On EFR32xG21 devices, the OTA decryption key can either be stored as a manufacturing token or stored in the Secure Engine OTP. To make use of the OTA decryption key stored in the Secure Engine OTP, the <b>Use symmetric key stored in Secure Engine storage </b>option in AppBuilder’s Core plugin has to be selected. Simplicity Commander can be used to generate an OTA decryption key and write the key to the device. See <i>UG162: Simplicity Commander Reference Guide </i>for more information. For more information on storing the OTA decryption key on Series 2 devices, see <i>AN1222: Production Programming of Series 2 Devices</i>.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The Secure Engine OTP key support depends on the SE Manager plugin, which is enabled by default.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Signature Algorithms</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko Bootloader supports the ECDSA-P256-SHA256 cryptographic signature algorithm. This is the ECDSA signature of the SHA-256 digest of the GBL upgrade file, using the NIST P-256 (secp256r1) curve.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Summary of Operation</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Before starting a firmware upgrade process, the application can verify an image in storage by calling into the bootloader verification functions.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">During firmware upgrade, the GBL file is parsed, and if encrypted, decrypted on-the-fly. A GBL Signature Tag in the GBL file indicates to the bootloader that the file is signed, and the signature is verified. If signature verification fails, the firmware upgrade process is abor- ted.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, Gecko Bootloader will authenticate the GBL signature tag using the public key stored in the bootloader certificate if the <b>Enable certificate support </b>option is selected in AppBuilder&#39;s Core plugin. A GBL Certificate tag in the GBL file indicates to the bootloader that the GBL certificate tag needs to be authenticated using the public key stored in the bootloader certificate. The certificate version in the GBL certificate tag is compared with the bootloader certificate and only a version equal or higher than the bootloader certificate is accepted. Once the GBL certificate tag is authenticated, the GBL file&#39;s signature is verified using the authenticated public key from the GBL certificate tag. On EFRxG21 devices, the GBL certificate tag can also be signed by the private key pair of the public key stored in the Secure Engine OTP.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-top: 5pt;padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark130">Using Application Image Security Features</a><a name="bookmark144">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">In this example, we assume that a bootloader called <b>bootloader-uart-xmodem </b>has been built using the Application Builder in Simplici- ty Studio. For a Series 1 device, three files of interest have been generated in the output directory:</p><ul id="l93"><li><p class="s12" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">bootloader-uart-xmodem.s37 <span class="p">– This file contains the main bootloader. Can be used for bootloader upgrade.</span></p></li><li><p class="s12" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">bootloader-uart-xmodem-crc.s37 <span class="p">- This file contains the main bootloader with CRC32 checksum.</span></p></li><li><p class="s12" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">bootloader-uart-xmodem-combined.s37 <span class="p">– This file contains the first stage and main bootloader with a CRC32 checksum in a sin- gle image. Can be used for manufacturing and initial deployment of the bootloader.</span></p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;line-height: 182%;text-align: left;">The relevant version can be flashed to the EFR32 using the Flash Programmer in Simplicity Studio, or using Simplicity Commander. For Series 2 devices, only the main bootloader binary is generated.</p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">This example provides two ways of signing the upgrade images. The first option uses Simplicity Commander to generate key material and sign data. This is suitable for development. The second option uses an external signer, such as a dedicated Hardware Security Module (HSM) to protect private key material and perform signing operations. Silicon Labs recommends using an HSM to safeguard private keys.</p><ol id="l94"><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark131">Generating Keys</a><a name="bookmark145">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">In order to use the security features of the Gecko Bootloader, encryption and signing keys need to be generated. These keys must then written to the EFR32 device. The encryption key is used with the GBL file for secure firmware upgrade. The signing keys are used both with the GBL file for secure firmware upgrade and to sign the application image for Secure Boot.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Generating a Signing Key Using Simplicity Commander</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">commander util genkey --type ecc-p256 --privkey signing-key --pubkey signing-key.pub --tokenfile signing-key- tokens.txt</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">This creates an ECDSA-P256 key pair for signing: <b>signing-key </b>contains the private key in PEM format, and <b>must be kept secret from third parties</b>. This key will later be used to sign images and GBL files. <b>signing-key.pub </b>contains the public key in PEM format, and can be used to verify GBL files using <span class="s15">commander gbl parse</span>. <b>signing-key-tokens. txt </b>contains the public key in token format, suitable for writing to the EFR32 device.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Generating a Signing Key Using a Hardware Security Module</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">When using a Hardware Security Module, the private key is kept secret inside the HSM. According to the instructions from your HSM vendor, have it generate an ECDSA-P256 key pair and export the public key in PEM format to the file <b>signing-key.pub</b>. Then use Sim- plicity Commander to convert the key to token format, suitable for writing to the EFR32 device.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander gbl keyconvert --type ecc-p256 signing-key.pub --outfile signing-key-tokens.txt</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p class="s12" style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Generating an Encryption Key</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander util genkey --type aes-ccm --outfile encryption-key</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">This creates an AES-128 key for encryption in the file <b>encryption-key</b>. The file has token format, making it suitable to write to the EFR32 device using <span class="s15">commander flash --tokenfile</span>.</p><p class="s12" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Writing Keys to the Device</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">To write the two token files containing the encryption key and public key as manufacturing tokens to the device, issue the following command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander flash --tokengroup znet --tokenfile encryption-key --tokenfile signing-key-tokens.txt</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-top: 4pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark132">Signing an Application Image for Secure Boot</a><a name="bookmark146">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">If the bootloader enforces Secure Boot, the application needs to be signed in order to pass verification. On every boot, a SHA-256 di- gest of the application is calculated. The signature is verified using ECDSA-P256, with the same public key as for the GBL file signing. Signature verification failure prevents the application from booting.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Application images should contain an <b>ApplicationProperties_t </b>struct declaring the application version, capabilities, and other metada- ta. If <b>ApplicationProperties_t </b>is missing, the application image cannot be signed. For more details on adding <b>ApplicationProper- ties_t</b><a href="#bookmark157" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">, refer to section </a><span style=" color: #049;">10.1 Application Properties</span>.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Using Simplicity Commander</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Signing the application can be done with the command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander convert myapp.s37 --secureboot --keyfile signing-key --outfile myapp-signed.s37</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p class="s12" style="padding-top: 6pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Using a Hardware Security Module</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">The application can be prepared for signing by issuing the command:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander convert myapp.s37 --secureboot --extsign --outfile myapp-for-signing.s37</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Using an HSM, sign the output file <b>myapp-for-signing.s37</b>, and supply the resulting DER-formatted signature file <b>signature.der </b>back to Simplicity Commander:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">commander convert myapp-for-signing.s37 --secureboot --signature signature.der --verify signing-key.pub</p><p class="s15" style="padding-left: 2pt;text-indent: 0pt;text-align: left;">--outfile myapp-signed.s37</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark133">Creating a Signed and Encrypted GBL Upgrade Image File From an Application</a><a name="bookmark147">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">To create a GBL file from an application, use <span class="s15">commander gbl create</span>.</p><p style="padding-top: 7pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note that, as of this writing, secure application images can only be constructed through Simplicity Commander, not through the configu- ration options available through AppBuilder.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">Application images should contain an <b>ApplicationProperties_t </b>struct declaring the application version, capabilities, and other metada- ta. If <b>ApplicationProperties_t </b>is missing, the application image cannot be signed. For more details on adding <b>ApplicationProper- ties_t</b><a href="#bookmark157" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">, refer to section </a><span style=" color: #049;">10.1 Application Properties</span>.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Using Simplicity Commander to Sign</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">For an application called <b>myapp.s37</b>, use:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 20pt;text-indent: 0pt;text-align: left;"><span class="s18" style=" background-color: #D8D8D8;"> commander gbl create myapp.gbl --app myapp.s37 --sign signing-key --encrypt encryption-key                      </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">This single command performs three actions:</p><ul id="l95"><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Creates a GBL file</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Encrypts the GBL file</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Signs the GBL file</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">If Secure Boot is also desired, the application must be signed using <span class="s15">commander convert --secureboot </span>prior to creating the GBL.</p><p class="s12" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Using a Hardware Security Module to Sign</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">For an application called <b>myapp-signed.s37</b>, which has previously been signed for Secure Boot, use:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 5pt;padding-left: 20pt;text-indent: 0pt;text-align: left;"><span class="s18" style=" background-color: #D8D8D8;"> commander gbl create myapp-for-signing.gbl --app myapp-signed.s37 --extsign --encrypt encryption-key            </span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: left;">This command performs the following actions:</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Creates a partial GBL file</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Encrypts the partial GBL file</p></li><li><p style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: left;">Prepares the partial GBL file for signing by an external signer</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Using an HSM, sign the output file <b>myapp-for-signing.gbl.extsign</b>, and supply the resulting DER-formatted signature file <b>signa- ture.der </b>back to Simplicity Commander:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;line-height: 107%;text-align: left;">commander gbl sign myapp-for-signing.gbl.extsign --signature signature.der --verify signing-key.pub --outfile myapp.gbl</p><p style="padding-left: 20pt;text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The GBL file is not valid until the signature has been applied using <span class="s15">gbl sign</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li></ol></li><li><p class="s12" style="padding-left: 40pt;text-indent: -17pt;text-align: left;"><a name="bookmark134">System Security Considerations</a><a name="bookmark148">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The Gecko bootloader security features can be used to create a secure device, but do not create a secure system by themselves. This section goes over considerations that need to be taken when designing a secure system where the Gecko Bootloader is a component.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l96"><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark135">Key Storage</a><a name="bookmark149">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">On Series 1 devices, the decryption and public sign keys used by the Gecko bootloader are stored in the Lockbits page in flash. To prevent a rogue application from being able to change or wipe the keys, the Lockbits page should be write protected after the keys have been written in manufacturing.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, the decryption key and the sign key used by the Gecko Bootloader can either be stored in the topmost page of the main flash or in the Secure Engine OTP. The decryption key can be provisioned in the Secure Engine OTP using Simplicity Command- er or using the Secure Engine Mailbox interface. The keys are not accessible from the user applications on EFR32xG22 devices, which means that the keys used by Gecko Bootloader need to be stored in the topmost page of the main flash. Once a key value has been programmed into the Secure Engine OTP, it cannot be changed. For more details, refer to <i>AN1218: Series 2 Secure Boot with RTSL </i>and <i>UG162: Simplicity Commander Reference Guide</i>.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The default behavior of the Gecko Bootloader is to use the sign key stored in the Secure Engine OTP to perform the signature verifica- tion. If the sign key is not provisioned, the Gecko Bootloader will try to use the public sign key stored in the topmost page of the main flash. This fallback mechanism can be disabled by unchecking the “Allow use of public key from manufacturing token storage” plugin option from the Core plugin in AppBuilder.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark136">Write-Protecting the Bootloader</a><a name="bookmark150">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">By default, the region in flash used by the Gecko bootloader is readable and writeable. The region needs to stay readable in order for the Application Interface to be able to interact with the bootloader. Immediately after reset, the region also needs to be writable in order to be able to perform bootloader upgrades.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: left;">Series 1</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">It is possible to write-protect the bootloader region on EFR32xG12 and newer. This is done by setting the write-once MSC_BOOTLOA- DERCTRL_BLWDIS bit on every bootup on Series 1 devices. The pages are write-protected until the next reboot. This is done by the Gecko bootloader main stage if the “Prevent bootloader write/erase” plugin option is enabled in the Core plugin in AppBuilder.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On EFR32xG1, where the bootloader resides in main flash rather than the information block, the BLWDIS option does not exist. On EFR32xG1, the first flash page containing the first stage bootloader can be write-protected with a Page Lock word, using <span class="s15">commander device protect --write --range 0x0:+0x800</span>. If bootloader upgrades are to be supported, the pages containing the main bootload- er need to stay writeable.</p><p class="s12" style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Setting MSC_BOOTLOADERCTRL_BLWDIS will also prevent debuggers from flashing a new bootloader. This means that de- bug tools that do not completely halt and reset the target device before re-flashing might fail to flash the new bootloader, as the flash is write-protected. If you are unsure whether your debug tools will handle this gracefully, Silicon Labs recommends keeping this setting disabled during development, and enabling it before going into production. If your debug tools halt and reset the target device before flashing, this is not an issue, and Silicon Labs recommends enabling this setting early in the development cycle.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Series 2</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, the write-once MSC_PAGELOCKx register is used to write-protect the pages used by the bootloader if the “Pre- vent bootloader write/erase” plugin option is enabled in the Core plugin in AppBuilder. The pages are write-protected until the next re- boot.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 48pt;text-indent: -25pt;text-align: left;"><a name="bookmark137">Write-Protecting the Application</a><a name="bookmark151">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, it is also possible to write-protect the application. When the plugin option “Prevent write/erase of verified applica- tion” is enabled, the bootloader will write-protect the pages used by the application after successfully verifying the application signature, before allowing the application to start. This option is only available when Secure Boot of the application is enabled. The MSC_PAGE- LOCKx register is used to protect the pages, and the write protection lasts until the next reboot.</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s12" style="padding-left: 23pt;text-indent: 0pt;line-height: 182%;text-align: justify;"><a name="bookmark138">Debug Access Series 1</a><a name="bookmark152">&zwnj;</a></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">To prevent debugger access to the Series 1 devices, the Debug Lock word needs to be written. Device recovery after enabling the Debug Lock is possible, but will erase the main flash and the Lockbits page. This will erase the main application and the key material stored in the Lockbits page. The Userdata page and bootloader area will survive Debug Unlock, so secrets should not be stored in these locations. To debug lock the device, issue <span class="s15">commander device lock --debug enable</span>. The AAP Lock can be used to perma- nently lock the debug port. This also prevents Debug Unlock. To AAP lock the device, please see the reference manual for your device for the address location of the AAP lock word, and use <span class="s15">commander flash --patch </span>to write the appropriate value to this address.</p><p class="s12" style="padding-top: 7pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Series 2</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">On Series 2 devices, debugger access can be prevented through Secure Engine. Debugger access can be re-enabled after enabling the Debug Lock by issuing device erase. To debug-unlock the device, issue <span class="s15">commander device lock --debug disable </span>from Simplici- ty Commander. This also erases the main flash, which results in the top page of main flash that stores the encryption and signing keys being erased. To permanently lock the debug port, the device erase disable command can first be issued through Secure Engine. Thereafter, the debug lock command can be issued to the Secure Engine. For more details, refer to <i>AN1190: EFR32xG21 Secure De- bug</i>.</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Disabling Debug Access from Software</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;line-height: 11pt;text-align: left;">The software APIs <span class="s15">DBG_DisableDebugAccess(dbgLockModeAllowErase) </span>and <span class="s15">DBG_DisableDebugAccess(dbgLockModePermanent)</span></p><p style="padding-left: 23pt;text-indent: 0pt;line-height: 10pt;text-align: left;">from the EMLIB DBG module can be used from the application to lock the debug interface.</p></li></ol></li></ol></li><li><p class="s9" style="padding-top: 7pt;padding-left: 44pt;text-indent: -21pt;text-align: justify;"><a name="bookmark153">Application Interface</a><a name="bookmark156">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 22pt;text-indent: 0pt;text-align: justify;">The bootloader has an application interface exposed through a function table in the bootloader. The application interface provides APIs to use bootloader functions for storing and retrieving upgrade images, and verifying their integrity. APIs to reboot into the bootloader are also provided. For details see the Gecko Bootloader API Reference, shipped with the SDK in the platform/bootloader/documentation folder.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">If you are not using a protocol stack from Silicon Labs, the <b>api/btl_interface.h </b>header provides the bootloader application interface API. If you are using a protocol stack from Silicon Labs, the recommended bootloader interface API for the specific protocol stack should be used instead. The following files provide the implementation of the bootloader interface:</p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">api/btl_interface.c <span class="p">(common interface)</span></p><p class="s12" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">api/btl_interface_storage.c <span class="p">(interface to storage functionality)</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The application interface consists of functions that can be included into the customer application, and that communicate with the boot- loader through the <b>MainBootloaderTable_t</b>. This table contains function pointers into the bootloader. The 10th word of the bootloader contains a pointer to this structure, allowing any application to easily locate it. Using the wrapper functions provided in the Bootloader Interface API is preferred over accessing the bootloader table directly. Modules include:</p><ul id="l97"><li><p class="s12" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Application Parser Interface: <span class="p">Application interface for interfacing with the bootloader image parser.</span></p></li><li><p class="s12" style="padding-top: 3pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Application Storage Interface: <span class="p">Application interface for interfacing with the bootloader storage. The Storage Interface is only avail- able on bootloaders that support the storage interface.</span></p></li><li><p class="s12" style="padding-top: 2pt;padding-left: 35pt;text-indent: -9pt;text-align: justify;">Common Application Interface: <span class="p">Generic application interface available on all versions of the bootloader, independently of which plugins are present.</span></p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l98"><li><p class="s12" style="padding-left: 45pt;text-indent: -22pt;text-align: justify;"><a name="bookmark154">Application Properties</a><a name="bookmark157">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Application images should contain an <b>ApplicationProperties_t </b>struct declaring the application version, capabilities, and other metada- ta. Simplicity Commander extracts the metadata contained in this structure from the application and places it in the GBL upgrade file <b>GBL Application Tag</b>. If the structure is not present in the application, Simplicity Commander will raise an error. The <b>ApplicationPro- perties_t </b>struct can be added to the application images by declaring the struct with the name <b>sl_app_properties</b>, as the startup files provided by Silicon Labs contain a reference to the struct by that name. The contents of this tag can be extracted from a GBL file by a running application using the Application Storage interface. Note that the <b>GBL Application Tag </b>will only be added if the GBL file con- tains an application image, not if the GBL file only contains a bootloader upgrade or metadata.</p><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">The structure in the application is also used to declare whether the application image is signed, and what type of signature is used. This information is added by Simplicity Commander when signing the image using <span class="s15">commander convert (--secureboot</span>, <span class="s15">--extsign </span>or <span class="s15">-- signature</span>). In order for the bootloader to locate the <b>ApplicationProperties_t </b>struct, if not already done by the linker, Simplicity Commander modifies word 13 of the application to insert a pointer to the <b>ApplicationProperties_t </b>struct when signing the application image for Secure Boot.</p></li><li><p class="s12" style="padding-top: 8pt;padding-left: 45pt;text-indent: -22pt;text-align: left;"><a name="bookmark155">Error Codes</a><a name="bookmark158">&zwnj;</a></p></li></ol></li></ol><p style="padding-top: 8pt;padding-left: 22pt;text-indent: 0pt;text-align: justify;">Most Gecko bootloader APIs return error codes. The following table lists the groups of error codes that may be returned. The full list of error codes within each group can be found in api/btl_errorcode.h in the platform/bootloader directory of the SDK, as well as in the API Reference.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:23pt" cellspacing="0"><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">ID</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s13" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x0</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">OK</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x01xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Initialization error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x02xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Image verification error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x04xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Storage error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x05xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Bootload error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x06xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Security error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x07xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Communication error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x09xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">XMODEM parser error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x10xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GBL file parser error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x11xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">SPI slave driver error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x12xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">UART driver error</p></td></tr><tr style="height:19pt"><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">0x13xx</p></td><td style="width:270pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s14" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Compression error</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><h2 style="padding-left: 36pt;text-indent: 0pt;text-align: left;">Smart. Connected. <span class="s19">Energy-Friendly.</span></h2><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="769" height="433" alt="image" src="ug266-gecko-bootloader-users-guide/Image_026.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="ug266-gecko-bootloader-users-guide/Image_027.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s20" style="padding-left: 1pt;text-indent: 0pt;text-align: center;">IoT Portfolio</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products" class="s21">www.silabs.com/products</a></p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="ug266-gecko-bootloader-users-guide/Image_028.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="131" height="131" alt="image" src="ug266-gecko-bootloader-users-guide/Image_029.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s20" style="text-indent: 0pt;text-align: left;">Support &amp; Community</p><p style="padding-top: 1pt;padding-left: 1pt;text-indent: 0pt;text-align: left;"><a href="http://www.silabs.com/community" class="s21">www.silabs.com/community</a></p><p style="text-indent: 0pt;text-align: left;"/><p class="s20" style="padding-top: 5pt;padding-left: 139pt;text-indent: 0pt;text-align: center;">Quality</p><p style="padding-top: 1pt;padding-left: 139pt;text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s21">www.silabs.com/quality</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s22" style="padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s23" style="padding-left: 5pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software imple- menters using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each <span class="s24">specific device, and “Typical” parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the infor</span>- mation supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or <span class="s24">authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required or Life Support Systems without the specific written consent of Silicon Labs. A “Life Support System” is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used </span>in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims <span class="s24">all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications. </span><b>Note: This content may contain offensive terminology that is now obsolete. Silicon Labs is replacing these terms with inclusive language wherever possible. For more </b><a href="http://www.silabs.com/about-us/inclusive-lexicon-project" style=" color: #4C4D4F; font-family:&quot;Lucida Sans&quot;, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt;" target="_blank">information, visit </a><a href="http://www.silabs.com/about-us/inclusive-lexicon-project" class="s27" target="_blank">www.silabs.com/about-us/inclusive-lexicon-project</a></p><p class="s26" style="padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Trademark Information</p><p class="s28" style="padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 117%;text-align: justify;"><span class="s23">Silicon Laboratories Inc.</span>®<span class="s23">, Silicon Laboratories</span>®<span class="s23">, Silicon Labs</span>®<span class="s23">, SiLabs</span>® <span class="s23">and the Silicon Labs logo</span>®<span class="s23">, Bluegiga</span>®<span class="s23">, Bluegiga Logo</span>®<span class="s23">, Clockbuilder</span>®<span class="s23">, CMEMS</span>®<span class="s23">, DSPLL</span>®<span class="s23">, EFM</span>®<span class="s23">, EFM32</span>®<span class="s23">, EFR, Ember</span>®<span class="s24">, Energy Micro, Energy Micro logo and combinations thereof, “the world’s most energy friendly microcontrollers”, Ember</span>®<span class="s23">, EZLink</span>®<span class="s23">, EZRadio</span>®<span class="s23">, EZRadioPRO</span>®<span class="s23">, Gecko</span>®<span class="s23">, Gecko OS, Gecko OS Studio, ISOmodem</span>®<span class="s23">, Precision32</span>®<span class="s23">, ProSLIC</span>®<span class="s23">, Simplicity Studio</span>®<span class="s23">, SiPHY</span>®<span class="s23">, Telegesis, the Telegesis Logo</span>®<span class="s23">, USBXpress</span>® <span class="s23">, Zentri, the Zentri logo and Zentri DMS, Z-Wave</span>®<span class="s23">, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Hold- ings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="148" height="73" alt="image" src="ug266-gecko-bootloader-users-guide/Image_030.png"/></span></p><p class="s26" style="padding-top: 5pt;padding-left: 149pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s26" style="padding-left: 149pt;text-indent: 0pt;line-height: 8pt;text-align: left;">USA</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 149pt;text-indent: 0pt;text-align: left;"><h4 href="http://www.silabs.com/">www.silabs.com</h4></p></body></html>
