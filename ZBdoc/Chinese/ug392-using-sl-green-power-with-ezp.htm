<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>UG392: Using Silicon Labs Green Power with EmberZNet PRO</title><meta name="author" content="Silicon Labs"/><style type="text/css"> * {margin:0; padding:0; text-indent:0; }
 h1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 24pt; }
 .s1 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: underline; font-size: 6pt; }
 .s2 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 .s3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt; }
 .s5 { color: #D81E2A; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt; }
 h3 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 .p, p { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; margin:0pt; }
 .s6 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; vertical-align: 3pt; }
 .a { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s7 { color: #049; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s8 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s9 { color: black; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 9pt; }
 .s10 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 .s11 { color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 h4 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 10pt; }
 .s12 { color: #FFF; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 8pt; }
 .s13 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s14 { color: #FFF; font-family:Arial, sans-serif; font-style: italic; font-weight: normal; text-decoration: none; font-size: 7pt; }
 .s15 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 7pt; }
 .s16 { color: #231F20; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 7pt; }
 h2 { color: #D91F2A; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 14pt; }
 li {display: block; }
 #l1 {padding-left: 0pt; }
 #l1> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 8pt; }
 li {display: block; }
 #l2 {padding-left: 0pt;counter-reset: d1 1; }
 #l2> li>*:first-child:before {counter-increment: d1; content: counter(d1, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 11pt; }
 #l2> li:first-child>*:first-child:before {counter-increment: d1 0;  }
 #l3 {padding-left: 0pt; }
 #l3> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l4 {padding-left: 0pt; }
 #l4> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l5 {padding-left: 0pt; }
 #l5> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l6 {padding-left: 0pt; }
 #l6> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l7 {padding-left: 0pt; }
 #l7> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l8 {padding-left: 0pt; }
 #l8> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l9 {padding-left: 0pt;counter-reset: d2 1; }
 #l9> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l9> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l10 {padding-left: 0pt; }
 #l10> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l11 {padding-left: 0pt; }
 #l11> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l12 {padding-left: 0pt; }
 #l12> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l13 {padding-left: 0pt; }
 #l13> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l14 {padding-left: 0pt; }
 #l14> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l15 {padding-left: 0pt;counter-reset: d2 1; }
 #l15> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l15> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l16 {padding-left: 0pt;counter-reset: d3 1; }
 #l16> li>*:first-child:before {counter-increment: d3; content: counter(d3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l16> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l17 {padding-left: 0pt;counter-reset: d3 1; }
 #l17> li>*:first-child:before {counter-increment: d3; content: counter(d3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l17> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l18 {padding-left: 0pt; }
 #l18> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l19 {padding-left: 0pt;counter-reset: d2 1; }
 #l19> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l19> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l20 {padding-left: 0pt;counter-reset: d3 1; }
 #l20> li>*:first-child:before {counter-increment: d3; content: counter(d3, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l20> li:first-child>*:first-child:before {counter-increment: d3 0;  }
 #l21 {padding-left: 0pt;counter-reset: d4 1; }
 #l21> li>*:first-child:before {counter-increment: d4; content: counter(d4, decimal)". "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l21> li:first-child>*:first-child:before {counter-increment: d4 0;  }
 #l22 {padding-left: 0pt; }
 #l22> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l23 {padding-left: 0pt;counter-reset: d2 1; }
 #l23> li>*:first-child:before {counter-increment: d2; content: counter(d1, decimal)"."counter(d2, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l23> li:first-child>*:first-child:before {counter-increment: d2 0;  }
 #l24 {padding-left: 0pt;counter-reset: k1 5; }
 #l24> li>*:first-child:before {counter-increment: k1; content: counter(k1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l24> li:first-child>*:first-child:before {counter-increment: k1 0;  }
 #l25 {padding-left: 0pt;counter-reset: k2 1; }
 #l25> li>*:first-child:before {counter-increment: k2; content: counter(k1, decimal)"."counter(k2, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l25> li:first-child>*:first-child:before {counter-increment: k2 0;  }
 #l26 {padding-left: 0pt;counter-reset: k3 1; }
 #l26> li>*:first-child:before {counter-increment: k3; content: counter(k1, decimal)"."counter(k2, decimal)"."counter(k3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l26> li:first-child>*:first-child:before {counter-increment: k3 0;  }
 #l27 {padding-left: 0pt; }
 #l27> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l28 {padding-left: 0pt; }
 #l28> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 #l29 {padding-left: 0pt;counter-reset: n1 5; }
 #l29> li>*:first-child:before {counter-increment: n1; content: counter(n1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l29> li:first-child>*:first-child:before {counter-increment: n1 0;  }
 #l30 {padding-left: 0pt;counter-reset: n2 2; }
 #l30> li>*:first-child:before {counter-increment: n2; content: counter(n1, decimal)"."counter(n2, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l30> li:first-child>*:first-child:before {counter-increment: n2 0;  }
 #l31 {padding-left: 0pt;counter-reset: n3 1; }
 #l31> li>*:first-child:before {counter-increment: n3; content: counter(n1, decimal)"."counter(n2, decimal)"."counter(n3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l31> li:first-child>*:first-child:before {counter-increment: n3 0;  }
 li {display: block; }
 #l32 {padding-left: 0pt; }
 #l32> li>*:first-child:before {content: "• "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt; }
 li {display: block; }
 #l33 {padding-left: 0pt;counter-reset: p1 5; }
 #l33> li>*:first-child:before {counter-increment: p1; content: counter(p1, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l33> li:first-child>*:first-child:before {counter-increment: p1 0;  }
 #l34 {padding-left: 0pt;counter-reset: p2 3; }
 #l34> li>*:first-child:before {counter-increment: p2; content: counter(p1, decimal)"."counter(p2, decimal)" "; color: black; font-style: normal; font-weight: normal; text-decoration: none; }
 #l34> li:first-child>*:first-child:before {counter-increment: p2 0;  }
 #l35 {padding-left: 0pt;counter-reset: p3 1; }
 #l35> li>*:first-child:before {counter-increment: p3; content: counter(p1, decimal)"."counter(p2, decimal)"."counter(p3, decimal)" "; color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt; }
 #l35> li:first-child>*:first-child:before {counter-increment: p3 0;  }
 table, tbody {vertical-align: top; overflow: visible; }
</style></head><body><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="126" height="62" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_001.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h1 style="padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">UG392: Using Silicon Labs Green Power with EmberZNet PRO</h1><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="1" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_002.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s1" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">KEY POINTS                                                                         </p><p style="text-indent: 0pt;text-align: left;"><br/></p><ul id="l1"><li><p class="s2" style="padding-left: 17pt;text-indent: -7pt;text-align: left;">Introduces Green Power.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes a basic Green Power network.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Explains Green Power commissioning and operational model.</p></li><li><p class="s2" style="padding-top: 3pt;padding-left: 17pt;text-indent: -7pt;text-align: left;">Describes the Silicon Labs Green Power devices, their plugins, and callbacks.</p></li></ul><p style="text-indent: 0pt;text-align: left;"/><p class="s3" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">This application note introduces the Silicon Labs Green Power components within the EmberZNet PRO stack and explains how to enable your network for Green Power. This document assumes readers are familiar with the basic Green Power concepts dis- cussed in <i>UG103.15: Silicon Labs Green Power Fundamentals</i>.</p><p class="s5" style="padding-bottom: 3pt;text-indent: 0pt;text-align: right;">Introduction to Green Power</p><p style="padding-left: 24pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="713" height="0" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_003.png"/></span></p><ol id="l2"><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark0">Introduction to Green Power</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Zigbee<span class="s6">® </span><a href="https://zigbeealliance.org/solution/zigbee/" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">Green Power (ZGP) is included in the Zigbee 3.0 specification (Z3) (</a><span style=" color: #049;">Zigbee Alliance, Zigbee 3.0 specification</span>). It is an end-to- end open standard that allows ultra-low power devices called Green Power Devices (GPDs) to operate on Zigbee networks.</p><p class="s7" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><a href="https://zigbeealliance.org/wp-content/uploads/2019/11/Green-Power-White-Paper.pdf" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;" target="_blank">Green Power is actually a number of technologies combined into one global standard that includes these features (</a><a href="https://zigbeealliance.org/wp-content/uploads/2019/11/Green-Power-White-Paper.pdf" class="a" target="_blank">Zigbee Green Pow- </a>er<span style=" color: #000;">, Cam Williams):</span></p><ul id="l3"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Energy harvesting technology.</p><ul id="l4"><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Includes mechanical, heat, light, pressure (piezo), and other energy harvesting technology.</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Ultra-low power RF silicon that uses many orders of magnitude less power than required for a sleepy or fully networked wireless connection.</p><ul id="l5"><li><p style="padding-top: 2pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Uses ultra-low power, non-volatile memory such as Ferroelectric RAM (FRAM).</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">An open, global standard network technology that saves even more energy by reducing packet length, round trips, connection redis- covery, and on-network time for devices that may be offline for extended periods of time.</p><ul id="l6"><li><p style="padding-top: 2pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Zigbee – 15.4 – 2.4Ghz modules</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">An open, global, standard application layer protocol that supports compressed messages and limited transactions using:</p><ul id="l7"><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Zigbee Application Framework (AF)</p></li><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Zigbee Cluster Library (ZCL)</p></li></ul></li></ul></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark1">Basic Green Power Network</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">A basic Green Power (GP) network consists of three devices:</p><ul id="l8"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Device (GPD)</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">A Z3 Proxy or Green Power Proxy (GPP)</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">A Green Power Sink (GPS)</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">GPD Frames (GPDF) are transmitted by the GPD devices and received by a Proxy or a Combination (Sink and Proxy) device. The GPP will then encapsulate the received GPDF within a standard Zigbee frame and forward the GPDF packets across the Zigbee PRO / Z3 network in the form of notifications to the Sink that that has been paired with the end device. In a Combination device, the Proxy side is responsible for forwarding the GPDF packets. The following figure illustrates the data flow from the GPD to the GPP and finally to the GPS.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><span><img width="723" height="317" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_004.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 2.1.  Basic Green Power Message Transmission</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">As indicated in the following figure, the GPDF is shorter than a standard Zigbee frame (indicated by the dashed line). This allows a GPD to transmit a GPDF using less power than a standard Zigbee frame as the radio transmitter is active for less time.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 135pt;text-indent: 0pt;text-align: left;"><span><img width="429" height="173" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_005.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 2.2.  GPDF Size</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">GPDs are primarily one-way devices once in use, although they may optionally (if designed) support bidirectional data exchange during pairing. GPDs should not be considered end devices and Zigbee considers them as less than Zigbee End Devices (ZEDs). For more information on ZEDs, see <i>UG103.2: Zigbee Fundamentals</i>.</p><ol id="l9"><li><p class="s8" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark2">How Does Green Power Fit in a Zigbee Network?</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The Zigbee stack architecture is illustrated in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 138pt;text-indent: 0pt;text-align: left;"><span><img width="415" height="382" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_006.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 2.3.  Zigbee Stack Architecture</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Green Power data exchanges are handled by a dedicated block or &quot;stub&quot; for the Zigbee Network (NWK) Layer and the Application Sup- port Sub-layer (APS). Green Power has three elements within the Zigbee stack architecture:</p><ul id="l10"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Common GP (cGP) stub</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Dedicated GP (dGP) stub</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Dedicated LPED (dLPED) stub</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following table describes each of the stubs in more detail.</p><p style="padding-top: 3pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">•</p><p class="s8" style="padding-top: 1pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Table 2.1.  Green Power Stubs</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:48.5748pt" cellspacing="0"><tr style="height:19pt"><td style="width:172pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s10" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Stub name</p></td><td style="width:343pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s10" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:73pt"><td style="width:172pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Common GP (cGP)</p></td><td style="width:343pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;padding-right: 3pt;text-indent: 0pt;text-align: left;">Performs the basic functions shared by Low Power EndPoint (LPED) and GP. It per- forms just enough processing to pass application data frames to the Medium Access Control (MAC) layer for transmission and to pass the GPDF payload from the MAC to the relevant dedicated stub on receipt. The cGP stub is accessible to the higher layers through two special Service Access Points (SAPs)—CGP-SAP and CZLPED- SAP.</p></td></tr><tr style="height:94pt"><td style="width:172pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Dedicated GP (dGP)</p></td><td style="width:343pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;padding-right: 4pt;text-indent: 0pt;text-align: left;">Performs just enough processing to pass application data frames to the cGP stub for transmission and to pass GPD commands from the cGP stub to the Green Power cluster on the Green Power EndPoint on receipt. The dGP stub is accessible to the higher layers through a special SAP—GP-SAP—which is parallel to the normal Ap- plication Support Sublayer Data Entity (APSDE)-SAP. The dGP communication ar- chitecture does not support simultaneous execution by multiple application entities. A ZigBee router is assumed to have only one proxy application entity (Green Power EndPoint) that will use the GP communication mechanism.</p></td></tr><tr style="height:30pt"><td style="width:172pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Dedicated LPED (dLPED)</p></td><td style="width:343pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;padding-right: 14pt;text-indent: 0pt;text-align: left;">This stub, as well as the corresponding LPED-SAPs, are out of scope of this User Guide and will be defined separately by the Low Power End Device Task</p></td></tr></table></li><li><p class="s8" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark3">Green Power Devices</a></p><p class="s7" style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark11" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">GPDs are ultra-low power and even batteryless devices that can utilize this communications method to send messages to Zigbee devi- ces. GPDs can only send and receive GPDFs. GPDs can never be a part of the Zigbee network because they have a different frame format. (See Section </a>4.1.1 Frame Format <span style=" color: #000;">for more information.) Some typical GPDs are shown in the following figure.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 169pt;text-indent: 0pt;text-align: left;"><span><img width="338" height="52" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_007.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 2.4.  Typical Green Power Devices</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s8" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark4">Green Power Infrastructure Devices</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">ZGP devices that operate within a normal Zigbee network are called <i>infrastructure devices</i>. These devices can handle GPDFs in some way. There are two general types of infrastructure devices:</p><ul id="l11"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Proxy (GPP)</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Sink (GPS)</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The GP specification defines the entire set of features for each of these devices. Some of these features are optional and some are mandatory, called <i>Basic </i>by Zigbee. As a result, there is a set of sub-names: Green Power Proxy Basic (GPPB), Green Power Sink Basic (GPSB) and Green Power Combo Basic (GPCB + GPSB) that implements the functionality for both Proxy and Sink within a single device.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following figure illustrates two GP infrastructure devices.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 138pt;text-indent: 0pt;text-align: left;"><span><img width="414" height="286" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_008.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-top: 4pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 2.5.  Green Power Device Types</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Proxy (GPP)</p><ul id="l12"><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Receives and forwards the GPDF wrapped in a ZCL command over the Zigbee network. This is sometimes called <i>tunneling </i>the GPD command.</p></li><li><p style="padding-top: 2pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Receives the GPDF, hence a Server for GPDF frames.</p></li><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Sends the ZCL tunnel commands to the GPS. This is a client role of GP Cluster in ZCL.</p></li></ul></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Sink (GPS)</p><ul id="l13"><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Receives the tunneled commands and executes them.</p></li><li><p style="padding-top: 3pt;padding-left: 48pt;text-indent: -9pt;text-align: left;">Receives the ZCL tunnel commands from the GPP. This is a server role of GP Cluster in ZCL.</p></li></ul></li></ul><p class="s8" style="padding-top: 6pt;padding-left: 48pt;text-indent: 0pt;text-align: justify;">Note: <span class="p">Even though it is possible to implement a standalone GPS device with EmberZNet PRO with the limitation of in-range di- rect communication with a GPD, a Green Power Combo (GPC) is preferred over a standalone GPS. The reason is that stand- alone sinks are rare because the Z3 specification requires all the routers to be Proxy Basic at minimum. The following sections of this User Guide discuss how to implement a GP Combo (GPC) rather than a GPS.</span></p></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark5">Green Power Commissioning</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Commissioning <span class="p">is the process of adding a GPD to the Zigbee network so it can perform application functionality. This process estab- lishes the GPD in the Proxy Table and in the Sink Table. If there is an infrastructure device (Sink or Combo) that has matching function- ality with the GPD, they can be commissioned as a pair and work together.</span></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The GPD sends a series of GP commands to the listening GP infrastructure device (Sink or Combo) which adds it as a commissioned node for further data transactions. In this command exchange, the GPD and the GP infrastructure device agree on the functionality that matches and the security requirements for additional command/data transactions.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">There are two types of commissioning process based on the capabilities and design of the GPD:</p><ul id="l14"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">Unidirectional Commissioning: The GPD only sends the commissioning commands and does not receive any data back from the Zigbee network. In this type of commissioning, the application must predefine the Zigbee network channel and security require- ments.</p></li><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">Bidirectional Commissioning: The GPD sends and receives data through a series of commands, called <i>commissioning commands</i>. With bidirectional commissioning, the GPD can find the Zigbee network channel and negotiate the security level key. This process consumes more energy because it includes both transmission and receive steps.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l15"><li><p class="s8" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark6">Unidirectional Commissioning</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The following figure illustrates how unidirectional commissioning works.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 36pt;text-indent: 0pt;text-align: left;"><span><img width="696" height="286" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_009.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 3.1.  Unidirectional Commissioning</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l16"><li><p style="padding-left: 41pt;text-indent: -8pt;text-align: left;">The Sink tells the Proxy (or Proxies) to be ready to commission a GPD and enters commissioning mode.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The GPD sends a commissioning packet to join the Proxy.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The Proxy sends this notification to the Sink, which establishes the Sink Table entries.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">The Sink send a pairing packet to the Proxy (or Proxies), which populate the Proxy Table entries.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Both the Sink and the Proxy exit commissioning mode.</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">After completion of these steps, the GPD is ready to operate on the network.</p></li></ol></li><li><p class="s8" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark7">Bidirectional Commissioning</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following figures illustrate how bidirectional commissioning works. It has two phases.</p><ol id="l17"><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: left;">Find the Zigbee network channel.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 59pt;text-indent: 0pt;text-align: left;"><span><img width="669" height="283" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_010.jpg"/></span></p><p class="s8" style="padding-top: 7pt;padding-left: 208pt;text-indent: 0pt;text-align: left;">Figure 3.2. Finding the Zigbee Network Channel</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p style="padding-left: 41pt;text-indent: -8pt;text-align: left;">Execute bidirectional commissioning.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 60pt;text-indent: 0pt;text-align: left;"><span><img width="656" height="282" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_011.jpg"/></span></p><p class="s8" style="padding-top: 7pt;padding-left: 206pt;text-indent: 0pt;text-align: left;">Figure 3.3. Execute Bidirectional Commissioning</p></li></ol></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: justify;"><a name="bookmark8">Green Power Operational Model</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">A GPD is said to be <i>operational </i>when it sends application control commands such as on/off. Typically, such operational commands are useful after the GPD is commissioned to a Zigbee network after the commissioning process. Like commissioning, a GPD can have two operational modes.</p><ul id="l18"><li><p style="padding-top: 2pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">Unidirectional Operation: Sends commands to the Zigbee network and requires a minimum energy budget.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: justify;">Bidirectional Operation: Sends commands receives a response back—for example, reading an attribute from the network. Because this mode sending data to the Zigbee network and receiving data back from the network, it uses more energy.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l19"><li><p class="s8" style="padding-left: 41pt;text-indent: -17pt;text-align: justify;"><a name="bookmark9">Green Power Command Transport</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: justify;">The following figure illustrates a high-level typical GP operational command transport with four GP devices.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;"><span><img width="702" height="313" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_012.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 4.1.  Green Power Command Transport</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: justify;">These are the general steps in the Green Power command transport in the above figure.</p><ol id="l20"><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">GPDm (a GPD with Source Id = m) sends a command N (a GPDF frame) to GPPB1.</p></li><li><p style="padding-top: 3pt;padding-left: 41pt;text-indent: -8pt;text-align: justify;">GPPB1 receives the command N.</p></li><li><p style="padding-top: 3pt;padding-left: 42pt;text-indent: -8pt;text-align: justify;">GPPB1 looks up GPDm in its proxy table to determine whether GPDm has an entry paired with a Sink. If it does, GPPB1 forwards command N as a Zigbee Cluster Library (ZCL) notification to GPPB2. If it does not recognize GPDm after the proxy table lookup, GPPB1 drops the packet.</p></li><li><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -8pt;text-align: justify;">Once GPPB2 receives the notification, it forwards the command further as a ZCL command, as it would do for any other ZCL com- mands in the Zigbee network. (Any router in the Zigbee network would do the same because in Z3, all routers are GPPBs.)</p></li><li><p style="padding-top: 2pt;padding-left: 42pt;text-indent: -8pt;text-align: justify;">The GPCB receives the ZCL notification and processes it by looking up its Sink table to obtain the required information. If all the information is correct and the GPDm is paired to this GPCB, the GPCB processes the command as follows:</p><ol id="l21"><li><p style="padding-top: 8pt;padding-left: 52pt;text-indent: -10pt;text-align: left;">Looks up in its translation table to attempt to translate command N.</p></li><li><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Translates command N to an equivalent Zigbee command (which includes interpreting the command payload) and finds one or more paired application endpoints (which are in the translation table).</p></li><li><p style="padding-top: 8pt;padding-left: 52pt;text-indent: -10pt;text-align: left;">Pushes the Zigbee packet to the identified application endpoint on the node.</p><p class="s8" style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;"><a name="bookmark10">4.1.1 Frame Format</a><a name="bookmark11">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The following figures illustrate the standard format of a Zigbee frame and the format of a generic GP frame. The size difference is be- cause the entire GP frame must fit into the ZCL payload (or addressing).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;"><span><img width="722" height="81" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_013.jpg"/></span></p><p class="s8" style="padding-top: 7pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 4.2.  Zigbee Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 119pt;text-indent: 0pt;text-align: left;"><span><img width="469" height="81" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_014.jpg"/></span></p><p class="s8" style="padding-top: 8pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 4.3.  Green Power Frame Format</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Most of the information contained in the Zigbee NWK header and all the information in the APS headers is not relevant for GP opera- tion. As a result, the GP frame contains a modified NWK header and no APS header, followed by a dedicated application payload. GP frames are compact and shorter, but they contain all the necessary information required for addressing and security.</p></li></ol></li></ol></li></ol></li><li><h3 style="padding-top: 7pt;padding-left: 39pt;text-indent: -15pt;text-align: left;"><a name="bookmark12">Silicon Labs Green Power within EmberZNet PRO</a></h3><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">There are three Silicon Labs Green Power devices within EmberZNet PRO:</p><ul id="l22"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Device</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Proxy Basic</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Green Power Combo Basic</p></li></ul><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following sections describe some of the main features, plugins, and callbacks for each device type.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l23"><li><p class="s8" style="padding-top: 5pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark13">Green Power Device</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">A device that is outside a Zigbee network and can send commands to the Zigbee network via a GPP.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l24"><ol id="l25"><ol id="l26"><li><p class="s8" style="padding-top: 5pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark14">Plugins</a></p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">These are the plugins related to a GPD application and its components available in the GPD framework.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 121pt;text-indent: 0pt;text-align: left;"><span><img width="462" height="307" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_015.jpg"/></span></p><p class="s8" style="padding-top: 7pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.1.  Green Power Device Plugins</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 24pt;text-indent: 0pt;text-align: left;">The GPD framework provides functional modules in the form of plugins described in the following table.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-top: 4pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Table 5.1.  Green Power Device Plugin Descriptions</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><table style="border-collapse:collapse;margin-left:24pt" cellspacing="0"><tr style="height:19pt"><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s10" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Plugin Name</p></td><td style="width:441pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt" bgcolor="#797777"><p class="s10" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Description</p></td></tr><tr style="height:134pt"><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">GPD</p></td><td style="width:441pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;padding-right: 8pt;text-indent: 0pt;text-align: left;">GPD App Configuration: Configures application capability and device parameters. It also consists of a set of modules that provide application-level functions such as main, node configuration, and commissioning.</p><p class="s11" style="padding-top: 1pt;padding-left: 2pt;padding-right: 18pt;text-indent: 0pt;line-height: 19pt;text-align: left;">GPD CLI: Provides a basic set of Command Line Interface (CLI) commands for development and testing. GPD Components: Includes a set of modules to provide the following capabilities:</p></td></tr><tr style="height:19pt"><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">HAL</p></td><td style="width:441pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">HAL Library: Includes a set of low-layer peripheral and board support modules.</p></td></tr><tr style="height:19pt"><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">RAIL</p></td><td style="width:441pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Includes the RAIL library.</p></td></tr><tr style="height:19pt"><td style="width:99pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Utility</p></td><td style="width:441pt;border-top-style:solid;border-top-width:1pt;border-left-style:solid;border-left-width:1pt;border-bottom-style:solid;border-bottom-width:1pt;border-right-style:solid;border-right-width:1pt"><p class="s11" style="padding-top: 3pt;padding-left: 2pt;text-indent: 0pt;text-align: left;">Provides mbedTLS functionality.</p></td></tr></table><ul id="l27"><li><p class="s11" style="padding-top: 1pt;padding-left: 15pt;text-indent: -9pt;text-align: left;">Wrapper interface to RAIL layer</p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 15pt;text-indent: -9pt;text-align: left;">Sending and receiving bidirectional GPDFs</p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 15pt;text-indent: -9pt;text-align: left;">GPDF packet formation and parsing</p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 15pt;text-indent: -9pt;text-align: left;">GPDF security tagging and validation wrappers for the mbed TLS plugin</p></li><li><p class="s11" style="padding-top: 3pt;padding-left: 15pt;text-indent: -9pt;text-align: left;">Nonvolatile memory wrapper functions</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s8" style="padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark15">Callbacks</a></p></li></ol></ol></ol><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following figure illustrates the set of callbacks available for user interaction that provide information and accept inputs.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 27pt;text-indent: 0pt;text-align: left;"><span><img width="715" height="431" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_016.jpg"/></span></p><p class="s8" style="padding-top: 8pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.2.  Green Power Device Callbacks</p></li><li><p class="s8" style="padding-top: 8pt;padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark16">Green Power Proxy Basic</a><a name="bookmark22">&zwnj;</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Green Power Proxy Basic has the following key features:</p><ul id="l28"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Receives Green Power Frames.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Converts Green Power Frames to ZCL commands.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Is involved in commissioning new devices.</p></li></ul><p style="text-indent: 0pt;text-align: left;"><br/></p><ol id="l29"><ol id="l30"><ol id="l31"><li><p class="s8" style="padding-top: 5pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark17">Plugins</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Plugins implement the functionality for the mandatory incoming commands. On the Plugin tab, ensure the following plugins are enabled.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 130pt;text-indent: 0pt;text-align: left;"><span><img width="443" height="230" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_017.jpg"/></span></p><p class="s8" style="padding-top: 8pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.3.  Green Power Proxy Basic Plugins</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: left;">The Green Power Client plugin implements most of the Proxy functionality while the Green Power Common plugin provides some of the common functions and utility that is shared by both the Green Power Server and the Green Power Client.</p><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">When you enable a Green Power Client plugin, make sure to set the correct desired options as shown in the following figure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 27pt;text-indent: 0pt;text-align: left;"><span><img width="713" height="214" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_018.jpg"/></span></p><p class="s8" style="padding-top: 8pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.4.  Green Power Client Plugin Options</p></li><li><p class="s8" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark18">Callbacks</a></p></li></ol></ol></ol><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">The following figure illustrates the Green Power cluster incoming commands callbacks that are implemented by the Green Power Client as part of the Green Power Proxy Basic.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 56pt;text-indent: 0pt;text-align: left;"><span><img width="634" height="426" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_019.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.5.  Green Power Proxy Client Callbacks</p><p style="text-indent: 0pt;text-align: left;"><br/></p></li><li><p class="s8" style="padding-left: 41pt;text-indent: -17pt;text-align: left;"><a name="bookmark19">Green Power Combo Basic</a><a name="bookmark23">&zwnj;</a></p></li></ol></li></ol><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">Green Power Combo Basic has the following key features:</p><ul id="l32"><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Receives Green Power Frames.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Converts Green Power Frames to ZCL commands.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Commissions new devices.</p></li><li><p style="padding-top: 3pt;padding-left: 36pt;text-indent: -9pt;text-align: left;">Is commanded by Green Power Devices.</p></li></ul><ol id="l33"><ol id="l34"><ol id="l35"><li><p class="s8" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark20">Plugins</a></p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">Plugins implement the functionality for the mandatory incoming commands for both the client and the server. On the Plugin tab, ensure the following plugins are enabled.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: left;"><span><img width="720" height="349" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_020.jpg"/></span></p><p class="s8" style="padding-top: 6pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.6.  Green Power Sink Combo Plugins</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 23pt;text-indent: 0pt;text-align: justify;">Set <b>Hidden ZCL Message Proxy Endpoint </b>to one of the application endpoints implemented by the Green Power Combo Basic to al- low the AF to send the operational command forwarding. Set <b>ZCL Message Default Destination Endpoint </b>to one of the application endpoints.</p></li><li><p class="s8" style="padding-top: 8pt;padding-left: 49pt;text-indent: -25pt;text-align: left;"><a name="bookmark21">Callbacks</a></p></li></ol></ol></ol><p style="padding-top: 8pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">The following figure illustrates the Green Power Cluster incoming command callbacks that are implemented by the Green Power Client and the Green Power Server.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 94pt;text-indent: 0pt;text-align: left;"><span><img width="530" height="503" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_021.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s8" style="padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.7.  Green Power Cluster Command Callbacks</p><p style="padding-top: 8pt;padding-left: 24pt;text-indent: 0pt;text-align: justify;">The following figure illustrates the set of callbacks that the Green Power Server uses as application callbacks.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 81pt;text-indent: 0pt;text-align: left;"><span><img width="567" height="236" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_022.jpg"/></span></p><p class="s8" style="padding-top: 8pt;padding-left: 176pt;text-indent: 0pt;text-align: center;">Figure 5.8.  Green Power Server Application Callbacks</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s7" style="padding-left: 24pt;text-indent: 0pt;text-align: justify;"><span class="s8">Note: </span><a href="#bookmark22" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">Section </a>5.2 Green Power Proxy Basic <a href="#bookmark23" style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 9pt;">and section </a>5.3 Green Power Combo Basic <span style=" color: #000;">explained the implementation for a System-on- Chip (SoC) architecture. The Silicon Labs Zigbee application framework provides a Host-xNCP architecture for implementing a GPP or GPC. The plugins and callbacks remain the same and present on the host framework and the Green Power Library has the same set- tings as the above and remains on the xNCP.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 17pt;text-indent: 0pt;text-align: left;">Smart. Connected. Energy-Friendly.</h4><p style="padding-left: 5pt;text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Products</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/products" class="s13">www.silabs.com/products</a></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Quality</p><p style="text-indent: 0pt;text-align: center;"><a href="http://www.silabs.com/quality" class="s13">www.silabs.com/quality</a></p><p class="s12" style="text-indent: 0pt;line-height: 9pt;text-align: center;">Support and Community</p><p class="s14" style="text-indent: 0pt;text-align: center;">community.silabs.com</p><p style="padding-left: 64pt;text-indent: 0pt;text-align: left;"><span style=" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;">		</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="767" height="695" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_023.png"/></span></p><p class="s15" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">Disclaimer</p><p class="s16" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Labs intends to provide customers with the latest, accurate, and in-depth documentation of all peripherals and modules available for system and software implementers using or intending to use the Silicon Labs products. Characterization data, available modules and peripherals, memory sizes and memory addresses refer to each specific device, and &quot;Typical&quot; parameters provided can and do vary in different applications. Application examples described herein are for illustrative purposes only. Silicon Labs reserves the right to make changes without further notice to the product information, specifications, and descriptions herein, and does not give warranties as to the accuracy or completeness of the included information. Without prior notification, Silicon Labs may update product firmware during the manufacturing process for security or reliability reasons. Such changes will not alter the specifications or the performance of the product. Silicon Labs shall have no liability for the consequences of use of the information supplied in this document. This document does not imply or expressly grant any license to design or fabricate any integrated circuits. The products are not designed or authorized to be used within any FDA Class III devices, applications for which FDA premarket approval is required, or Life Support Systems without the specific written consent of Silicon Labs. A &quot;Life Support System&quot; is any product or system intended to support or sustain life and/or health, which, if it fails, can be reasonably expected to result in significant personal injury or death. Silicon Labs products are not designed or authorized for military applications. Silicon Labs products shall under no circumstances be used in weapons of mass destruction including (but not limited to) nuclear, biological or chemical weapons, or missiles capable of delivering such weapons. Silicon Labs disclaims all express and implied warranties and shall not be responsible or liable for any injuries or damages related to use of a Silicon Labs product in such unauthorized applications.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Trademark Information</p><p class="s16" style="padding-left: 5pt;text-indent: 0pt;text-align: justify;">Silicon Laboratories Inc.®, Silicon Laboratories®, Silicon Labs®, SiLabs® and the Silicon Labs logo®, Bluegiga®, Bluegiga Logo®, ClockBuilder®, CMEMS®, DSPLL®, EFM®, EFM32®, EFR, Ember®, Energy Micro, Energy Micro logo and combinations thereof, &quot;the world’s most energy friendly microcontrollers&quot;, Ember®, EZLink®, EZRadio®, EZRadioPRO®, Gecko®, Gecko OS, Gecko OS Studio, ISOmodem®, Precision32®, ProSLIC®, Simplicity Studio®, SiPHY®, Telegesis, the Telegesis Logo®, USBXpress® , Zentri, the Zentri logo and Zentri DMS, Z- Wave®, and others are trademarks or registered trademarks of Silicon Labs. ARM, CORTEX, Cortex-M3 and THUMB are trademarks or registered trademarks of ARM Holdings. Keil is a registered trademark of ARM Limited. Wi-Fi is a registered trademark of the Wi-Fi Alliance. All other products or brand names mentioned herein are trademarks of their respective holders.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="152" height="75" alt="image" src="ug392-using-sl-green-power-with-ezp/Image_024.png"/></span></p><p class="s15" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">Silicon Laboratories Inc. 400 West Cesar Chavez Austin, TX 78701</p><p class="s15" style="padding-left: 168pt;text-indent: 0pt;text-align: left;">USA</p><p style="padding-top: 5pt;padding-left: 168pt;text-indent: 0pt;text-align: left;"><h2 href="http://www.silabs.com/">http://www.silabs.com</h2></p></body></html>
